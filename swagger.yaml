openapi: 3.0.0
info:
  title: Validation API
  version: 1.0.1
paths:
  /entities/{entityId}/rulesets:
    post:
      tags:
        - ruleSets
      summary: Create a rule set for a given entity.
      operationId: createRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      requestBody:
        description: The body of the new rule set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleSet'
      responses:
        '201':
          description: New rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    get:
      tags:
        - ruleSets
      summary: Get all rule sets for a given entity.
      operationId: listRuleSets
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      responses:
        '200':
          description: Fetched rule sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleSetResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /entities/{entityId}/rulesets/descendants:
    get:
      tags:
        - ruleSets
      summary: Get all rule sets for a given entity and it's descendants.
      operationId: listDescendantsRuleSets
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      responses:
        '200':
          description: Fetched rule sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleSetResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /entities/{entityId}/rulsets/{ruleSetId}:
    put:
      tags:
        - ruleSets
      summary: Update an existing rule set for a given entity.
      operationId: updateRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      requestBody:
        description: The body of the updated rule set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleSet'
      responses:
        '200':
          description: Updated rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    get:
      tags:
        - ruleSets
      summary: Get a rule set for a given entity.
      operationId: getRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      responses:
        '200':
          description: Fethed rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    delete:
      tags:
        - ruleSets
      summary: Delete a rule set for a given entity.
      operationId: deleteRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      responses:
        '204':
          description: The rule set has been deleted
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /transaction/validate:
    post:
      tags:
        - transactions
      summary: Validate a single transaction event.
      operationId: validateTransaction
      requestBody:
        description: The transaction event to be validated. An event contains a transaction in the PDSP format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
      responses:
        '200':
          description: Validation outcome
          content:
            application/json:
              schema:
                type: object
                required:
                  - action
                properties:
                  action:
                    type: string
                    enum:
                      - PASS
                      - BLOCK
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                              value:
                                type: string
                  block:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique ID of the rule set
                        entity:
                          type: string
                          description: The entity ID of the rule set
                        name:
                          type: string
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                              value:
                                type: string
              examples:
                pass:
                  value:
                    action: 'PASS'
                pass_and_tag:
                  value:
                    action: PASS
                    tags:
                      - id: '529469fc-200a-4bca-9a94-26089bfccf11'
                        entity: '550a0591-6157-43e3-80b7-66168646fb67'
                        name: SUSPICIOUS HIGH AMOUNT (SWEDEN)
                        rules:
                          - key: amount
                            operator: ">"
                            value: '60000'
                          - key: currency_code
                            operator: "=="
                            value: SEK
                block:
                  value:
                    action: BLOCK
                    block:
                      - id: '2e293dbb-da9c-4694-99ed-ddb010c7deb2'
                        entity: 'e4b95dfc-a92f-41de-83e9-1755a9d1ebf8'
                        name: Less than minimum amount (EUR)
                        rules:
                          - key: amount
                            operator: "<="
                            value: '500'
                          - key: currency_code
                            operator: "=="
                            value: EUR
                block_and_tag:
                  value:
                    action: BLOCK
                    block:
                      - id: '2e293dbb-da9c-4694-99ed-ddb010c7deb2'
                        entity: 'e4b95dfc-a92f-41de-83e9-1755a9d1ebf8'
                        name: Less than minimum amount (EUR)
                        rules:
                          - key: amount
                            operator: "<="
                            value: '500'
                          - key: currency_code
                            operator: "=="
                            value: EUR
                    tags:
                      - id: '529469fc-200a-4bca-9a94-26089bfccf11'
                        entity: '550a0591-6157-43e3-80b7-66168646fb67'
                        name: SUSPICIOUS HIGH AMOUNT (SWEDEN)
                        rules:
                          - key: amount
                            operator: ">"
                            value: '60000'
                          - key: currency_code
                            operator: "=="
                            value: SEK
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'

components:
  schemas:
    unexpectedErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 100
        details:
          type: string
          description: Details about the error
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    malformedParametersErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 107
        details:
          type: string
          description: Details about the error
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    ruleSetNotFoundErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 109
        details:
          type: object
          description: Details about the error
          properties:
            resource:
              type: string
              enum:
                - ruleSet
                - entity
              description: Type of resource which was not found
            id:
              type: string
              description: ID of the rule set or entity which was not found
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    ruleSetResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the rule set
        entity:
          type: string
          description: The entity ID of the rule set
        name:
          type: string
          description: The name of the rule set
        action:
          type: string
          enum:
            - TAG
            - BLOCK
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rule'
          minItems: 1
          uniqueItems: false
    rule:
      type: object
      properties:
        key:
          type: string
          enum:
            - amount
            - currencyCode
            - customerCountryCode
            - card
            - issuerCountryCode
            - entityId
            - customerId
            - customerIP
            - customerIPCountryCode
        operator:
          type: string
          enum:
            - '<'
            - '<='
            - '=='
            - '!='
            - '>='
            - '>'
        value:
          type: string
    ruleSet:
      type: object
      properties:
        name:
          type: string
          description: The name of the rule set.
        action:
          type: string
          enum:
            - BLOCK
            - TAG
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rule'
          minItems: 1
          uniqueItems: false
    event:
      title: Verifone Transaction Event.
      description: ' This is used to model a Transaction Payment Event. The end state of a payment may reflect multiple separate events. Each event contains 3 parts, a Header, the transaction detail or content and any security related data.'
      uniqueItems: false
      required:
        - transaction
      properties:
        transaction:
          $ref: '#/components/schemas/transaction'
          description: 'The transaction payment event. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
          uniqueItems: false
      type: object
    card:
      title: A Card Payment Instrument.
      description: The Card instrument (mechanism of payment) element of a transaction event. The elements are sensitive data associated with the card performing the transaction. This Object allows additional custom properties.
      uniqueItems: false
      required:
        - instrumentType
      properties:
        country:
          $ref: '#/components/schemas/countrycode3'
          description: 'The three letter ISO 3166-Alpha-3 country code for the country of issue. (e.g. AUS = Australia). Note, ISO8583 and ISO20022 expect this format ISO3166 for country, in most other occurrences the 2 alpha variant is used. ISO8583 - DE 20'
          uniqueItems: false
        instrumentType:
          description: To identify the type of instrument whether it is a card
          default: CARD
          example: CARD
          uniqueItems: false
          type: string
        cardNumber:
          description: The Primary Account Number or Card Number. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 28
          minLength: 8
          uniqueItems: false
          type: string
      type: object
    countrycode:
      title: Country Code
      description: 'The [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as is used in that country''s top-level domain names.</blockquote>.'
      uniqueItems: false
      enum:
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AO
        - AQ
        - AR
        - AS
        - AT
        - RE
        - AU
        - AW
        - AX
        - AZ
        - RO
        - BA
        - BB
        - RS
        - BD
        - BE
        - RU
        - BF
        - BG
        - RW
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - SA
        - BQ
        - SB
        - BR
        - SC
        - BS
        - SD
        - BT
        - SE
        - BV
        - SG
        - BW
        - SH
        - SI
        - BY
        - SJ
        - BZ
        - SK
        - SL
        - SM
        - SN
        - SO
        - CA
        - SR
        - CC
        - SS
        - CD
        - ST
        - CF
        - SV
        - CG
        - CH
        - SX
        - CI
        - SY
        - SZ
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - TC
        - TD
        - CU
        - TF
        - CV
        - TG
        - CW
        - TH
        - CX
        - CY
        - TJ
        - CZ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - DE
        - TV
        - TW
        - DJ
        - TZ
        - DK
        - DM
        - DO
        - UA
        - UG
        - DZ
        - UM
        - EC
        - US
        - EE
        - EG
        - EH
        - UY
        - UZ
        - VA
        - ER
        - VC
        - ES
        - ET
        - VE
        - VG
        - VI
        - VN
        - VU
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - WF
        - GA
        - GB
        - WS
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - YE
        - HU
        - ID
        - YT
        - IE
        - IL
        - IM
        - IN
        - IO
        - ZA
        - IQ
        - IR
        - IS
        - IT
        - ZM
        - JE
        - ZW
        - ZZ
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - 'NO'
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
      type: string
    countrycode3:
      title: Country Code
      description: 'The [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as is used in that country''s top-level domain names.</blockquote>.'
      uniqueItems: false
      enum:
        - NZL
        - FJI
        - PNG
        - GLP
        - STP
        - BSB
        - MHL
        - WLF
        - CUB
        - SDN
        - GMB
        - CUW
        - MYS
        - MYT
        - TWN
        - POL
        - OMN
        - SUR
        - ARE
        - KEN
        - ARG
        - GNB
        - ARM
        - UZB
        - BTN
        - SEN
        - TGO
        - IRL
        - FLK
        - IRN
        - QAT
        - BDI
        - NLD
        - IRQ
        - SVK
        - SVN
        - GNQ
        - THA
        - ABW
        - ASM
        - SWE
        - ISL
        - MKD
        - BEL
        - ISR
        - KWT
        - LIE
        - BEN
        - DZA
        - ATA
        - BES
        - RUS
        - ATF
        - ATG
        - ITA
        - SWZ
        - TZA
        - PAK
        - BFA
        - CXR
        - PAN
        - SGP
        - UKR
        - JEY
        - KGZ
        - BVT
        - CHE
        - DJI
        - REU
        - CHL
        - PRI
        - CHN
        - PRK
        - SXM
        - MLI
        - BWA
        - HRV
        - KHM
        - IDN
        - PRT
        - MLT
        - TJK
        - VNM
        - CYM
        - PRY
        - SHN
        - CYP
        - SYC
        - RWA
        - BGD
        - AUS
        - AUT
        - LKA
        - PSE
        - GAB
        - ZWE
        - BGR
        - SYR
        - CZE
        - NOR
        - UMI
        - CIV
        - MMR
        - TKL
        - KIR
        - TKM
        - GRD
        - GRC
        - PCN
        - HTI
        - GRL
        - YEM
        - AFG
        - MNE
        - MNG
        - NPL
        - BHS
        - BHR
        - MNP
        - GBR
        - SJM
        - DMA
        - TLS
        - BIH
        - HUN
        - AGO
        - WSM
        - FRA
        - MOZ
        - NAM
        - PER
        - DNK
        - GTM
        - FRO
        - SLB
        - VAT
        - SLE
        - NRU
        - AIA
        - GUF
        - ZZZ
        - SLV
        - GUM
        - FSM
        - DOM
        - CMR
        - GUY
        - AZE
        - MAC
        - GEO
        - TON
        - MAF
        - NCL
        - SMR
        - ERI
        - KNA
        - MAR
        - BLM
        - VCT
        - BLR
        - MRT
        - BLZ
        - PHL
        - COD
        - COG
        - ESH
        - PYF
        - URY
        - COK
        - COM
        - COL
        - USA
        - ESP
        - EST
        - BMU
        - MSR
        - ZMB
        - KOR
        - SOM
        - VUT
        - ALA
        - ECU
        - ALB
        - ETH
        - GGY
        - MCO
        - NER
        - LAO
        - VEN
        - GHA
        - CPV
        - MDA
        - MTQ
        - MDG
        - SPM
        - NFK
        - LBN
        - LBR
        - BOL
        - MDV
        - GIB
        - LBY
        - HKG
        - CAF
        - LSO
        - NGA
        - MUS
        - IMN
        - LCA
        - JOR
        - GIN
        - VGB
        - CAN
        - TCA
        - TCD
        - AND
        - ROU
        - CRI
        - IND
        - MEX
        - SRB
        - KAZ
        - SAU
        - JPN
        - LTU
        - TTO
        - PLW
        - HMD
        - MWI
        - SSD
        - NIC
        - CCK
        - FIN
        - TUN
        - LUX
        - UGA
        - IOT
        - BRA
        - TUR
        - TUV
        - DEU
        - EGY
        - LVA
        - JAM
        - NIU
        - VIR
        - ZAF
        - BRN
        - HND
      type: string
    currencycode:
      title: Currency Code
      description: |-
        Three-letter ISO 4217 alphabetical currency code. e.g. USD. Values correspond
        to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
      uniqueItems: false
      enum:
        - FJD
        - MXN
        - STD
        - LVL
        - SCR
        - CDF
        - BBD
        - GTQ
        - CLP
        - HNL
        - UGX
        - MXV
        - ZAR
        - TND
        - CUC
        - BSD
        - SLL
        - SDG
        - IQD
        - CUP
        - GMD
        - TWD
        - RSD
        - DOP
        - UYI
        - KMF
        - MYR
        - FKP
        - XOF
        - GEL
        - UYU
        - BTC
        - MAD
        - CVE
        - TOP
        - AZN
        - OMR
        - PGK
        - KES
        - SEK
        - BTN
        - UAH
        - GNF
        - ERN
        - MZN
        - SVC
        - ARS
        - QAR
        - IRR
        - MRO
        - XPD
        - CNY
        - THB
        - UZS
        - XPF
        - BDT
        - LYD
        - BMD
        - KWD
        - PHP
        - XXX
        - XPT
        - RUB
        - PYG
        - ISK
        - JMD
        - COP
        - MKD
        - USD
        - COU
        - DZD
        - PAB
        - SGD
        - USN
        - ETB
        - USS
        - KGS
        - SOS
        - VEF
        - VUV
        - LAK
        - BND
        - ZMK
        - XAF
        - LRD
        - XAG
        - CHF
        - HRK
        - ALL
        - CHE
        - DJF
        - ZMW
        - TZS
        - VND
        - XAU
        - AUD
        - ILS
        - CHW
        - GHS
        - GYD
        - KPW
        - BOB
        - KHR
        - MDL
        - IDR
        - XBA
        - KYD
        - AMD
        - XBC
        - XBB
        - BWP
        - SHP
        - TRY
        - LBP
        - XBD
        - TJS
        - JOD
        - AED
        - HKD
        - RWF
        - EUR
        - LSL
        - DKK
        - CAD
        - BGN
        - BOV
        - MMK
        - MUR
        - NOK
        - SYP
        - GIP
        - RON
        - LKR
        - NGN
        - CRC
        - CZK
        - PKR
        - XCD
        - ANG
        - HTG
        - BHD
        - KZT
        - SRD
        - SZL
        - LTL
        - SAR
        - TTD
        - YER
        - MVR
        - AFN
        - INR
        - AWG
        - KRW
        - NPR
        - JPY
        - MNT
        - AOA
        - PLN
        - GBP
        - SBD
        - XTS
        - HUF
        - BYR
        - BIF
        - MWK
        - MGA
        - XDR
        - BZD
        - BAM
        - EGP
        - MOP
        - NAD
        - SSP
        - NIO
        - PEN
        - NZD
        - WST
        - TMT
        - CLF
        - BRL
      type: string
    customer:
      title: Customer
      description: The Customer (Cardholder where a Card Instrument is used. This is the name used in the ISO20022/Nexo specifications.) component of a transaction event
      uniqueItems: false
      properties:
        country:
          $ref: '#/components/schemas/countrycode'
          description: Country Code associated with the Customer. Distinct from the ip_country which would represent where a specific transaction originated according to the IP Address. ISO 3166 numeric value e.g. 036.
          uniqueItems: false
        identification:
          $ref: '#/components/schemas/customeridentification'
          description: 'For identification of the customer where required for a transaction. This hierarchy is kept to reflect the original ISO20022 structure. '
          uniqueItems: false
        IPAddressV4:
          description: The IP Address v4 where the event originated.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
        IPCountry:
          $ref: '#/components/schemas/countrycode'
          description: Country Code associated with the IP Address. ISO 3166 numeric value e.g. 036.
          uniqueItems: false
      type: object
    customeridentification:
      title: Customer(Cardholder) Identification
      description: Identification elements that may be present that are used to identify the customer.
      uniqueItems: false
      properties:
        customerId:
          description: A merchant customer identifier where one is known. This may refer to a client system identifier for Customer and may have no internal meaning to Verifone.
          maxLength: 100
          uniqueItems: false
          type: string
      type: object
    merchant:
      title: Merchant
      description: 'A Merchant object, limited in scope to the details captured relative to a transaction event.'
      uniqueItems: false
      properties:
        organisation:
          $ref: '#/components/schemas/organisation'
          description: The relationship to a parent organisation where one is defined.
          uniqueItems: false
      type: object
    organisation:
      title: An Organisation.
      description: An Organisation is an entity that operates Merchants. There is a one-to-many relationship between the Organisation and Merchants.
      uniqueItems: false
      required:
        - UUID
      properties:
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Organisation. This is should be a unique internal value for Verifone.
          uniqueItems: false
      type: object
    amountmoney:
      title: Money type
      description: 'A amount type represented as money for all financial-related fields, such as balance, payment due...'
      uniqueItems: false
      required:
        - value
      properties:
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          uniqueItems: false
        value:
          description: 'The value, which can be anything from:<ul><li>An integer. For currencies that are not typically fractional, such as `JPY`.</li><li>A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`.</li><li> An eight-place decimal fraction. For currencies such as Bitcoin.</li></li>For the required number of decimal places for a currency code, see ISO 4217.'
          maxLength: 32
          pattern: '^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$'
          uniqueItems: false
          type: string
          example: "5.00"
      type: object
    transaction:
      title: Payment Transaction
      description: 'The payment or transaction. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
      uniqueItems: false
      required:
        - amount
        - instrument
        - merchant
      properties:
        instrument:
          description: The payment instruments that are associated with this transaction. There must be at least one.
          items:
            uniqueItems: false
            anyOf:
              - $ref: '#/components/schemas/card'
                uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        amount:
          $ref: '#/components/schemas/amountmoney'
          description: This object represents the actual (total) amount of the transaction including the currency of the transaction.
          uniqueItems: false
        merchant:
          $ref: '#/components/schemas/merchant'
          description: A reference to the merchant involved within the transaction event. Not all events may originate from the Merchant.
          uniqueItems: false
        customer:
          $ref: '#/components/schemas/customer'
          description: An Optional value to define Customer or Cardholder related properties. The number of entries known will vary according to the channel the transaction was accepted from.
          uniqueItems: false
      type: object
    uuid:
      description: 'Schema to represent a UUID per the format defined in RFC 4122 (https://tools.ietf.org/html/rfc4122).'
      maxLength: 36
      minLength: 36
      pattern: '^[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}$'
      uniqueItems: false
      type: string
      example: b1a16249-c17a-4445-bbce-bc00bfdc3cef
tags:
  - name: transactions
