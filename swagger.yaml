openapi: 3.0.0
info:
  title: Validation API
  version: 1.0.1
paths:
  /entities/{entityId}/rulesets:
    post:
      tags:
        - ruleSets
      summary: Create a rule set for a given entity.
      operationId: createRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      requestBody:
        description: The body of the new rule set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleSet'
      responses:
        '201':
          description: New rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    get:
      tags:
        - ruleSets
      summary: Get all rule sets for a given entity.
      operationId: listRuleSets
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      responses:
        '200':
          description: Fetched rule sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleSetResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /entities/{entityId}/rulesets/descendants:
    get:
      tags:
        - ruleSets
      summary: Get all rule sets for a given entity and it's descendants.
      operationId: listDescendantsRuleSets
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
      responses:
        '200':
          description: Fetched rule sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleSetResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /entities/{entityId}/rulsets/{ruleSetId}:
    put:
      tags:
        - ruleSets
      summary: Update an existing rule set for a given entity.
      operationId: updateRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      requestBody:
        description: The body of the updated rule set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleSet'
      responses:
        '200':
          description: Updated rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    get:
      tags:
        - ruleSets
      summary: Get a rule set for a given entity.
      operationId: getRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      responses:
        '200':
          description: Fethed rule set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetResponse'
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
    delete:
      tags:
        - ruleSets
      summary: Delete a rule set for a given entity.
      operationId: deleteRuleSet
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: The unique ID of the entity
        - in: path
          name: ruleSetId
          required: true
          schema:
            type: string
          description: The unique ID of the rule set
      responses:
        '204':
          description: The rule set has been deleted
        '404':
          description: Rule set or entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleSetNotFoundErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'
  /transaction/validate:
    post:
      tags:
        - transactions
      summary: Validate a single transaction event.
      operationId: validateTransaction
      requestBody:
        description: The transaction event to be validated. An event contains a transaction in the PDSP format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
      responses:
        '200':
          description: Validation outcome
          content:
            application/json:
              schema:
                type: object
                required:
                  - action
                properties:
                  action:
                    type: string
                    enum:
                      - PASS
                      - BLOCK
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                              value:
                                type: string
                  block:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique ID of the rule set
                        entity:
                          type: string
                          description: The entity ID of the rule set
                        name:
                          type: string
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                              value:
                                type: string
              examples:
                pass:
                  value:
                    action: 'PASS'
                pass_and_tag:
                  value:
                    action: PASS
                    tags:
                      - id: '529469fc-200a-4bca-9a94-26089bfccf11'
                        entity: '550a0591-6157-43e3-80b7-66168646fb67'
                        name: SUSPICIOUS HIGH AMOUNT (SWEDEN)
                        rules:
                          - key: amount
                            operator: ">"
                            value: '60000'
                          - key: currency_code
                            operator: "=="
                            value: SEK
                block:
                  value:
                    action: BLOCK
                    block:
                      - id: '2e293dbb-da9c-4694-99ed-ddb010c7deb2'
                        entity: 'e4b95dfc-a92f-41de-83e9-1755a9d1ebf8'
                        name: Less than minimum amount (EUR)
                        rules:
                          - key: amount
                            operator: "<="
                            value: '500'
                          - key: currency_code
                            operator: "=="
                            value: EUR
                block_and_tag:
                  value:
                    action: BLOCK
                    block:
                      - id: '2e293dbb-da9c-4694-99ed-ddb010c7deb2'
                        entity: 'e4b95dfc-a92f-41de-83e9-1755a9d1ebf8'
                        name: Less than minimum amount (EUR)
                        rules:
                          - key: amount
                            operator: "<="
                            value: '500'
                          - key: currency_code
                            operator: "=="
                            value: EUR
                    tags:
                      - id: '529469fc-200a-4bca-9a94-26089bfccf11'
                        entity: '550a0591-6157-43e3-80b7-66168646fb67'
                        name: SUSPICIOUS HIGH AMOUNT (SWEDEN)
                        rules:
                          - key: amount
                            operator: ">"
                            value: '60000'
                          - key: currency_code
                            operator: "=="
                            value: SEK
        '400':
          description: Malformed parameters in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/malformedParametersErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unexpectedErrorResponse'

components:
  schemas:
    unexpectedErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 100
        details:
          type: string
          description: Details about the error
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    malformedParametersErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 107
        details:
          type: string
          description: Details about the error
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    ruleSetNotFoundErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 109
        details:
          type: object
          description: Details about the error
          properties:
            resource:
              type: string
              enum:
                - ruleSet
                - entity
              description: Type of resource which was not found
            id:
              type: string
              description: ID of the rule set or entity which was not found
        message:
          type: string
          description: Error description
        timestamp:
          type: integer
          example: 1569834344
          description: Timestamp when error occurred
    ruleSetResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the rule set
        entity:
          type: string
          description: The entity ID of the rule set
        name:
          type: string
          description: The name of the rule set
        action:
          type: string
          enum:
            - TAG
            - BLOCK
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rule'
          minItems: 1
          uniqueItems: false
    rule:
      type: object
      properties:
        key:
          type: string
          enum:
            - amount
            - currencyCode
            - customerCountryCode
            - card
            - issuerCountryCode
            - entityId
            - customerId
            - customerIP
            - customerIPCountryCode
        operator:
          type: string
          enum:
            - '<'
            - '<='
            - '=='
            - '!='
            - '>='
            - '>'
        value:
          type: string
    ruleSet:
      type: object
      properties:
        name:
          type: string
          description: The name of the rule set.
        action:
          type: string
          enum:
            - BLOCK
            - TAG
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rule'
          minItems: 1
          uniqueItems: false
    accounttype:
      title: Account type
      description: |-
        The Account type or PAYMENT_TYPE in UGP. This source of the payment for the goods or service.
         This has a mapping to the processing code in DE03 (Processing Code) in ISO8583. This should map to the AccountType in Nexo/ISO20022. MSISDN - Mobile Station Integrated Services Digital Network.
         Use DEFAULT for UNKNOWN.
      default: DEFAULT
      uniqueItems: false
      enum:
        - CREDIT
        - DEBIT
        - MSISDN
        - SAVING
        - UNIVERSAL
        - EBT
        - INVESTMENT
        - CHEQUE
        - CURRENT
        - DEFAULT
        - PRIVATE_LABEL
      type: string
    acquirerresult:
      title: Acquirer Result/Outcome
      description: The Acquirer outcome of an event. When processed by An Acquirer there can be additional information related to the outcome of an event.
      uniqueItems: false
      required:
        - acquirerResponseCode
        - outcomeType
      properties:
        outcomeType:
          description: To identify the type of outcome whether it is Acquirer Result
          default: ACQ_RESULT
          uniqueItems: false
          type: string
        sequenceNumber:
          description: The sequence number associated with a Batch. This is used in processing for some Acquirers/Processors.
          uniqueItems: false
          type: string
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        acquirerResponseCode:
          description: Where a response is received from Acquirer relating to the event.
          uniqueItems: false
          type: string
        acquirerResponseMessage:
          description: The message generated by Gateway corresponding to the code.
          uniqueItems: false
          type: string
        processorSTAN:
          description: A corresponding STAN or trace identifier returned by the Acquirer/Processor.
          uniqueItems: false
          type: string
        cavvResult:
          $ref: '#/components/schemas/cavvresponsecode'
          uniqueItems: false
        acquirerReferenceNumber:
          description: 'In credit card transactions, the ARN is a unique number assigned to a transaction when it goes from the merchant''s bank (acquiring Bank) through to the card scheme at the cardholder''s bank (Issuer). The ARN can be used to track a payment or refund. The shopper should contact their bank, who can use the ARN to track the refund.'
          uniqueItems: false
          type: string
        processorRRN:
          description: A corresponding RRN or reference number returned by the Acquirer/Processor.
          uniqueItems: false
          type: string
        batchId:
          description: In some instances an Acquirer may assign an identifier to a transaction to indicate which settlement batch the transaction is associated with. This is obtained on the response from Acquirer
          uniqueItems: false
          type: string
      type: object
    address:
      title: Address
      description: 'An Address following the convention of http://microformats.org/wiki/hcard'
      uniqueItems: false
      required:
        - addressLine1
        - city
        - country
      properties:
        poBox:
          description: The PO BOX number. Mapped to PARTY_POSTAL_ADDRESS.PO_BOX
          uniqueItems: false
          type: string
        country:
          $ref: '#/components/schemas/countrycode'
          description: Mapped to PARTY_POSTAL_ADDRESS.COUNTRY_NAME. Follows ISO 3166-1 (i.e. 'US')
          uniqueItems: false
        city:
          description: 'Name of a built-up area, with defined boundaries, and a local government. This could be city or town.'
          maxLength: 28
          uniqueItems: false
          type: string
        timezone:
          description: 'Should be some well understood representation of timezone. see https://www.timeanddate.com/time/zones. Military naming conventions are not used. '
          maxLength: 5
          minLength: 3
          pattern: '^[A-Z]{3,5}$'
          uniqueItems: false
          type: string
        addressLine1:
          description: Mapped to PARTY_POSTAL_ADDRESS.ADDRESS_LINE1
          maxLength: 40
          uniqueItems: false
          type: string
        addressLine2:
          description: Mapped to PARTY_POSTAL_ADDRESS.ADDRESS_LINE2
          maxLength: 40
          uniqueItems: false
          type: string
        postCode:
          description: Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail
          maxLength: 16
          minLength: 1
          uniqueItems: false
          type: string
        addressLine3:
          description: Not mapped to Commerce Platform
          maxLength: 40
          uniqueItems: false
          type: string
        countrySubdivision:
          description: 'Identifies a sub-division of a country which may be state, region or county. This follows a similar format to the openbank api.'
          maxLength: 35
          minLength: 1
          uniqueItems: false
          type: string
      type: object
    agecheck:
      title: Age Check
      description: 'Purpose is to determine if the payer has met a certain age for age verification purposes e.g for gambling. DF48 position 1-2 is age to be checked against and position 3 poses one of the following questions:value 1 : Has the cardholder reached this age? 2 : Is cardholder below the checked age?'
      uniqueItems: false
      properties:
        cardHolderAgeCheck:
          description: |-
            This value can be decided based on two questions :<li> Has the cardholder reached this age? (true) </li>
             OR
             <li> 2. Is cardholder below the checked age? (false) </li>.

          uniqueItems: false
          type: boolean
        ageCheckedAgainst:
          description: Age DF48 position 1-2 is age to be checked against.
          maxLength: 2
          uniqueItems: false
          type: integer
      type: object
    airlinecontext:
      title: Flight Sales Context
      description: 'This object contains references to the Flight Sale Context. This object may contain additional properties, but these will not be indexed for search.'
      uniqueItems: false
      properties:
        wayBillNumber:
          description: This way bill number comes in every stored/debit transactions done in flight.
          uniqueItems: false
          type: string
        flightDepartureDate:
          $ref: '#/components/schemas/datenotime'
          description: This contains flight departure date.
          uniqueItems: false
        flightNumber:
          description: This will have flight number where in-flight transaction happened.
          uniqueItems: false
          type: string
      type: object
    alipay:
      title: AliPay payment details
      description: The AliPay attributes that may be associated with a payment. This represents only the values specific to an Alipay transaction other elements are common to all transactions.
      uniqueItems: false
      required:
        - signature
        - signatureType
        - identityCodeType
        - instrumentType
      properties:
        instrumentType:
          description: To identify the type of instrument whether it is  Alipay
          default: ALIPAY
          uniqueItems: false
          type: string
        merchantTradeNo:
          description: The unique number as represented in AliPay's merchant web site. 'out_trade_no'
          maxLength: 64
          uniqueItems: false
          type: string
        identityCodeType:
          $ref: '#/components/schemas/alipayidentitytype'
          description: 'This will be one of the following enumeration - (qrcode, barcode, soundwave). Note only barcode currently supported. ''identifier_code_type'''
          uniqueItems: false
        signature:
          description: The digital signature matching the request values. called 'sign' in the AliPay parameters
          uniqueItems: false
          type: string
        service:
          description: The interface name as understood by Alipay. This is called 'service' in the Alipay parameters
          uniqueItems: false
          type: string
        signatureType:
          $ref: '#/components/schemas/alipaysigntype'
          description: 'The method or algorithm used for signing, called ''sign_type'' in the AliPay parameters.'
          uniqueItems: false
        productName:
          description: The product name for AliPay. Currently a fixed value of OVERSEAS_MBARCODE_PAY. 'biz_product'
          default: OVERSEAS_MBARCODE_PAY
          maxLength: 256
          uniqueItems: false
          type: string
        buyerIdentityCode:
          description: The identifier code of the Buyer - the value generated on the AliPay application. 'buyer_identity_code'
          maxLength: 32
          uniqueItems: false
          type: string
      type: object
    alipayidentitytype:
      title: Alipay Identity type
      description: The description of the type of identity code that is provided.
      uniqueItems: false
      enum:
        - QRCODE
        - SOUNDWAVE
        - BARCODE
      type: string
    alipayresult:
      title: Alipay result or outcome.
      description: The AliPay attributes that are associated with a response or outcome for a payment.
      uniqueItems: false
      required:
        - isSuccess
        - signature
        - signatureType
        - resultCode
        - buyerUserId
        - partnerTransId
        - currency
        - amount
        - outcomeType
      properties:
        QRCodeURL:
          description: URL QR code in normal size.
          uniqueItems: false
          type: string
        retryFlag:
          description: 'Y: The cancel failed due to retriable error, N: The cancel failed due to non-retriable error.'
          maxLength: 1
          uniqueItems: false
          type: string
        errorDescription:
          description: 'Give literal statement as to the detailed error code. If the response code of result_code is ORDER_SUCCESS_PAY_SUCCESS, this parameter shall not be returned.'
          maxLength: 64
          uniqueItems: false
          type: string
        signature:
          description: The signing value for the this request based on the RSA public key issued by Verifone
          uniqueItems: false
          type: string
        payTime:
          description: The time that the transaction has been paid. Format YYYYMMDDHHMMSS as returned by AliPay.
          uniqueItems: false
          type: string
          format: date-time
        transId:
          description: The AliPay transaction Id.
          maxLength: 64
          uniqueItems: false
          type: string
        resultCode:
          description: 'To describe the response status of a request: SUCCESS, FAILED, UNKNOWN. SUCCESS: Indicates payment is success, FAILED :Indicates payment is failed, merchant could show the failure result to the cashier accordingly, UNKNOWN: Indicates payment result is unknown, for offline mode, partner system need to reverse this transaction immediately, for offline to online mode, partner system is suggested to query the transaction status in a certain frequency until a clear status is retrieved, or merchant could reverse this transaction after a certain time'
          uniqueItems: false
          enum:
            - SUCCESS
            - FAILED
            - UNKNOWN
          type: string
        errorCode:
          description: 'To describe the reason of the result_code when it is FAILED/UNKNOWN , blank or not present when result_code is SUCCESS.'
          maxLength: 48
          uniqueItems: false
          type: string
        buyerLoginId:
          description: 'The partially masked value representing the AliPay Login ID, email or mobile number of the buyer.'
          maxLength: 64
          uniqueItems: false
          type: string
        QRCodeURLSmall:
          description: URL QR code in small size.
          uniqueItems: false
          type: string
        exchangeRate:
          description: The conversion rate between the currency debited from Buyer and the actual amount of the transaction.
          uniqueItems: false
          type: number
          format: float
        QRCodeURLLarge:
          description: URL QR code in large size.
          uniqueItems: false
          type: string
        outTradeNo:
          description: Unique order ID in order system in corresponding merchant’s website other than Alipay trade number. Uniqueness of this parameter in merchant’s website shall be guaranteed. (corresponds to trade_no in instrument).
          maxLength: 64
          uniqueItems: false
          type: string
        errorDetail:
          description: The reason for a failed result_code.
          maxLength: 48
          uniqueItems: false
          type: string
        action:
          description: 'The action of cancel. close: only closed the transaction, but no refund. refund: had a refund.'
          maxLength: 10
          uniqueItems: false
          type: string
        currency:
          description: The currency of the transaction as debited from the Buyer.
          uniqueItems: false
          type: string
        isSuccess:
          description: 'Indicator that the request was accepted by AliPay. By default, AliPay only return a notification on success.'
          default: 'false'
          uniqueItems: false
          type: boolean
        amountCurrency:
          description: The exact amount that the buyer has paid in local currency.
          uniqueItems: false
          type: number
          format: float
        amount:
          description: The transaction amount in the given currency.
          uniqueItems: false
          type: number
          format: float
        voucherType:
          description: Voucher type， currently qrcode is the only supported value.
          maxLength: 10
          uniqueItems: false
          type: string
        partnerTransId:
          description: The partner transaction id that was sent in the request.
          maxLength: 64
          uniqueItems: false
          type: string
        signatureType:
          $ref: '#/components/schemas/alipaysigntype'
          description: The signing value for the this request based on the RSA public key issued by Verifone
          uniqueItems: false
        outcomeType:
          description: To identify the type of outcome whether it is Acquirer Result
          default: ALIPAY_RESULT
          uniqueItems: false
          type: string
        QRCode:
          description: Value of the QR code. This is returned when performing a pre-create request.
          maxLength: 128
          uniqueItems: false
          type: string
        buyerUserId:
          description: The AliPay account number. Although a string it appears to be a numeric value starting with 2088.
          maxLength: 16
          uniqueItems: false
          type: string
      type: object
    alipaysigntype:
      title: Alipay Signature type
      description: A definition of which algorithm was used to generate the signature on the Alipay message.
      uniqueItems: false
      enum:
        - RSA
        - DSA
        - UKN
        - MD5
      type: string
    amountmoney:
      title: Money type
      description: 'A amount type represented as money for all financial-related fields, such as balance, payment due...'
      uniqueItems: false
      required:
        - value
      properties:
        amountDescription:
          description: The added description to the amount.
          maxLength: 100
          uniqueItems: false
          type: string
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          uniqueItems: false
        value:
          description: 'The value, which can be anything from:<ul><li>An integer. For currencies that are not typically fractional, such as `JPY`.</li><li>A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`.</li><li> An eight-place decimal fraction. For currencies such as Bitcoin.</li></li>For the required number of decimal places for a currency code, see ISO 4217.'
          maxLength: 32
          pattern: '^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$'
          uniqueItems: false
          type: string
        minorUnits:
          description: Indicates the number of decimals in the amount. This may be we used with for example normal transaction amount or DCC amounts.
          uniqueItems: false
          type: string
      type: object
    amountsimple:
      title: Amount Simple Type
      description: 'The value, which can be anything from:<ul><li>An integer. For currencies that are not typically fractional, such as `JPY`.</li><li>A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`.</li><li> An eight-place decimal fraction. For currencies such as Bitcoin.</li></li>For the required number of decimal places for a currency code, see ISO 4217.'
      maxLength: 32
      pattern: '^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$'
      uniqueItems: false
      type: string
    amountstype:
      title: Amounts Type
      description: A structure that represents a breakdown all of the different amounts that may appear on a single transaction. <ul><li>The currency is mandatory.</li><li>amount is mandatory.</li>
      uniqueItems: false
      required:
        - currencyCode
      properties:
        localTaxAmount:
          $ref: '#/components/schemas/amountsimple'
          description: 'An optional value to specify the amount of any local tax that was included within the total amount for the transaction. <ul><li>This should be included in the total ''amount'' of the transaction.</li><li>In some jurisdictions like the US, there is the ability to specify state and local taxes.</li><li>The <b>total</bd> tax amount is tax_amount plus local_tax_amount and both will be included in the total amount.</li>'
          uniqueItems: false
        totalAmount:
          $ref: '#/components/schemas/amountsimple'
          description: 'A monetary value used to represent the total amount of the transaction including gratuities and other fees or taxes. This is represented as a currency and a decimal value that represents the total for the transaction. This is a mandatory field for a transaction, the individual sub-amounts are not required or may not be known. This value will represent the final amount of the transaction after all the sub values have been added (or subtracted).'
          uniqueItems: false
        feeAmounts:
          items:
            $ref: '#/components/schemas/amounttype'
            description: The individual fees that have been added to the total amount.
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        originalRequestAmount:
          $ref: '#/components/schemas/amountsimple'
          description: Transaction amount originally requested to authorize.
          uniqueItems: false
        cashbackAmount:
          $ref: '#/components/schemas/amountsimple'
          description: 'The cashback amount that is included in the total amount for the payment. Where there is a combined transaction for a purchase with cash back, this amount will be included in the amount. If the transactions is only cash out, then the cashback amount and amount will be the same.'
          uniqueItems: false
        rebateAmounts:
          items:
            $ref: '#/components/schemas/amounttype'
            description: The individual rebate applied to the transaction. This is a negative amount deducted from the total amount.
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        discountAmount:
          $ref: '#/components/schemas/amountsimple'
          description: An optional value to specify any discount that the merchant applied to the transaction. The actual <b>amount</b> will still reflect the amount paid less the discount.
          uniqueItems: false
        taxAmount:
          $ref: '#/components/schemas/amountsimple'
          description: An optional value to specify the amount of any tax that was included within the total amount for the transaction. This should be included in the total 'amount' of the transaction. This would reflect a national or state-wide amount for tax.
          uniqueItems: false
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          description: The currency that the transaction was executed in. This will normally reflect the currency that the payment acceptor (Merchant) receives the payment.
          uniqueItems: false
        donationAmount:
          $ref: '#/components/schemas/amountsimple'
          description: The donation amount that is included in the total amount for the payment. This is relevant where a Merchant has enrolled for  a separate Charity Donation Account. This will be included in the total amount of the transaction.
          uniqueItems: false
        gratuityAmount:
          $ref: '#/components/schemas/amountsimple'
          description: 'An optional additional amount representing the tip or gratuity associated with a payment. This amount will be included in the amount, hence (amount-gratuity amount) = the actual value of the transaction.'
          uniqueItems: false
      type: object
    amounttype:
      description: An optional value to specify the amount of any fee or surcharge that was incurred for processing the transaction. This should be included in the total 'amount' of the transaction.
      uniqueItems: false
      properties:
        amount:
          $ref: '#/components/schemas/amountsimple'
          uniqueItems: false
        label:
          description: A text description to explain the amount of the fee.
          maxLength: 140
          uniqueItems: false
          type: string
      type: object
    areasize:
      title: Point (location)
      description: Represents a point or location.
      uniqueItems: false
      required:
        - x-coordinate
        - y-coordinate
      properties:
        x-coordinate:
          description: The hexadecimal value in text the x-coordinate.
          uniqueItems: false
          type: string
        y-coordinate:
          description: The hexadecimal value in text the y-coordinate.
          uniqueItems: false
          type: string
      type: object
    attendancetype:
      title: Attendance
      description: The attendance type for either the merchant or the cardholder as this is applicable in multiple places. No idea how something is semi-attended
      uniqueItems: false
      enum:
        - ATTENDED
        - SEMI_ATTENDED
        - UNATTENDED
      type: string
    attributetype:
      description: 'The type of attribute distinguished name, (see x.500). <li>CNAT - Common Name</li><li>LATT - Locality</li><li>OATT - Organisation Name</li><li>OUAT - Organisation Unit Name</li><li>CATT - Country Name</li>'
      uniqueItems: false
      enum:
        - CNAT
        - CATT
        - LATT
        - OATT
        - OUAT
      type: string
    authenticationtype:
      title: Transaction Authentication
      description: The authentication types that were used to validate a payment. It is possible that multiple are required.
      uniqueItems: false
      enum:
        - TERMINAL
        - BYPASS
        - SECURED_CHANNEL
        - AUTHORISING_AGENT
        - CARDHOLDER_ID
        - BILLING_ADDRESS
        - SECURE_NO_CERTIFICATE
        - CLEAR_PIN
        - OFFLINE_PIN
        - PAPER_SIGNATURE
        - MERCHANT
        - CSC
        - PASSIVE
        - MANUAL
        - NONE
        - TOKEN
        - AUTHENTICATION_TOKEN
        - ONLINE_PIN
        - PAYMENT_TOKEN
        - SECURE_ELECTRONIC_COMMERCE
        - PERSONAL_HISTORY
        - SIGNATURE_CAPTURE
        - CDCVM
        - CRYPTOGRAM
        - OTHER
        - VOICE
        - PASSWORD
        - SECURE_CERTIFICATE
        - SHIPPING_ADDRESS
        - BIOMETRY
        - UNKNOWN
        - MOBILE
      type: string
    avvauthenticationtype:
      description: 'The type of the Authentication Verification Value (AVV), <li>CAVV - Cardholder Authentication Verification Value. VISA CAVV</li><li>UCAF - Universal Cardholder Authentication Field. MasterCard UCAF(AVV)</li><li>AEVV - American Express</li> This will vary according to the card type and is determined by the ACS. This should be base64 to send as a string value. 20 bytes in a decoded form.'
      uniqueItems: false
      enum:
        - CAVV
        - UCAF
        - AEVV
      type: string
    bank:
      title: Bank
      description: Represent the attributes of a Bank entity.
      uniqueItems: false
      required:
        - id
        - name
      properties:
        country:
          description: The two-letter ISO code representing where the bank account is located
          maxLength: 2
          uniqueItems: false
          type: string
        metadata:
          $ref: '#/components/schemas/metadata'
          description: A set of key value pairs to be associated with the bank
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        name:
          description: The name of the Bank or financial institution.
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        id:
          description: The unique identifier for this Bank
          uniqueItems: false
          type: string
        bic:
          description: 'The Bank Indentifier Code or SWIFT Code this can also be referred to as the CHIPS, NCC, VSC or IFSC depending on your location. Made up of 8 character in 3 parts: BankCode(4), Country Code(2) and Location (2)'
          maxLength: 8
          pattern: '^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$'
          uniqueItems: false
          type: string
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
      type: object
    bankaccount:
      title: Bank Account
      description: Represent the attributes of a Bank Account.
      uniqueItems: false
      required:
        - accountNumber
        - accountHolderName
        - bank
        - instrumentType
      properties:
        routingNumber:
          description: 'The routing transit number for the bank account. This is what is commonly referred to as a sort code or BSB code. (sort code is xx xx xx and a BSB is xx xxxx, the first 2 digits being the bank id.'
          maxLength: 100
          uniqueItems: false
          type: string
        bank:
          $ref: '#/components/schemas/bank'
          description: The Bank details.
          uniqueItems: false
        instrumentType:
          description: To identify the type of instrument whether it is BankAccount
          default: BANK_ACCOUNT
          uniqueItems: false
          type: string
        IBAN:
          $ref: '#/components/schemas/iban'
          description: The International Bank Account Number an internationally agreed system of identifying bank accounts across national borders
          uniqueItems: false
        currency:
          description: Three-letter ISO 4217 currency code representing the currency of the account.
          maxLength: 3
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: The unique identifier for this Bank Account. This is an internally generated value.
          uniqueItems: false
        accountNumber:
          description: The bank account number.
          maxLength: 100
          uniqueItems: false
          type: string
        accountHolderName:
          description: The name of the account holder as understood by the financial institution.
          maxLength: 100
          uniqueItems: false
          type: string
        accountHolderType:
          description: The type of entity to which the Account belongs.
          uniqueItems: false
          enum:
            - personal
            - company
          type: string
      type: object
    barcodetype:
      title: Barcode
      description: Represents the format of a barcode.
      uniqueItems: false
      enum:
        - EAN18
        - CODE128
        - ISBN
        - QRCODE
        - EAN8
        - ISSN
        - PDF417
        - CODE25
        - CODE39
        - EAN14
        - UPCA
        - EAN13
      type: string
    batchcardholderdatarequest:
      title: Batch CardHolder Data Request
      description: This request contains a batch number that is set by the user to identify the current batch invocation and the list of card holder data requests that is the same used in single tokenization request.
      uniqueItems: false
      required:
        - batchNumber
        - bulkTokens
      properties:
        batchNumber:
          description: 'Batch numbers indicates the key of the batch processing, will be returned in response.'
          uniqueItems: false
          type: string
        bulkTokens:
          description: List of CardHolderDataRequest
          items:
            $ref: '#/components/schemas/cardholderdatarequest'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
      type: object
    batchcardholderdataresponse:
      title: Batch CardHolder Data Tokenisation Response
      description: This object is returned as the response to a request for Batch Tokenisation.
      uniqueItems: false
      required:
        - batchNumber
        - bulkTokens
      properties:
        batchNumber:
          description: Number that indicates the batch process number sent in batch request.
          uniqueItems: false
          type: string
        bulkTokens:
          description: List of CardHolderDataResponse
          items:
            $ref: '#/components/schemas/cardholderdataresponse'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
      type: object
    billing:
      title: Billing details
      description: 'An Address following the convention of http://microformats.org/wiki/hcard. Associated with bill generated for transaction .'
      uniqueItems: false
      properties:
        phoneNumber:
          $ref: '#/components/schemas/phone'
          description: The phone number to be used for bill related enquiry.
          uniqueItems: false
        address:
          $ref: '#/components/schemas/address'
          description: The Address where the product will be billed
          uniqueItems: false
        name:
          description: The name of the person to bill is generated
          maxLength: 100
          uniqueItems: false
          type: string
        email:
          description: A valid email corresponding to the bill recipient or customer
          maxLength: 50
          uniqueItems: false
          type: string
      type: object
    businessidentifier:
      description: The key value pair showing the identifier type and the value. Each Merchant who is a registered legal entity may have one or more.
      uniqueItems: true
      required:
        - identifierType
        - value
      properties:
        identifierType:
          description: 'The actual business identifier changes by country and locale. There may be multiple in some instances. E.g.  Australia has an ABN, France a SIRET, US has EIN. The value is not enumerated to handle the multiple values that may be required. In many cases these values are not required to be known by Verifone. Validation of this entry should be enforced within the client application.'
          uniqueItems: false
          type: string
        value:
          uniqueItems: false
          type: string
      type: object
    businessidentifiertype:
      title: Business Identifier Type
      description: The key value pair showing the identifier type and the value. Each Merchant who is a registered legal entity may have one or more.
      uniqueItems: true
      required:
        - identifierType
        - value
      properties:
        identifierType:
          description: 'The actual business identifier changes by country and locale. There may be multiple in some instances. E.g.  Australia has an ABN, France a SIRET, US has EIN. The value is not enumerated to handle the multiple values that may be required. In many cases these values are not required to be known by Verifone. Validation of this entry should be enforced within the client application.'
          uniqueItems: false
          type: string
        value:
          uniqueItems: false
          type: string
      type: object
    capability:
      title: Device Capabilities
      description: A type indicator for the card reading capability of a POI or PED.
      uniqueItems: false
      enum:
        - CUSTOMER_DISPLAY
        - ICC
        - BARCODE
        - MAG_STRIPE_CONTACTLESS
        - MICR
        - EMV_CONTACTLESS
        - PINPAD
        - PRINTER
        - CONTACTLESS
        - CASHIER_DISPLAY
        - CAPTURE_CARD
        - MAG_STRIPE
        - MANUAL
        - TAG
        - UNKNOWN
        - NONE
        - OCR
      type: string
    card:
      title: A Card Payment Instrument.
      description: The Card instrument (mechanism of payment) element of a transaction event. The elements are sensitive data associated with the card performing the transaction. This Object allows additional custom properties.
      uniqueItems: false
      required:
        - instrumentType
      properties:
        sequenceNumber:
          description: A number distinguishing between separate cards with the same Primary Account Number. ISO8583 - DE 23
          maximum: 999
          uniqueItems: false
          type: integer
        country:
          $ref: '#/components/schemas/countrycode3'
          description: 'The three letter ISO 3166-Alpha-3 country code for the country of issue. (e.g. AUS = Australia). Note, ISO8583 and ISO20022 expect this format ISO3166 for country, in most other occurrences the 2 alpha variant is used. ISO8583 - DE 20'
          uniqueItems: false
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        instrumentType:
          description: To identify the type of instrument whether it is a card
          default: CARD
          uniqueItems: false
          type: string
        serviceCode:
          description: Services attached to the card as defined in ISO 7813.
          maxLength: 3
          minLength: 3
          pattern: '[a-zA-Z0-9]{3}'
          uniqueItems: false
          type: string
        cardProduct:
          description: 'The product name associated with the card brand. e.g. Classic, Standard, Gold, Platinum, World. This must correspond to an actual product name.'
          maxLength: 40
          uniqueItems: false
          type: string
        issuerName:
          description: 'The name of the card issuer, if known.'
          maxLength: 100
          uniqueItems: false
          type: string
        expiryMonth:
          description: A 2 digit value as shown on card. ISO8583 - DE 14
          maximum: 12
          uniqueItems: false
          type: integer
        ICC:
          $ref: '#/components/schemas/icc'
          description: The Integrated Circuit Card (ICC) or EMV data.
          uniqueItems: false
        expiryYear:
          description: A 4 digit value as shown on card.
          maximum: 9999
          uniqueItems: false
          type: integer
        cardVerificationType:
          description: A enumeration representing what happened during capture of the CVV. If this is applicable.
          uniqueItems: false
          enum:
            - CSCPRESENT
            - NOCSC
            - CSCBYPASS
            - CSCUNREADABLE
          type: string
        trackData:
          description: 'The information encoded on the magnetic stripe as specified in ISO 7813. ISO8583 - DE 45 (Track 1), DE 35 (Track 2). The full version of this data cannot be stored, but some truncated values can be.'
          items:
            $ref: '#/components/schemas/trackspecification'
            description: The card data track information where this is present on a payment request.
            uniqueItems: false
          maxItems: 3
          minItems: 0
          uniqueItems: false
          type: array
        maskedCardNumber:
          description: The masked value for the Card Number. This is included as an optional value because where it is used the client may be responsible for the formatting of the mask.
          maxLength: 21
          uniqueItems: false
          type: string
        issuerId:
          description: The identifier for the card issuer. Bank identifier number (BIN) of the issuer for routing purposes.
          maxLength: 15
          pattern: '^[a-zA-Z0-9]{1,15}$'
          uniqueItems: false
          type: string
        cardholderName:
          description: The Card holder name as it appears on the card.
          maxLength: 45
          uniqueItems: false
          type: string
        cardVerificationData:
          description: The Card Verification Value or Card Security Code (CVV/CVV2/CVC2/CID) that is printed onto the card and not available by mag stripe or ICC. For MasterCard and Visa this is a 3 digit code printed on the back of the card. For American Express it is normally a 4 digit code printed on the front. This value must never be persisted to the database
          maxLength: 4
          uniqueItems: false
          type: string
        expiryDay:
          description: 'The expiry date of the Card. ISO8583 - DE 14. Expiry dates are often represented as month and year. If the actual day is not know, omit this element.'
          maximum: 31
          uniqueItems: false
          type: number
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string to represent the card. Think of this as a fingerprint to the card as the same card should always be assigned the same <strong>id</strong>
          uniqueItems: false
        cardBrand:
          $ref: '#/components/schemas/cardtype'
          description: The scheme (or brand associated with the card).
          uniqueItems: false
        cardNumber:
          description: The Primary Account Number or Card Number. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 28
          minLength: 8
          uniqueItems: false
          type: string
        effectiveDate:
          $ref: '#/components/schemas/datenotime'
          description: The date upon which a card becomes effective.
          uniqueItems: false
      type: object
    carddata:
      title: The card data elements required within the .
      description: The Card Data elements that may be sensitive or replaced with an encrypted version. This follows the Nexo JSON Standard.
      uniqueItems: false
      properties:
        protectedCardData:
          $ref: '#/components/schemas/protectedcarddata'
          description: This element contains the protected data element containing the encrypted card data elements.
          uniqueItems: false
          type: object
        plainCardData:
          $ref: '#/components/schemas/sensitivecarddata'
          description: This element contains the card data elements that are considered sensitive under PCI DSS. These may be passed as part of an incoming message but the storage will be covered by PCI DSS rules.
          uniqueItems: false
          type: object
      type: object
      oneOf:
        - uniqueItems: false
          required:
            - sensitiveCardData
        - uniqueItems: false
          required:
            - protectedCardData
    cardholderdata:
      title: CardHolder Data
      description: Where a token is present in the model it is possible that there will also be another instrument representing the Card Holder details (CHD). This is because at some point the CHD will need to be retrieved in order to send a payment message.
      uniqueItems: false
      required:
        - cardNumber
      properties:
        sequenceNumber:
          description: A number distinguishing between separate cards with the same Primary Account Number. ISO8583 - DE 23
          maximum: 99
          uniqueItems: false
          type: integer
        cvv:
          description: The CVV card holder information. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 4
          uniqueItems: false
          type: string
        cardholderName:
          description: The Card holder name as it appears on the card.
          maxLength: 30
          uniqueItems: false
          type: string
        cardType:
          description: 'Set the card type, VISA, MASTER, etc.'
          maximum: 99
          uniqueItems: false
        expiryMonth:
          description: A 2 digit value as shown on card. ISO8583 - DE 14
          maximum: 12
          uniqueItems: false
          type: integer
        cardholderData:
          description: The free form data element provided by the tokenising application to associate with the Card Token.
          uniqueItems: false
          type: string
        expiryDay:
          description: The expiry date of the Card. ISO8583 - DE 14
          maximum: 31
          uniqueItems: false
          type: number
        expiryYear:
          description: A 4 digit value as shown on card.
          maximum: 9999
          uniqueItems: false
          type: integer
        cardNumber:
          description: The Primary Account Number or Card Number. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 19
          uniqueItems: false
          type: string
      type: object
    cardholderdatarequest:
      title: CardHolder Data Request
      description: 'Where a token is present in the model it is possible that there will also be another instrument representing the Card Holder details (CHD). This request model is to allow a simplified access to the underlying VHTS service. The token application is passed as the Authorization header within a Bearer Token. '
      uniqueItems: false
      required:
        - tokenApplication
        - cardDetails
        - tokenEntity
        - tokenType
      properties:
        batchPrimaryKey:
          description: Set the primary key of batch processing when its used for batch online operation.
          uniqueItems: false
          type: string
        tokenExpiryDate:
          $ref: '#/components/schemas/datenotime'
          description: 'When this Token will expire. This value is optional, a default value is used based upon the configuration for the entity.'
          uniqueItems: false
        renewToken:
          description: 'Set when to renew the token expiration if already present in database, else no side effect if value present.'
          uniqueItems: false
          type: string
        tokenApplication:
          description: The application that this Token is associated with.
          uniqueItems: false
          type: string
        clientCHDToken:
          description: 'Must be set when you want to tokenize with an already existing chd token, must be according with the format specified in entity or will be rejected'
          uniqueItems: false
          type: string
        tokenEntity:
          description: The entity that this token will belong to. This will be a scope applied to the creation and usage of the token such that it will only be relevant to that entity and its related children.
          uniqueItems: false
          type: string
        cardDetails:
          $ref: '#/components/schemas/cardholderdetails'
          description: The card details to be tokenised.
          uniqueItems: false
        tokenType:
          $ref: '#/components/schemas/tokenrequesttype'
          description: The type of Token(s) to be created.
          uniqueItems: false
        tokenAssuranceLevel:
          $ref: '#/components/schemas/tokenassurancetype'
          description: The Token assurance level is set to indicate the validity of the card details and how they were checked. Currently this is the responsibility of the client creating the Token.
          uniqueItems: false
        clientLPToken:
          description: 'Must be set when you want to tokenize with an already existing lp token, must be according with the format specified in entity or will be rejected'
          uniqueItems: false
          type: string
      type: object
    cardholderdataresponse:
      title: CardHolder Data Tokenisation Response
      description: This object is returned as the response to a request for Tokenisation.
      uniqueItems: false
      required:
        - tokenEntity
        - tokenApplication
        - tokenExpiryDate
        - tokenStatus
      properties:
        irreversibleToken:
          description: A token that cannot be reversed to Card Holder data. This is included in a Payment for auditing and tracking purposes.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenStatus:
          $ref: '#/components/schemas/tokenstatustype'
          description: The status of the Token. This would normally be Active after a successful Token creation.
          uniqueItems: false
        tokenExpiryDate:
          $ref: '#/components/schemas/datenotime'
          description: 'When this Token will expire. This value is optional, a default value is used based upon the configuration for the entity.'
          uniqueItems: false
        tokenApplication:
          description: The token application that this Token is associated with.
          uniqueItems: false
          type: string
        tokenEntity:
          description: The entity that this token belongs to. This will be a scope applied to the creation and usage of the token such that it will only be relevant to that entity.
          uniqueItems: false
          type: string
        cardholderToken:
          description: The two-way token identifier used to represent the Cardholder data.
          maxLength: 100
          uniqueItems: false
          type: string
      type: object
    cardholderdetails:
      title: CardHolder Data
      description: Where a token is present in the model it is possible that there will also be another instrument representing the Card Holder details (CHD). This is because at some point the CHD will need to be retrieved in order to send a payment message. This is a proection of elements in the standard CardHolderData Schema
      uniqueItems: false
      required:
        - cardNumber
      properties:
        sequenceNumber:
          description: A number distinguishing between separate cards with the same Primary Account Number. ISO8583 - DE 23
          maximum: 99
          uniqueItems: false
          type: integer
        cvv:
          description: The CVV card holder information. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 4
          uniqueItems: false
          type: string
        cardholderName:
          description: The Card holder name as it appears on the card.
          maxLength: 30
          uniqueItems: false
          type: string
        cardType:
          description: 'Set the card type, VISA, MASTER, etc.'
          maximum: 99
          uniqueItems: false
        expiryMonth:
          description: A 2 digit value as shown on card. ISO8583 - DE 14
          maximum: 12
          uniqueItems: false
          type: integer
        cardholderData:
          description: The free form data element supported by the VHTS application to associate with the Card Token.
          uniqueItems: false
          type: string
        expiryDay:
          description: The expiry date of the Card. ISO8583 - DE 14
          maximum: 31
          uniqueItems: false
          type: number
        expiryYear:
          description: A 4 digit value as shown on card.
          maximum: 9999
          uniqueItems: false
          type: integer
        cardNumber:
          description: The Primary Account Number or Card Number. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 19
          uniqueItems: false
          type: string
      type: object
    cardholderonlinepin:
      title: Cardholder Online PIN Data
      description: 'Encrypted personal identification number (PIN), format and related information.'
      uniqueItems: false
      required:
        - encryptedPINBlock
        - pinFormat
      properties:
        pinFormat:
          $ref: '#/components/schemas/pinformat'
          description: An indicator to describe the encrypted PIN data.
          uniqueItems: false
        encryptedPINBlock:
          $ref: '#/components/schemas/encryptedpinblock'
          description: |-
            The PIN data associated with the Card holder or Customer (where known). This value should be an encrypted representation of the PIN. This is attribute ISO8583 DE52.
             This value can <strong>never</strong> be persisted or logged.
          uniqueItems: false
        additionalInput:
          description: Additional information required to verify the PIN (Personal Identification Number).
          maxLength: 35
          uniqueItems: false
          type: string
      type: object
    cardtoken:
      title: Card Token
      description: This contains all the information that may be held against the card token.
      uniqueItems: false
      properties:
        irreversibleToken:
          description: The loss prevention one-way token that cannot be reversed to Card Holder data. This is included in a Payment for audit and tracking purposes.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenStatus:
          $ref: '#/components/schemas/tokenstatustype'
          description: An indicator of the current status of the Token.
          uniqueItems: false
        cardDetails:
          $ref: '#/components/schemas/cardholderdata'
          description: The Cardholder data that was associated with this token.
          uniqueItems: false
        tokenAssuranceLevel:
          $ref: '#/components/schemas/tokenassurancetype'
          description: The token assurance level. Token Assurance Level is a value that allows the Token Service Provider to indicate the confidence level of the Payment Token to PAN / Cardholder binding. It is determined as a result of the type of ID&V performed and the entity that performed it.
          uniqueItems: false
      type: object
    cardtype:
      title: Card or Scheme
      description: A type indicator for the card scheme.
      uniqueItems: false
      enum:
        - OTHER
        - AMEX
        - MAESTRO
        - JAL
        - DISCOVER
        - MASTERCARD
        - JCB
        - VISA
        - SWITCH
        - CB
        - DINERS
        - UPI
      type: string
    cavvresponsecode:
      title: CAVV Response Code
      description: |-
        This field will be populated for any Verified by Visa transaction and AVV Authorisation message sent by MasterCard SecureCode: This includes CAVV and AEVV from American Express SafeKey.

        CAVV Transaction Response Code Values:

        |CAVV Response Code|Description|
        |--------|-----------|
        |0|CAVV or AEVV Not Validated due to erroneous data submitted.|
        |1|CAVV or AEVV Failed Validation - Authentication Transaction. This is an indication of potential bad or fraudulent data submitted.|
        |2|CAVV or AEVV Passed Validation – Authentication Transaction.|
        |3|CAVV or AEVV Passed Validation – Attempted Authentication Transaction. (Determined that the Issuer ACS generated this value from the use of the Issuer’s CAVV/AEVV key[s]).|
        |4|CAVV or AEVV Failed Validation – Attempted Authentication Transaction. Attempted Authentication Transaction. This is an indication of potential bad or fraudulent data submitted as the CAVV/AEVV. (Determined that Visa generated this value from the use of CAVV/AEVV key[s]).|
        |5|Reserved.|
        |6|CAVV or AEVV Not Validated – Issuer not participated.  This value is generated when an Issuer requests the “do not verify” flag to be established for its BINs. This parameter enables an Issuer to temporarily stop CAVV/AEVV verification while resolving CAVV/AEVV key issues. VisaNet processes this value as a valid CAVV/AEVV.|
        |7|CAVV or AEVV Failed Validation – Attempted Authentication Transaction. This is an indication of potential bad or fraudulent data submitted as the CAVV/AEVV. (CAVV/AEVV generated with Visa Key).|
        |8|CAVV or AEVV Passed Validation – Attempted Authentication Transaction. (CAVV/AEVV generated with Visa Key).|
        |9|CAVV or AEVV Failed Validation – Attempted Authentication Transaction. This is an indication of potential bad or fraudulent data submitted as the CAVV/AEVV (CAVV/AEVV generated with Visa Key – Issuer ACS unavailable).|
        |99|An unknown value was returned from the processor.|
        |A|CAVV or AEVV Passed Validation – Attempted Authentication Transaction. (CAVV/AEVV generated with Visa Key – Issuer ACS unavailable).|
        |B|CAVV or AEVV Failed Validation – Attempted Authentication Transaction. This is an indication of potential bad or fraudulent data submitted as the CAVV/AEVV. (CAVV/AEVV generated with Visa Key).|
        |C|CAVV or AEVV Not Validated – Attempted Authentication Transaction. Issuer did not return a CAVV/AEVV results code in the authorisation response. VisaNet will treat this as valid CAVV/AEVV if the Issuer approves the authorisation.|
        |D|CAVV or AEVV Not Validated – Authentication. Issuer did not return a CAVV/AEVV results code in the authorisation response. VisaNet will treat this as valid CAVV/AEVV if the Issuer approves the authorisation.|
        |I|Invalid Security Data.|
        |U|Issuer does not participate or 3-D Secure data not utilised.|
        |NA|Blank CAVV or AEVV Not Present.|
      uniqueItems: false
      enum:
        - '99'
        - A
        - B
        - C
        - D
        - I
        - '0'
        - '1'
        - '2'
        - '3'
        - NA
        - '4'
        - '5'
        - U
        - '6'
        - '7'
        - '8'
        - '9'
      type: string
    certificateissuer:
      title: Certificate Issuer
      description: Certificate issuer name (see X.509).
      uniqueItems: false
      required:
        - distinguishedNames
      properties:
        distinguishedNames:
          description: Relative distinguished names.
          items:
            $ref: '#/components/schemas/distinguishedname'
            uniqueItems: false
          maxItems: 10
          minItems: 1
          uniqueItems: false
          type: array
      type: object
    channelcode:
      title: Payment Channel
      description: The channel indicator for the payment.
      uniqueItems: false
      enum:
        - OTHER
        - SECURE_ECOM
        - MAIL
        - STORED
        - POS
        - ECOM
        - TELE
        - MOBILE
        - VIRTUAL
      type: string
    communicationtype:
      title: Communication Type
      description: A type indicator for the communication types.
      uniqueItems: false
      enum:
        - DIAL
        - 4G
        - 3G
        - 2G
        - ISDN
        - ETHERNET
        - GPRS
        - UNKNOWN
        - LTE
        - BLUETOOTH
        - WIFI
      type: string
    contact:
      title: Contact
      description: The details of a Contact. This is a person or entity with some identifier that may be used for correspondence. Due to the flexible nature of this Entity additional properties may be added. This entity extends name to add the other contact details.
      uniqueItems: false
      properties:
        address:
          $ref: '#/components/schemas/address'
          description: An address that may be associated with the contact.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetimeoptional'
          description: The time that the this group entry was created.
          uniqueItems: false
        isPrimary:
          description: Used to indicate whether this Contact should be the Primary or first Contact to be used for correspondence with the Merchant. There can only be one primary contact.
          uniqueItems: false
          type: boolean
        name:
          $ref: '#/components/schemas/namedetails'
          description: Name information that may be associated with the contact.
          uniqueItems: false
        modifiedDate:
          $ref: '#/components/schemas/datetimeoptional'
          description: The time that the this group entry was last modified.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Device. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer. This can be considered to be a surrogate key. If one is not specified it will be generated internally.
          uniqueItems: false
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        phoneNumbers:
          description: The phone numbers to be used for the Contact. If you include this property there should be at least one phone number.
          items:
            $ref: '#/components/schemas/phone'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Contacts email address. This is distinct from the Merchant email address.
          uniqueItems: false
      type: object
    contactrequest:
      title: Contact Request
      description: The details of a Contact. This is a person or entity with some identifier that may be used for correspondence. Due to the flexible nature of this Entity additional properties may be added. This entity extends name to add the other contact details.
      uniqueItems: false
      properties:
        address:
          $ref: '#/components/schemas/address'
          description: An address that may be associated with the contact.
          uniqueItems: false
        isPrimary:
          description: Used to indicate whether this Contact should be the Primary or first Contact to be used for correspondence with the Merchant. There can only be one primary contact.
          uniqueItems: false
          type: boolean
        name:
          $ref: '#/components/schemas/namedetails'
          description: Name information that may be associated with the contact.
          uniqueItems: false
        phoneNumbers:
          description: The phone numbers to be used for the Contact. If you include this property there should be at least one phone number.
          items:
            $ref: '#/components/schemas/phone'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Contacts email address. This is distinct from the Merchant email address.
          uniqueItems: false
      type: object
    context:
      title: Context
      description: The context in which a transaction event occurred. This has multiple context component object; only the Payment Context is mandatory.
      uniqueItems: false
      required:
        - paymentContext
      properties:
        healthcareContext:
          $ref: '#/components/schemas/healthcare'
          description: These are healthcare payment details that can be included in the breakdown of the payment
          uniqueItems: false
        loyaltyContext:
          $ref: '#/components/schemas/loyalty'
          description: Optional object related to loyalty properties
          uniqueItems: false
        salesContext:
          $ref: '#/components/schemas/salescontext'
          description: This object contains references to the Sale Context normally these attributes have a special meaning within the Merchant's systems or POS.
          uniqueItems: false
        paymentContext:
          $ref: '#/components/schemas/paymentcontext'
          uniqueItems: false
      type: object
    contract:
      title: 'A Merchant Contract '
      description: A Merchant Contract with another Party.
      uniqueItems: false
      required:
        - merchantId
      properties:
        endDate:
          $ref: '#/components/schemas/datenotime'
          description: The date when the agreement will terminate.
          uniqueItems: false
        MCC:
          description: The Merchant Category Code (MCC). A 4 digit Code classifying the type of business being done by the card acceptor or Merchant (in accordance with ISO 18245).
          maxLength: 4
          minLength: 3
          pattern: '^[0-9]{3,4}$'
          uniqueItems: false
          type: string
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        paymentType:
          description: The contract may be for specific types of payment e.g. VISA or MasterCard.
          items:
            $ref: '#/components/schemas/paymenttype'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        otherParty:
          $ref: '#/components/schemas/contractparty'
          description: The other party to this contract. This will provide the identifiers required to route the correct messages.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        merchantId:
          description: The Code identifying the card acceptor as issued by the Acquiring Institution. This may not be unique across institutions. Also referred to as the MID. ISO8583 - DE 42
          maxLength: 15
          uniqueItems: false
          type: string
        contractId:
          description: 'An identifier used to represent this contract from a Merchant perspective. As this may not be unique across Gateways or Acquirers, the uuid is the surrogate key.'
          maxLength: 100
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        partnerId:
          description: An AliPay indicator. This is a user number corresponding to an authorised AliPay account number. Will always commence with 2088
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for a Merchant Agreement or Contract.
          uniqueItems: false
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          description: The contract will represent an agreement to process Payments in a given Currency.
          uniqueItems: false
        merchantMembershipNumber:
          description: |-
            This is referred to as the Payee's Member Merchant Number. Also referred to as the Card Acceptor ID.

            ** ISO8583 - DE 38 **Request Only as DE38 is the Authorisation Code on a Response **.
          maxLength: 12
          uniqueItems: false
          type: string
        startDate:
          $ref: '#/components/schemas/datenotime'
          description: The date when the agreement will commence.
          uniqueItems: false
      type: object
    contractparty:
      title: A Party Entity
      description: 'This represents a Party to a contract. One Party to a Contract will be a Merchant the other Party will be another Organisation whether Acquirer, Processor or Intermediary.'
      uniqueItems: false
      properties:
        acquiringInstitution:
          description: The code identify the acquiring institution to the transaction. ISO8583 DE 32
          maximum: 99999999999
          uniqueItems: false
          type: integer
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        role:
          $ref: '#/components/schemas/partytype'
          description: A Type that describes the role of this Party.
          uniqueItems: false
        processorId:
          description: The name of the processor that handled the transaction.
          uniqueItems: false
          type: string
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        paymentFacilitatorId:
          description: This is only relevant where there is a Payment Facilitator. This represents a merchant registered by an acquirer to facilitate transactions on behalf of sub-merchants.
          uniqueItems: false
          type: string
        name:
          description: A name to be assigned to this Party. This should represent a meaningful name for the organisation the Party represents
          maxLength: 40
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for a Contract Party.
          uniqueItems: false
        destinationId:
          description: It will contain the batch institution id. ISO8583 DE 93 transaction destination institution identification code
          uniqueItems: false
          type: string
        forwardingInstitution:
          description: The code identifying the forwarding institution where there is an intermediary (processor) for the Acquirer. ISO8583 DE 33
          maximum: 99999999999
          uniqueItems: false
          type: integer
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
      type: object
    contractrequest:
      title: 'Merchant Contract Request '
      description: A Merchant Contract with another Party.
      uniqueItems: false
      required:
        - merchantId
        - partyId
      properties:
        merchantId:
          description: The Code identifying the card acceptor as issued by the Acquiring Institution. This may not be unique across institutions. Also referred to as the MID. ISO8583 - DE 42
          maxLength: 12
          uniqueItems: false
          type: string
        endDate:
          $ref: '#/components/schemas/datenotime'
          description: The date when the agreement will terminate.
          uniqueItems: false
        contractId:
          description: An identifier used to represent this contract from a Merchant perspective. As this may not be unique across Gateways or Acquirers a uuid is assigned as the surrogate key.
          maxLength: 100
          uniqueItems: false
          type: string
        currency:
          $ref: '#/components/schemas/currencycode'
          description: The contract will represent an agreement to process Payments in a given Currency.
          uniqueItems: false
        partnerId:
          description: An AliPay indicator. This is a user number corresponding to an authorised AliPay account number. Will always commence with 2088
          maximum: 10000000000000000
          uniqueItems: false
          type: integer
        partyId:
          $ref: '#/components/schemas/uuid'
          description: The other party to this contract. This will provide the identifiers required to route the correct messages. The Party must already exist and this operation will expect the UUID of a Party to be passed.
          uniqueItems: false
        MCC:
          description: The Merchant Category Code (MCC). A 4 digit Code classifying the type of business being done by the card acceptor or Merchant (in accordance with ISO 18245).
          maxLength: 4
          minLength: 3
          pattern: '^[0-9]{3,4}$'
          uniqueItems: false
          type: string
        startDate:
          $ref: '#/components/schemas/datenotime'
          description: The date when the agreement will commence.
          uniqueItems: false
        paymentType:
          description: The contract may be for specific types of payment e.g. VISA or MasterCard.
          items:
            $ref: '#/components/schemas/paymenttype'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
      type: object
    countrycode:
      title: Country Code
      description: 'The [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as is used in that country''s top-level domain names.</blockquote>.'
      uniqueItems: false
      enum:
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AO
        - AQ
        - AR
        - AS
        - AT
        - RE
        - AU
        - AW
        - AX
        - AZ
        - RO
        - BA
        - BB
        - RS
        - BD
        - BE
        - RU
        - BF
        - BG
        - RW
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - SA
        - BQ
        - SB
        - BR
        - SC
        - BS
        - SD
        - BT
        - SE
        - BV
        - SG
        - BW
        - SH
        - SI
        - BY
        - SJ
        - BZ
        - SK
        - SL
        - SM
        - SN
        - SO
        - CA
        - SR
        - CC
        - SS
        - CD
        - ST
        - CF
        - SV
        - CG
        - CH
        - SX
        - CI
        - SY
        - SZ
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - TC
        - TD
        - CU
        - TF
        - CV
        - TG
        - CW
        - TH
        - CX
        - CY
        - TJ
        - CZ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - DE
        - TV
        - TW
        - DJ
        - TZ
        - DK
        - DM
        - DO
        - UA
        - UG
        - DZ
        - UM
        - EC
        - US
        - EE
        - EG
        - EH
        - UY
        - UZ
        - VA
        - ER
        - VC
        - ES
        - ET
        - VE
        - VG
        - VI
        - VN
        - VU
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - WF
        - GA
        - GB
        - WS
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - YE
        - HU
        - ID
        - YT
        - IE
        - IL
        - IM
        - IN
        - IO
        - ZA
        - IQ
        - IR
        - IS
        - IT
        - ZM
        - JE
        - ZW
        - ZZ
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - 'NO'
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
      type: string
    countrycode3:
      title: Country Code
      description: 'The [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as is used in that country''s top-level domain names.</blockquote>.'
      uniqueItems: false
      enum:
        - NZL
        - FJI
        - PNG
        - GLP
        - STP
        - BSB
        - MHL
        - WLF
        - CUB
        - SDN
        - GMB
        - CUW
        - MYS
        - MYT
        - TWN
        - POL
        - OMN
        - SUR
        - ARE
        - KEN
        - ARG
        - GNB
        - ARM
        - UZB
        - BTN
        - SEN
        - TGO
        - IRL
        - FLK
        - IRN
        - QAT
        - BDI
        - NLD
        - IRQ
        - SVK
        - SVN
        - GNQ
        - THA
        - ABW
        - ASM
        - SWE
        - ISL
        - MKD
        - BEL
        - ISR
        - KWT
        - LIE
        - BEN
        - DZA
        - ATA
        - BES
        - RUS
        - ATF
        - ATG
        - ITA
        - SWZ
        - TZA
        - PAK
        - BFA
        - CXR
        - PAN
        - SGP
        - UKR
        - JEY
        - KGZ
        - BVT
        - CHE
        - DJI
        - REU
        - CHL
        - PRI
        - CHN
        - PRK
        - SXM
        - MLI
        - BWA
        - HRV
        - KHM
        - IDN
        - PRT
        - MLT
        - TJK
        - VNM
        - CYM
        - PRY
        - SHN
        - CYP
        - SYC
        - RWA
        - BGD
        - AUS
        - AUT
        - LKA
        - PSE
        - GAB
        - ZWE
        - BGR
        - SYR
        - CZE
        - NOR
        - UMI
        - CIV
        - MMR
        - TKL
        - KIR
        - TKM
        - GRD
        - GRC
        - PCN
        - HTI
        - GRL
        - YEM
        - AFG
        - MNE
        - MNG
        - NPL
        - BHS
        - BHR
        - MNP
        - GBR
        - SJM
        - DMA
        - TLS
        - BIH
        - HUN
        - AGO
        - WSM
        - FRA
        - MOZ
        - NAM
        - PER
        - DNK
        - GTM
        - FRO
        - SLB
        - VAT
        - SLE
        - NRU
        - AIA
        - GUF
        - ZZZ
        - SLV
        - GUM
        - FSM
        - DOM
        - CMR
        - GUY
        - AZE
        - MAC
        - GEO
        - TON
        - MAF
        - NCL
        - SMR
        - ERI
        - KNA
        - MAR
        - BLM
        - VCT
        - BLR
        - MRT
        - BLZ
        - PHL
        - COD
        - COG
        - ESH
        - PYF
        - URY
        - COK
        - COM
        - COL
        - USA
        - ESP
        - EST
        - BMU
        - MSR
        - ZMB
        - KOR
        - SOM
        - VUT
        - ALA
        - ECU
        - ALB
        - ETH
        - GGY
        - MCO
        - NER
        - LAO
        - VEN
        - GHA
        - CPV
        - MDA
        - MTQ
        - MDG
        - SPM
        - NFK
        - LBN
        - LBR
        - BOL
        - MDV
        - GIB
        - LBY
        - HKG
        - CAF
        - LSO
        - NGA
        - MUS
        - IMN
        - LCA
        - JOR
        - GIN
        - VGB
        - CAN
        - TCA
        - TCD
        - AND
        - ROU
        - CRI
        - IND
        - MEX
        - SRB
        - KAZ
        - SAU
        - JPN
        - LTU
        - TTO
        - PLW
        - HMD
        - MWI
        - SSD
        - NIC
        - CCK
        - FIN
        - TUN
        - LUX
        - UGA
        - IOT
        - BRA
        - TUR
        - TUV
        - DEU
        - EGY
        - LVA
        - JAM
        - NIU
        - VIR
        - ZAF
        - BRN
        - HND
      type: string
    creditcardtoken:
      description: The Paypal Credit Card Token Object
      uniqueItems: false
      properties:
        last4:
          description: The last 4 digits of the stored credit card.
          uniqueItems: false
          type: string
        payerId:
          description: 'A unique ID that you can assign and track when you store a credit card in the vault or use a vaulted credit card. This ID can help to avoid unintentional use or misuse of credit cards. This ID can be any value you would like to associate with the saved card such as a UUID, user name, or email address. '
          uniqueItems: false
          type: string
        expiryMonth:
          description: A 2 digit value as shown on card. ISO8583 - DE 14
          maximum: 12
          uniqueItems: false
          type: integer
        creditCardId:
          description: The ID of the credit card that is stored in the Paypal vault.
          uniqueItems: false
          type: string
        expiryYear:
          description: A 4 digit value as shown on card. ISO8583 - DE 14
          maximum: 9999
          uniqueItems: false
          type: integer
        type:
          $ref: '#/components/schemas/cardtype'
          uniqueItems: false
      type: object
    currencycode:
      title: Currency Code
      description: |-
        Three-letter ISO 4217 alphabetical currency code. e.g. USD. Values correspond
        to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
      uniqueItems: false
      enum:
        - FJD
        - MXN
        - STD
        - LVL
        - SCR
        - CDF
        - BBD
        - GTQ
        - CLP
        - HNL
        - UGX
        - MXV
        - ZAR
        - TND
        - CUC
        - BSD
        - SLL
        - SDG
        - IQD
        - CUP
        - GMD
        - TWD
        - RSD
        - DOP
        - UYI
        - KMF
        - MYR
        - FKP
        - XOF
        - GEL
        - UYU
        - BTC
        - MAD
        - CVE
        - TOP
        - AZN
        - OMR
        - PGK
        - KES
        - SEK
        - BTN
        - UAH
        - GNF
        - ERN
        - MZN
        - SVC
        - ARS
        - QAR
        - IRR
        - MRO
        - XPD
        - CNY
        - THB
        - UZS
        - XPF
        - BDT
        - LYD
        - BMD
        - KWD
        - PHP
        - XXX
        - XPT
        - RUB
        - PYG
        - ISK
        - JMD
        - COP
        - MKD
        - USD
        - COU
        - DZD
        - PAB
        - SGD
        - USN
        - ETB
        - USS
        - KGS
        - SOS
        - VEF
        - VUV
        - LAK
        - BND
        - ZMK
        - XAF
        - LRD
        - XAG
        - CHF
        - HRK
        - ALL
        - CHE
        - DJF
        - ZMW
        - TZS
        - VND
        - XAU
        - AUD
        - ILS
        - CHW
        - GHS
        - GYD
        - KPW
        - BOB
        - KHR
        - MDL
        - IDR
        - XBA
        - KYD
        - AMD
        - XBC
        - XBB
        - BWP
        - SHP
        - TRY
        - LBP
        - XBD
        - TJS
        - JOD
        - AED
        - HKD
        - RWF
        - EUR
        - LSL
        - DKK
        - CAD
        - BGN
        - BOV
        - MMK
        - MUR
        - NOK
        - SYP
        - GIP
        - RON
        - LKR
        - NGN
        - CRC
        - CZK
        - PKR
        - XCD
        - ANG
        - HTG
        - BHD
        - KZT
        - SRD
        - SZL
        - LTL
        - SAR
        - TTD
        - YER
        - MVR
        - AFN
        - INR
        - AWG
        - KRW
        - NPR
        - JPY
        - MNT
        - AOA
        - PLN
        - GBP
        - SBD
        - XTS
        - HUF
        - BYR
        - BIF
        - MWK
        - MGA
        - XDR
        - BZD
        - BAM
        - EGP
        - MOP
        - NAD
        - SSP
        - NIO
        - PEN
        - NZD
        - WST
        - TMT
        - CLF
        - BRL
      type: string
    customer:
      title: Customer
      description: The Customer (Cardholder where a Card Instrument is used. This is the name used in the ISO20022/Nexo specifications.) component of a transaction event
      uniqueItems: false
      properties:
        lastName:
          description: The last name or family name of the Customer.
          maxLength: 100
          uniqueItems: false
          type: string
        country:
          $ref: '#/components/schemas/countrycode'
          description: Country Code associated with the Customer. Distinct from the ip_country which would represent where a specific transaction originated according to the IP Address. ISO 3166 numeric value e.g. 036.
          uniqueItems: false
        prefix:
          description: 'The prefix to the party name. This is sometimes referred to as a title, salutation or appellation.'
          maxLength: 120
          uniqueItems: false
          type: string
        language:
          $ref: '#/components/schemas/language'
          description: The language identifier that can be sent to Acquirer so that response messages can be customised. Should be captured as ISO 639-2.
          uniqueItems: false
        phoneNumbers:
          description: The phone numbers to be used for the Contact. If you include this property there should be at least one phone number.
          items:
            $ref: '#/components/schemas/phone'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
        billing:
          $ref: '#/components/schemas/billing'
          description: 'The bill reciver details like Name, Phone number, Address. This can be differ from shipping details'
          uniqueItems: false
        firstName:
          description: The first name of the Customer. This may be a proper name or some form of entity name or nickname.
          maxLength: 100
          uniqueItems: false
          type: string
        IPAddressV6:
          description: The IP Address v6 where the event originated.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv6
        organisationName:
          description: Where the Customer is an organisation or company this name should be used rather than the <li>firstName</li><li>lastName</li>
          maxLength: 100
          uniqueItems: false
          type: string
        identification:
          $ref: '#/components/schemas/customeridentification'
          description: 'For identification of the customer where required for a transaction. This hierarchy is kept to reflect the original ISO20022 structure. '
          uniqueItems: false
        shipping:
          $ref: '#/components/schemas/shipping'
          description: The shipping information related to the transaction where known. This may contain attributes to be validated.
          uniqueItems: false
        IPAddressV4:
          description: The IP Address v4 where the event originated.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
        middleName:
          description: The middle name of the Customer. This may be a proper name or some form of entity name or nickname.
          maxLength: 100
          uniqueItems: false
          type: string
        geometry:
          $ref: '#/components/schemas/geolocation'
          description: The location of the customer as represented by in GeoJson. It is anticipated that the location would most logically be a Point with co-ordinates.
          uniqueItems: false
        additionalInput:
          description: 'Additional information required for the PIN verification, (e.g. the driver number for some fleet cards).'
          uniqueItems: false
          type: string
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Contacts email address. This is distinct from the Merchant email address.
          uniqueItems: false
        IPCountry:
          $ref: '#/components/schemas/countrycode'
          description: Country Code associated with the IP Address. ISO 3166 numeric value e.g. 036.
          uniqueItems: false
        authentication:
          $ref: '#/components/schemas/customerauthentication'
          description: 'For authentication of the Customer identity. A Customer may be authenticated by a number of methods. This hierarchy is kept to reflect the original ISO20022 structure. '
          uniqueItems: false
      type: object
    customerauthentication:
      title: Customer(Cardholder) Authentication
      description: Authentication elements that may be present that are used to authenticate the customer.
      uniqueItems: false
      properties:
        verificationResult:
          $ref: '#/components/schemas/verificationresult'
          description: The customer verification result. This is used to map the nexo attributes for Cardholder authentication.
          uniqueItems: false
        authenticationMethod:
          $ref: '#/components/schemas/authenticationtype'
          description: How the Cardholder was authenticated.
          uniqueItems: false
        signature:
          $ref: '#/components/schemas/customersignature'
          description: The customer signature as used for authentication.
          uniqueItems: false
        voiceReferralPhone:
          $ref: '#/components/schemas/phone'
          description: 'Where a voice referral is used as part of the customer authentication, the originating number can be captured here.'
          uniqueItems: false
        AVSResult:
          description: |-
            The result of Address Verification on a provided address. This would only be relevant to CNP/E-commerce transactions where a Customer Address is known.

            In GICC this is a 2 character alphanumeric value.

            |Position|Description|
            |--------|-----------|
            |1|Authorisation Entity|
            |2|AVS Result Code|
          uniqueItems: false
          properties:
            resultCode:
              uniqueItems: false
              enum:
                - EXACT_MATCH
                - NO_MATCH
                - UNAVAILABLE
              type: string
            entity:
              description: Entity responsible for Authorising Address.
              uniqueItems: false
              type: string
          type: object
        onlinePinData:
          $ref: '#/components/schemas/cardholderonlinepin'
          description: Encrypted personal identification number (PIN) and related information.
          uniqueItems: false
        ageCheck:
          $ref: '#/components/schemas/agecheck'
          description: The age check goes in authorization and later used in settlement. Chip card used for slot machine playing.
          uniqueItems: false
        threeDSecure:
          $ref: '#/components/schemas/threedsecure'
          description: The 3DS elements captured as part of the transaction. Where these are applicable.
          uniqueItems: false
        signatureCaptured:
          description: Use this value to indicate that a signature was captured on device (even where this is not subsequently transmitted as part of the message).
          uniqueItems: false
          type: boolean
      type: object
    customeridentification:
      title: Customer(Cardholder) Identification
      description: Identification elements that may be present that are used to identify the customer.
      uniqueItems: false
      properties:
        passportNumber:
          description: The passport number.
          maxLength: 100
          uniqueItems: false
          type: string
        placeOfBirth:
          description: The town or city where the customer was born.
          maxLength: 100
          uniqueItems: false
          type: string
        identityCardNumber:
          description: Some countries require that all residents carry and identity card which can be used as a form of identification.
          maxLength: 100
          uniqueItems: false
          type: string
        socialSecurityNumber:
          description: The social security number.
          maxLength: 100
          uniqueItems: false
          type: string
        customerId:
          description: A merchant customer identifier where one is known. This may refer to a client system identifier for Customer and may have no internal meaning to Verifone.
          maxLength: 100
          uniqueItems: false
          type: string
        driverLicense:
          description: The drivers license number belonging to the Cardholder.
          maxLength: 100
          uniqueItems: false
          type: string
        dateOfBirth:
          $ref: '#/components/schemas/datenotime'
          description: The customer date of birth.
          uniqueItems: false
        taxRegistrationNumber:
          description: 'A value added tax identification number or VAT identification number is an identifier used in many countries, including the countries of the European Union (France - TVA, Germany - USt-IdNr, MOM - Sweden, GST Australia and New Zealand), for value added tax purposes'
          uniqueItems: false
          type: string
        businessIdentifiers:
          description: Many countries have unique identifiers for all companies that are legally registered to trade. It is not always necessary for Verifone to record these values.
          items:
            $ref: '#/components/schemas/businessidentifiertype'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        employeeIdentificationNumber:
          description: An employee identification number if relevant to the transaction.
          maxLength: 100
          uniqueItems: false
          type: string
        taxIdentificationNumber:
          description: The tax identification number issued in the country of residence.
          maxLength: 100
          uniqueItems: false
          type: string
        vehicle:
          $ref: '#/components/schemas/vehicle'
          description: The Vehicle attributes associated with the Customer.
          uniqueItems: false
      type: object
    customersignature:
      title: Customer(Cardholder) Signature data
      description: The elements used to represent a Customer authenticated by signature.
      uniqueItems: false
      properties:
        image:
          $ref: '#/components/schemas/signatureasimage'
          uniqueItems: false
        coordinates:
          $ref: '#/components/schemas/signatureascoordinates'
          uniqueItems: false
      type: object
      oneOf:
        - uniqueItems: false
          required:
            - coordinates
        - uniqueItems: false
          required:
            - image
    datenotime:
      description: 'A standalone date, as represented by the full-date chunk specified in RFC 3339, section 5.6. Dates with no associated time or time-zone data SHOULD be used to represent special legal values, such as date of birth. Implementers SHOULD consider using the standard date_time schema whenever possible instead. Note that this regular expression is not a complete validation: February 31, for example, is allowed, and nothing is known about leap years.'
      maxLength: 10
      minLength: 10
      pattern: '^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'
      uniqueItems: false
      type: string
    datetime:
      description: 'A valid date-time representation defined by RFC 3339, section 5.6. The regular expression cannot reject all invalid dates, but provides guidance. Unlike RFC 3339, this defines a practical (if impractically precise) length limit on the number of fractional seconds. RFC 3339 is a profile of the ISO 8601 date-time standard. This means, for instance, that seconds are mandatory, although fractional/milliseconds seconds are not.'
      maxLength: 64
      minLength: 20
      pattern: '^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$'
      uniqueItems: false
      type: string
      format: date-time
    datetimeoptional:
      description: 'A valid date-time representation defined by RFC 3339, section 5.6. The regular expression cannot reject all invalid dates, but provides guidance. Unlike RFC 3339, this defines a practical (if impractically precise) length limit on the number of fractional seconds. RFC 3339 is a profile of the ISO 8601 date-time standard. This means, for instance, that seconds are mandatory, although fractional/milliseconds seconds are not.'
      maxLength: 64
      pattern: '^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$'
      uniqueItems: false
      type: string
      format: date-time
    dcc:
      title: Dynamic Currency Conversion Details
      description: The Dynamic Currency Conversion related attributes for a foreign currency payment. Due to the variability of the different DCC providers extension attributes can be added.
      uniqueItems: false
      required:
        - dccAmount
        - exchangeRate
      properties:
        marginRatePercentage:
          description: Margin Rate Percentage Information.
          uniqueItems: false
          type: string
        conversionEntity:
          description: 'DCC conversion entity. Valid values are: '' '' (space) No information available ''0'' Interchange ''1'' Terminal (Dynamic Currency Conversion); the value 1 must be used for a DCC Purchase and a DCC Reversal) '
          uniqueItems: false
          type: string
        exchangeRate:
          description: 'Exchange Rate Information. The conversion rate - this will always be the equivalent of a sell rate, the DCC provider is selling foreign currency (the cardholders home currency) to buy the local currency where the transaction occurs and in which the Merchant expects to be paid.'
          uniqueItems: false
          type: number
          format: float
        referenceNumber:
          description: Rate Request Reference ID. Normally provided by the organisation providing DCC.
          uniqueItems: false
          type: string
        dccAdditionalAmount:
          $ref: '#/components/schemas/amountmoney'
          description: DCC additional amount.
          uniqueItems: false
        provider:
          description: A name for the DCC provider where this is recorded e.g. GlobalBlue or Travelex are providers of DCC services.
          uniqueItems: false
          type: string
        merchantId:
          description: The identifier assigned to this Merchant by the DCC Provider.
          maxLength: 100
          uniqueItems: false
          type: string
        exchangeRateAgreementDate:
          $ref: '#/components/schemas/datenotime'
          description: The date at which the exchange rate for the DCC transaction was set. This an optional field but does relate to specific providers like Fexco who provide this element.
          uniqueItems: false
        commissionInformation:
          description: Rate Request Commission information or description.
          uniqueItems: false
          type: string
        dccAmount:
          $ref: '#/components/schemas/amountmoney'
          description: 'This is the customer nominated currency and the amount in that currency. For a DCC transaction, the actual amount shown on the Transaction reflects the amount that will be the amount paid to the Merchant.'
          uniqueItems: false
        outcomeIndicator:
          $ref: '#/components/schemas/dccindicator'
          description: 'For DCC it is possible to indicate whether DCC was offered or if the Cardholder declined. '
          uniqueItems: false
        commissionAmount:
          $ref: '#/components/schemas/amountmoney'
          description: Rate Request Commission amount applicable to transaction.
          uniqueItems: false
      type: object
    dccindicator:
      description: The type of  DCC outcome <ul><li>DCC was not offered.</li><li>DCC was offered and declined. The reference number should be present where this occurs.</li><li>DCC was offered and accepted.</li>
      default: NOT_OFFERED
      uniqueItems: false
      enum:
        - ACCEPTED
        - NOT_OFFERED
        - DECLINED
      type: string
    dccresponse:
      title: Dynamic Currency Conversion Details
      description: The Dynamic Currency Conversion related attributes may be returned in a response.
      uniqueItems: false
      required:
        - dccAmount
        - exchangeRate
      properties:
        exchangeRate:
          $ref: '#/components/schemas/exchangerate'
          description: 'Exchange Rate Information. The conversion rate - this will always be the equivalent of a sell rate, the DCC provider is selling foreign currency (the cardholders home currency) to buy the local currency where the transaction occurs and in which the Merchant expects to be paid.'
          uniqueItems: false
        dccAmount:
          $ref: '#/components/schemas/amountmoney'
          description: 'This is the customer nominated currency and the amount in that currency. For a DCC transaction, the actual amount shown on the Transaction reflects the amount that will be the amount paid to the Merchant.'
          uniqueItems: false
        outcomeIndicator:
          $ref: '#/components/schemas/dccindicator'
          description: 'For DCC it is possible to indicate whether DCC was offered or if the Cardholder declined. '
          uniqueItems: false
      type: object
    destinationrouting:
      title: Transaction Source
      description: The routing component of a transaction event. This should cover the destination of the transaction. It can also be used to capture details such as the redirection details.
      uniqueItems: false
      properties:
        properties:
          uniqueItems: false
      type: object
      allOf:
        - $ref: '#/components/schemas/routing'
          uniqueItems: false
    destinationtype:
      uniqueItems: false
      enum:
        - PRINTER
        - CARDHOLDER
        - UNKNOWN
        - NONE
        - MERCHANT
      type: string
    device:
      title: Device
      description: 'The physical device. While a POI can be considered a logical construct, the physical device may actually change over time e.g. a Swapout or replacement. This is also referred to as the PED or PIN Entry Device.'
      uniqueItems: false
      properties:
        deviceType:
          description: 'The device type where transaction was captured, if known. This could be a model number or other description e.g. VX690.'
          maxLength: 30
          uniqueItems: false
          type: string
        serialNumber:
          description: A value to indicate the device serial number where known.
          maxLength: 25
          uniqueItems: false
          type: string
        capabilities:
          description: The Card reading capability of the Device.
          items:
            $ref: '#/components/schemas/capability'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        deviceKey:
          description: An Optional value for the Verifone US Market. This is UGP specific. A 64Bit Token that is automatically provided to the device from UGP as part of the Registration function
          maxLength: 64
          uniqueItems: false
          type: string
        description:
          description: An optional value where some Merchant specific entry is associated with a Device.
          maxLength: 30
          uniqueItems: false
          type: string
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        manufacturer:
          description: 'Optional value to indicate, where known, the Manufacturer of the Device.'
          maxLength: 30
          uniqueItems: false
          type: string
        updateCapabilities:
          description: The Card update capability of the Device.
          items:
            $ref: '#/components/schemas/capability'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        supportedComms:
          description: The Communication Types supported by this Device. This relates to the capability of the device not the comms method utilised for the specific transaction.
          items:
            $ref: '#/components/schemas/communicationtype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Device. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer. This can be considered to be a surrogate key. If one is not specified it will be generated internally.
          uniqueItems: false
        messageCapabilities:
          description: The display or printing capabilities of the Device to the Cardholder or Merchant
          items:
            $ref: '#/components/schemas/messagecapability'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        keyMetadata:
          description: A Device may have multiple keys injected as part of the key loading process. This array holds a definition(metadata) of the keys available. Not the actual key!
          items:
            $ref: '#/components/schemas/keydefinition'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
      type: object
    devicerequest:
      title: Device Request
      description: 'The physical device. While a POI can be considered a logical construct, the physical device may actually change over time e.g. a Swapout or replacement. This is also referred to as the PED or PIN Entry Device.'
      uniqueItems: false
      properties:
        deviceType:
          description: 'The device type where transaction was captured, if known. This could be a model number or other description e.g. VX690.'
          maxLength: 30
          uniqueItems: false
          type: string
        serialNumber:
          description: A value to indicate the device serial number where known.
          maxLength: 25
          uniqueItems: false
          type: string
        capabilities:
          description: The Card reading capability of the Device.
          items:
            $ref: '#/components/schemas/capability'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        deviceKey:
          description: An Optional value for the Verifone US Market. This is UGP specific. A 64Bit Token that is automatically provided to the device from UGP as part of the Registration function
          maxLength: 64
          uniqueItems: false
          type: string
        description:
          description: An optional value where some Merchant specific entry is associated with a Device.
          maxLength: 30
          uniqueItems: false
          type: string
        supportedComms:
          description: The Communication Types supported by this Device. This relates to the capability of the device not the comms method utilised for the specific transaction.
          items:
            $ref: '#/components/schemas/communicationtype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        messageCapabilities:
          description: The display or printing capabilities of the Device.
          items:
            $ref: '#/components/schemas/messagecapability'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        keyMetadata:
          description: A Device may have multiple keys injected as part of the key loading process. This array holds a definition(metadata) of the keys available. Not the actual key!
          items:
            $ref: '#/components/schemas/encryptionkey'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        manufacturer:
          description: 'Optional value to indicate, Where known, the Manufacturer of the Device.'
          maxLength: 30
          uniqueItems: false
          type: string
      type: object
    digestalgorithm:
      $ref: '#/components/schemas/digestalgorithmtype'
      description: The digest algorithm used to create mask.
      uniqueItems: false
    digestalgorithmtype:
      title: Digest Algorithm Type
      description: 'The digest algorithm used. <li>AES128 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key</li><li>AES192 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key</li><li>AES256 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key</li><li>TDEA - Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).</li><li>DUKPT - Derived Unique Key per Transaction. As specified ANSI X9.24-2009.</li><li>UKPT - Unique Key per Transaction or Master Session Key Encryption - ASN.1 - id-ukpt-wrap</li><li>UKPTA1 - Unique Key per Transaction or Master Session Key with AES 128 cryptographic key.</li>'
      uniqueItems: false
      enum:
        - SHA256
        - SHA1
        - SHA384
        - UNKNOWN
        - SHA512
      type: string
    displayunit:
      title: Device Display Unit Type
      description: The unit used to measure the width of the display.
      uniqueItems: false
      enum:
        - CHARACTER
        - PIXEL
      type: string
    distinguishedname:
      uniqueItems: false
      required:
        - attributeType
        - attributeValue
      properties:
        attributeValue:
          description: Value of the attribute of a distinguished name (see X.500).
          maxLength: 140
          uniqueItems: false
          type: string
        attributeType:
          $ref: '#/components/schemas/attributetype'
          description: The type of attribute distinguished name
          uniqueItems: false
      type: object
    electronicfallbacktype:
      title: Electronic Fallback Indicator
      description: |
        This is optional and should only be present when required. It is used as an indicator that shows the steps that the POI application took to approve a transaction. It should also be used in conjunction with the **online=false** setting.

        Value |  Description
        ------|-------------
        EFB|Electronic Fallback is when a terminal is unable to connect or get a response from a host. The transaction is approved by the terminal and any liability shifts from the card issuer to the card acquirer. EFB is a per transaction and no EFB state exists.
        CDO|Chip Decision Override is when a terminal cannot complete an EMV transaction when a host is unavailable or unresponsive. The terminal approved the transaction after the card declined the txn. CDO is not a state and is specific to each transaction.
        OFF|Offline approved using the ICC. This is used in conjunction with **online=false** to indicate an offline approved transaction using the chip.
      uniqueItems: false
      enum:
        - EFB
        - 'OFF'
        - CDO
      type: string
    emailaddress:
      title: Email Address
      description: 'A valid internationalized email address, as defined by RFC 5322, RFC 6530, and other RFCs. Due to RFC 5321, an email address can be up to 254 characters long even though up to 64 characters are allowed before and 255 characters are allowed after the @ sign. This pattern verifies only that the string contains an unquoted @ sign. See https://tools.ietf.org/html/rfc5322#section-3.4.1.'
      maxLength: 254
      minLength: 3
      pattern: '^.+@[^"\-].+$'
      uniqueItems: false
      type: string
    encryptedcontent:
      title: Encrypted Content
      description: The encrypted content.
      uniqueItems: false
      properties:
        contentEncryptionAlgorithm:
          $ref: '#/components/schemas/keyencryptionalgorithm'
          description: Algorithm used to encrypt the data.
          uniqueItems: false
        encryptedData:
          description: The encrypted content as a base64 encoded string.
          uniqueItems: false
          type: string
        contentType:
          $ref: '#/components/schemas/encryptedcontenttype'
          description: The type of encrypted content
          uniqueItems: false
      type: object
    encryptedcontenttype:
      title: Content Type
      description: 'Type of data protection used.<ul><li>DATA - Plain Data. ASN.1 id-data</li><li>SIGN - Signed Data. The signed data message item containing digital signature with the identification of signer(s). ASN.1 id-signed-data</li><li>EVLP - Enveloped Data. Encrypted Data with encryption key. ASN.1 id-envelopedData</li><li>DGST - Digested Data, message item containing a digest. Message Digest ASN.1 id-digestedData</li><li>AUTH - Authenticated Data. Message Authentication Code (MAC).  the Authenticated Data message item containing a Message Authentication Code (MAC) and the MAC generation key, protected by a transport key. ASN.1 id-ct-authData</li><li>ECYP - Name Key Encrypt Data message item containing encrypted data with only identificaiton of the encryption key.</li>'
      uniqueItems: false
      enum:
        - DATA
        - EVLP
        - ECYP
        - AUTH
        - SIGN
        - DGST
      type: string
    encrypteddata:
      title: Encrypted Data
      description: 'Encrypted data, result of the content encryption. As JSON doesn''t natively support binary it will need to be base64 encoded to be placed in this field.'
      uniqueItems: false
      type: string
    encryptedpinblock:
      title: Encrypted Personal Identification Number(PIN) information
      description: Encrypted PIN. (Personal Identification Number)
      uniqueItems: false
      required:
        - contentType
        - envelopedData
      properties:
        contentType:
          $ref: '#/components/schemas/encryptedcontenttype'
          default: EVLP
          uniqueItems: false
        envelopedData:
          $ref: '#/components/schemas/envelopeddata'
          description: This is currently a placeholder. The actual encryption definition is not currently implemented.
          uniqueItems: false
      type: object
    encryptionalgorithmparameter:
      title: Parameter
      description: Parameters associated with an encryption algorithm
      uniqueItems: false
      properties:
        maskGeneratorAlgorithm:
          $ref: '#/components/schemas/maskgeneratoralgorithm'
          description: Mask generator function cryptographic algorithm and parameters.
          uniqueItems: false
        digestAlgorithm:
          $ref: '#/components/schemas/digestalgorithmtype'
          description: Identification of the digest algorithm.
          uniqueItems: false
        initialisationVector:
          description: Initialisation vector of a cipher block chaining (CBC) mode encryption. This should be base64 encoded to be passed as a string.
          uniqueItems: false
          type: string
          format: x-binary
        bytePadding:
          $ref: '#/components/schemas/encryptionbytepadding'
          description: 'Byte padding for a cypher block chaining mode encryption, if the padding is not implicit.'
          uniqueItems: false
        encryptionFormat:
          $ref: '#/components/schemas/encryptionformattype'
          description: 'Format of data before encryption, if the format is not plaintext or implicit'
          uniqueItems: false
      type: object
    encryptionalgorithmtype:
      title: Encryption Algorithm Type
      description: 'The encryption algorithm used. <li>AES128 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key</li><li>AES192 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key</li><li>AES256 - AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key</li><li>TDEA - Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).</li><li>DUKPT - Derived Unique Key per Transaction. As specified ANSI X9.24-2009.</li><li>UKPT - Unique Key per Transaction or Master Session Key Encryption - ASN.1 - id-ukpt-wrap</li><li>UKPTA1 - Unique Key per Transaction or Master Session Key with AES 128 cryptographic key.</li>'
      uniqueItems: false
      enum:
        - RSA
        - ECC
        - AES192
        - TDEA
        - SHA
        - DES
        - AES128
        - UKPTA1
        - AES256
        - DUKPT2009
        - DUKPTAES
        - UNKNOWN
        - NONE
        - UKPT
      type: string
    encryptionbytepadding:
      title: Byte Padding
      description: 'Byte padding for a cypher block chaining mode encryption, if the padding is not implicit.<li>LNGT - Length Padding</li><li>NUL8 - Null80Padding</li><li>NULG - Null Length Padding</li><li>NULL - Null Padding</li><li>RAND - Random Padding</li>'
      uniqueItems: false
      enum:
        - 'NULL'
        - RAND
        - NULG
        - NUL8
        - LNGT
      type: string
    encryptionformattype:
      title: Encryption Format Type
      description: 'Format of data before encryption, if the format is not plaintext or implicit. <li>TR31 - Format of a cryptographic key specified by the ANSI X9 TR-31 standard</li><li>TR34 - Format of a cryptographic key specified by the ANSI X9 TR-34 standard.</li>'
      uniqueItems: false
      enum:
        - TR34
        - TR31
      type: string
    encryptionkey:
      title: Encryption Key definition
      description: The key definition is particularly applicable where DUKPT is used as a means to encrypt PIN or other elements of the payload. The following are used to create a KSN value which will also contain a transaction count.
      uniqueItems: false
      properties:
        BDKIdentifier:
          description: The identifier used for the Base Derivation Key (BDK).
          uniqueItems: false
          type: string
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        deviceIdentifier:
          description: The identifier for the Device.
          uniqueItems: false
          type: string
      type: object
    encryptionrecipient:
      title: Recipient of Protected Data
      description: 'The recipient of the protected data. Encryption key. If there are several Recipients, the key encryption must be the same for all the Recipient, but obviously not the transport key.'
      uniqueItems: false
      properties:
        keyIdentifier:
          $ref: '#/components/schemas/keyidentifier'
          description: 'Identification of a protection key without a session key, shared and previously exchanged between the initiator and the recipient.'
          uniqueItems: false
        keyTransport:
          $ref: '#/components/schemas/keytransport'
          description: Encryption Key using previously distributed asymmetric public key
          uniqueItems: false
        keyEncryptionKey:
          $ref: '#/components/schemas/keyencryptionkey'
          description: 'Encryption key protected by a transport key, using an symmetric cryptographic key. This would be the standard structure for a mechanism such as DUKPT.'
          uniqueItems: false
      type: object
      oneOf:
        - uniqueItems: false
          required:
            - keyTransport
        - uniqueItems: false
          required:
            - keyEncryptionKey
        - uniqueItems: false
          required:
            - keyIdentifier
    entitytype:
      title: Authorising Entity type
      description: |+
        The Authorising entity for the transaction. This indicates who was responsible for authorisation. In APACS this is the Response Additional Data Codes Position 4. The Acceptor would represent the Terminal or Merchant. This is a variation of the identification types in Nexo.

        Value |  Description
        ------|-------------
        POI|Originating Point of Interaction or Terminal
        ACCEPTOR|Card Acceptor
        AGENT|Intermediary agent or party acting on behalf of other parties
        DISSUER|Delegate Party who Issuer delegates to authorise payment.
        GATEWAY|The transaction was approved or declined by the Gateway.
        ISSUER|The party or entity that issued the payment card or instrument
        MERCHANT|The Merchant or Card Acceptor
        SCHEME|The card scheme authorised the payment.

      uniqueItems: false
      enum:
        - AGENT
        - GATEWAY
        - SCHEME
        - ISSUER
        - ACQUIRER
        - POI
        - ACCEPTOR
        - DISSUER
        - MERCHANT
      type: string
    entrymode:
      description: The entry mode for the payment instrument where card is presented at a PED. **Manual - In Finnish ISO this relates to a transaction without terminal**
      uniqueItems: false
      enum:
        - ICC_CONTACTLESS
        - ACCOUNT_DATA
        - ICC
        - BARCODE
        - MAG_STRIPE_CONTACTLESS
        - MAG_STRIPE
        - MANUAL
        - TAG
        - UNKNOWN
        - MICR
        - OCR
        - STORED_CREDENTIAL
      type: string
    envelopeddata:
      title: Data within an Digital Envelope.
      description: 'Data protection by encryption or by a digital envelope with an encryption key. This is encrypted data with a cryptographic key protected by a transport key or a Key encryption key (KEK). '
      uniqueItems: false
      required:
        - recipient
      properties:
        encryptedContent:
          $ref: '#/components/schemas/encryptedcontent'
          description: 'Data protection by encryption (digital envelope), with an encryption key.'
          uniqueItems: false
        recipient:
          description: A placeholder for the recipient information of the enveloped data. There can be multiple recipients.
          items:
            $ref: '#/components/schemas/encryptionrecipient'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        version:
          description: Version of the Protected Card Data structure
          uniqueItems: false
          type: integer
      type: object
    error:
      title: Error
      description: An Error object returned as part of the API layer
      uniqueItems: false
      required:
        - code
        - timestamp
        - type
      properties:
        code:
          description: 'An error identifier providing more granular detail above and beyond the HTTP response code. '
          uniqueItems: false
          type: string
        param:
          description: 'The parameter the error relates to if the error is parameter-specific. You can use this to display a message near the correct form field, for example.'
          uniqueItems: false
          type: string
        declineCode:
          description: 'For card errors resulting from a bank decline, a short string indicating the bank''s reason for the decline if they provide one.'
          uniqueItems: false
          type: string
        message:
          description: 'A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.'
          uniqueItems: false
          type: string
        type:
          description: The type of error returned.
          uniqueItems: false
          enum:
            - API_ERROR
            - INVALID_REQUEST_ERROR
            - CARD_ERROR
            - API_CONNECTION_ERROR
            - AUTHENTICATION_ERROR
            - RATE_LIMIT_ERROR
            - UNKNOWN
            - IDEMPOTENCY_ERROR
          type: string
        transactionId:
          description: The ID of the failed transaction.
          uniqueItems: false
          type: string
        timestamp:
          $ref: '#/components/schemas/datetime'
          description: The time that the error occurred.
          uniqueItems: false
      type: object
    errorresponse:
      title: Error Response
      description: Error Response returned in case of any exception occured while processinf the Request.
      uniqueItems: false
      required:
        - code
        - timestamp
        - type
      properties:
        code:
          description: 'An error identifier providing more granular detail above and beyond the HTTP response code. '
          uniqueItems: false
          type: string
        param:
          description: 'The parameter the error relates to if the error is parameter-specific. You can use this to display a message near the correct form field, for example.'
          uniqueItems: false
          type: string
        declineCode:
          description: 'For card errors resulting from a bank decline, a short string indicating the bank''s reason for the decline if they provide one.'
          uniqueItems: false
          type: string
        message:
          description: 'A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.'
          uniqueItems: false
          type: string
        type:
          description: The type of error returned.
          uniqueItems: false
          enum:
            - API_ERROR
            - INVALID_REQUEST_ERROR
            - CARD_ERROR
            - API_CONNECTION_ERROR
            - AUTHENTICATION_ERROR
            - RATE_LIMIT_ERROR
            - IDEMPOTENCY_ERROR
          type: string
        transactionId:
          description: The ID of the failed transaction.
          uniqueItems: false
          type: string
        timestamp:
          $ref: '#/components/schemas/datetime'
          description: The time that the error occurred.
          uniqueItems: false
      type: object
    event:
      title: Verifone Transaction Event.
      description: ' This is used to model a Transaction Payment Event. The end state of a payment may reflect multiple separate events. Each event contains 3 parts, a Header, the transaction detail or content and any security related data.'
      uniqueItems: false
      required:
        - header
        - transaction
      properties:
        security:
          $ref: '#/components/schemas/security'
          description: Optional. This should contain any security related information required to interpret the event.
          uniqueItems: false
        header:
          $ref: '#/components/schemas/header'
          description: Optional. The Header or contextual information describing the transmission of the payment event.
          uniqueItems: false
        transaction:
          $ref: '#/components/schemas/transaction'
          description: 'The transaction payment event. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
          uniqueItems: false
      type: object
    eventtype:
      title: Transaction Event Type
      description: |-
        The event that occurred to create this Transaction.

        In ISO8583 should correspond to the Message Class in  ISO8583. This currently only represents card transaction or card life cycle events. These correspond to the message indicators in the EPAS/NEXO specification, but separates the event from the request or response. These may be included in the header where it is necessary to trace the type of message that generated the event; this is used in conjunction with message type. These are referred to as the message category in the Nexo specification.<li>Admin - Includes, Reconciliation and Totals.</li><li>Batch - Transactions uploaded from file.</li>
      uniqueItems: false
      enum:
        - STATUS
        - NOTIFICATION
        - TRANSFER
        - AUTHORISATION
        - INTERNAL
        - BATCH
        - ADMIN
        - COMPLETION
        - GENERATE
        - CHARGEBACK
        - REVERSAL
      type: string
    eventupdate:
      title: Verifone Transaction Update Event.
      description: ' This is used to model a Transaction Payment Update Event. The end state of a payment may reflect multiple separate events. Each event contains 3 parts, a Header, the transaction detail or content and any security related data.'
      uniqueItems: false
      required:
        - header
        - transaction
      properties:
        header:
          $ref: '#/components/schemas/header'
          description: Optional. The Header or contextual information describing the transmission of the payment event.
          uniqueItems: false
        transaction:
          $ref: '#/components/schemas/transactionupdate'
          description: 'The transaction payment event. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
          uniqueItems: false
      type: object
    exchangerate:
      uniqueItems: false
      properties:
        exchangeRate:
          description: 'Exchange Rate Information. The conversion rate - this will always be the equivalent of a sell rate, the DCC provider is selling foreign currency (the cardholders home currency) to buy the local currency where the transaction occurs and in which the Merchant expects to be paid.'
          uniqueItems: false
          type: string
        minorUnits:
          description: Indicates the number of decimals in the amount. This may be we used with for example normal transaction amount or DCC amounts.
          uniqueItems: false
          type: string
    fallbackcode:
      title: Fallback Code
      description: |-
        The fallback indicator to show why a certain authentication method was used for the card. This can be applicable where the Chip cannot be read and the magnetic strip was used.
         FallbackAfterSuccess indicates previous card read was successful and in-progress failed.  Fallback after failure indicates in-progress read failed and  previous read also failed.
      uniqueItems: false
      enum:
        - ICC_CONTACTLESS_TO_MANUAL
        - ICC_TO_MANUAL
        - ICC_CONTACTLESS_TO_MAG_STRIPE
        - MAG_STRIPE_TO_MANUAL
        - ICC_TO_MAG_STRIPE
      type: string
    fallbacktype:
      description: |-
        The fallback indicator to show why a certain authentication method was used for the card. This can be applicable where the Chip cannot be read and the magnetic strip was used.
         FallbackAfterSuccess indicates previous card read was successful and in-progress failed.  Fallback after failure indicates in-progress read failed and  previous read also failed.
      default: NO_FALLBACK
      uniqueItems: false
      enum:
        - FALL_FORWARD
        - FALLBACK_AFTER_SUCCESS
        - FALLBACK_AFTER_FAILURE
        - NO_FALLBACK
      type: string
    fraud:
      title: Transaction Fraud Object
      description: Any fraud attributes or values that are recorded for this transaction.
      uniqueItems: false
      required:
        - status
      properties:
        statusDescription:
          description: The corresponding description to the value returned by a fraud service (if any).
          uniqueItems: false
          type: string
        status:
          description: The value returned by a fraud service (if any).
          uniqueItems: false
          type: string
      type: object
    frequencytype:
      title: Frequency type
      description: A frequency type measured according to a specified unit of time. The value represents the number of units e.g. 3 DAYS
      uniqueItems: false
      required:
        - timeUnit
        - value
      properties:
        value:
          description: 'The value, which is specified as an integer'
          uniqueItems: false
          type: integer
        timeUnit:
          $ref: '#/components/schemas/periodunittype'
          uniqueItems: false
      type: object
    geolocation:
      title: geometry
      description: 'One geometry specification as defined by GeoJSON adhering to https://tools.ietf.org/html/rfc7946. This provides multiple options to define a location, the simplest of these being a Point, a single position with latitude and longitude.'
      uniqueItems: false
      required:
        - type
        - coordinates
      type: object
      oneOf:
        - title: Point
          description: A point coordinates must represent a single position.
          uniqueItems: false
          properties:
            coordinates:
              $ref: '#/components/schemas/position'
              uniqueItems: false
            type:
              uniqueItems: false
              enum:
                - Point
        - title: MultiPoint
          description: The multi-point coordinates must represent an array of positions.
          uniqueItems: false
          properties:
            coordinates:
              $ref: '#/components/schemas/positionarray'
              uniqueItems: false
            type:
              uniqueItems: false
              enum:
                - MultiPoint
        - title: LineString
          description: A line string must have coordinates with an array of two positions or more.
          uniqueItems: false
          properties:
            coordinates:
              $ref: '#/components/schemas/linestring'
              uniqueItems: false
            type:
              uniqueItems: false
              enum:
                - LineString
        - title: MultiLineString
          description: A multi-line string is an array of line strings.
          uniqueItems: false
          properties:
            coordinates:
              items:
                $ref: '#/components/schemas/linestring'
                uniqueItems: false
              uniqueItems: false
              type: array
            type:
              uniqueItems: false
              enum:
                - MultiLineString
        - title: Polygon
          description: 'For type Polygon, the coordinates member must be an array of LinearRing coordinate arrays. For Polygons with multiple rings, the first must be the exterior ring and any others must be interior rings or holes.'
          uniqueItems: false
          properties:
            coordinates:
              $ref: '#/components/schemas/polygon'
              uniqueItems: false
            type:
              uniqueItems: false
              enum:
                - Polygon
        - title: MultiPolygon
          description: 'For a MultiPolygon, the coordinates member must be an array of Polygon coordinate arrays.'
          uniqueItems: false
          properties:
            coordinates:
              items:
                $ref: '#/components/schemas/polygon'
                uniqueItems: false
              uniqueItems: false
              type: array
            type:
              uniqueItems: false
              enum:
                - MultiPolygon
    group:
      title: A Group Node or Entity
      description: This represents a Node that may have children or parents. It exists to provided a directed graph that represents the Nodes of an organisation.
      uniqueItems: false
      required:
        - UUID
        - name
      properties:
        parent:
          $ref: '#/components/schemas/group'
          description: The link to a Parent Group if this Group is a member of a hierarchy. A single Group may only have one Parent. This is to enforce the directed hierarchy.
          uniqueItems: false
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetimeoptional'
          description: The time that the this group entry was created.
          uniqueItems: false
        groupDescription:
          description: A longer description that may be added to give more meaning to the definition of the entity.
          maxLength: 100
          uniqueItems: false
          type: string
        children:
          description: The Child groups that belong to this Group. Where the current Group is a leaf in the graph then there will not be any children and this element will not be present.
          items:
            $ref: '#/components/schemas/uuid'
            description: The Children will all be referenced by their UUID
            uniqueItems: false
          maxItems: 100
          minItems: 0
          uniqueItems: false
          type: array
        name:
          description: A name to be assigned to this Group. As the same names for Groups could occur across multiple Merchant organisations a surrogate key is used. The name is only unique within the scope of the merchant organisation.
          maxLength: 40
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetimeoptional'
          description: The time that the this group entry was last modified.
          uniqueItems: false
        tokenEntityId:
          description: Optionally included is an Token Entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Merchant. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer and multi-gateway. This can be considered to be a surrogate key.
          uniqueItems: false
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The group email address.
          uniqueItems: false
        contacts:
          description: The Contact details where these are known or required.
          items:
            $ref: '#/components/schemas/contact'
            uniqueItems: false
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
      type: object
    grouprequest:
      title: Group Request
      description: This represents a Node that may have children or parents. It exists to provided a directed graph that represents the Nodes of an organisation. The request is sent to create a Group.
      uniqueItems: false
      required:
        - name
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        groupDescription:
          description: A longer description that may be added to give more meaning to the definition of the entity.
          maxLength: 100
          uniqueItems: false
          type: string
        name:
          description: A name to be assigned to this Group. As the same names for Groups could occur across multiple Merchant organisations a surrogate key is used. The name is only unique within the scope of the merchant organisation.
          maxLength: 40
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        tokenEntityId:
          description: Optionally included is an token entity identifier. This may be used within the Verifone Hosted Tokenisation Service (VHTS) to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Card acceptor email address.
          uniqueItems: false
        parentId:
          $ref: '#/components/schemas/uuid'
          description: A parent group identifier where this Group will belong to an existing parent group.
          uniqueItems: false
      type: object
    header:
      title: Transaction Header
      description: The Header component of a transaction event. This contains metadata relating to the transaction.
      uniqueItems: false
      required:
        - source
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        schemaVersion:
          $ref: '#/components/schemas/semanticversion'
          description: 'A value representing the schema version used to generate the document. The value will be a semantic version, constructed as MAJOR.MINOR.PATCH. The format is a subset of the full semantic version and allows only numerics.'
          uniqueItems: false
        destination:
          $ref: '#/components/schemas/destinationrouting'
          description: The destination party or detail for the event (where known).
          uniqueItems: false
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time when this event was created on the server. It is not expected that this value is sent by a client. It allows auditing where a transaction event does not appear as this date could be significantly later than the create_time on the transaction object.
          uniqueItems: false
        eventType:
          $ref: '#/components/schemas/eventtype'
          description: The type of event that generated the transaction. Used in conjunction with message type this allows the recording of the MTI or ISO20022 message designation.
          uniqueItems: false
        state:
          $ref: '#/components/schemas/transactionstatetype'
          description: A mandatory state for a Transaction to indicate the current state that a Transaction has. These are related to a common state transition that all Payment Transactions will navigate.
          default: Authorised
          uniqueItems: false
        source:
          $ref: '#/components/schemas/sourcerouting'
          description: The initiating party or source detail for the event (where known).
          uniqueItems: false
        updatedDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time when this event was updated on the server. It is not expected that this value is sent by a client. It allows auditing where a transaction event does not appear as this date could be significantly later than the create_time on the transaction object.
          uniqueItems: false
        repeatCount:
          description: A counter when the event is a repeat of a previous event. This is generally due to lack of response or a timeout occurring waiting for response.
          default: '0'
          maximum: 999
          uniqueItems: false
          type: integer
      type: object
    healthcare:
      title: Healthcare Transaction
      description: These are healthcare payment details that can be included in the breakdown of the payment
      uniqueItems: false
      required:
        - id
        - name
      properties:
        amountVision:
          description: The FSA/HRA Vision-related Healthcare Expense Amount
          multipleOf: 1
          uniqueItems: false
          type: number
          format: float
        amountDental:
          description: The FSA/HRA Dental-related Healthcare Expense Amount
          multipleOf: 1
          uniqueItems: false
          type: number
          format: float
        amountPrescription:
          description: The FSA/HRA Prescription-related Healthcare Expense Amount
          multipleOf: 1
          uniqueItems: false
          type: number
          format: float
        amountClinic:
          description: The FSA/HRA Clinic-related Healthcare Expense Amount
          multipleOf: 1
          uniqueItems: false
          type: number
          format: float
        amountHealthcare:
          description: The FSA/HRA Total Healthcare Expense Amount. The sum of all the other healthcare categories
          multipleOf: 1
          uniqueItems: false
          type: number
          format: float
      type: object
    iban:
      title: IBAN
      description: A ISO13616 2007 representation of an International Bank Account Number (IBAN).
      maxLength: 34
      minLength: 5
      pattern: '^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$'
      uniqueItems: false
      type: string
    icc:
      title: The Integrated Circuit Card or EMV Data
      description: The Integrated Circuit Chip data that may be read or generated from an EMV compliant card.
      uniqueItems: false
      required:
        - data
      properties:
        transactionStatusInformation:
          description: TSI - Indicates the functions performed in a transaction DE55 9B
          uniqueItems: false
          type: string
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. As not all of the individual EMV Tags have explicit tags any specific values required should be included here.
          uniqueItems: false
        data:
          description: |-
            The contents of the ICC/EMV data retrieved from the chip. ISO8583 - DE55.
            DE 55 is a composite data element used to transmit EMV related data. The data field of the DE 55 is    composed of a concatenation of TLV (tag, length, value) elements. Each TLV element is    composed of (in order): -A tag field (1 or 2 bytes) which value is associated to a specific data -A length field (1 or 2 bytes) indicating the length of the value field -A value field containing the value of the data associated to the tag.

            This field will contain all EMV tags in standard TLV format including the P2PE encrypted tags (5A and 57). The P2PE encrypted tags (5A and 57) will have the entire TLV string encrypted and the encrypted data will be in a TLV format using the same tag. For example, tag 5A would look like the following:

            Encrypted: 5A103737DA95D8062F647A0FF747CC496570

            Decrypted: 5A084761739001010010
          maxLength: 999
          uniqueItems: false
          type: string
        transactionCertificate:
          description: The Transaction Certificate hash value. This is actually the result of the hash function. DE 55 Tag 98.
          maxLength: 20
          uniqueItems: false
          type: string
        terminalTransactionQualifiers:
          description: 'Indicates reader capabilities, requirements, and preferences to the card. TTQ byte 2 bits 8-7 are transient values, and reset to zero at the beginning of the transaction. All other TTQ bits are static values, and not modified based on transaction conditions. TTQ byte 3 bit 7 shall be set by the acquirer-merchant to 1b. DF55 9F66'
          uniqueItems: false
          type: string
        cvmList:
          description: Cardholder Verification Method (CVM) List. Identifies a method of verification of the cardholder supported by the application. DF55 8E
          uniqueItems: false
          type: string
        formFactorIndicatior:
          description: Indicates the form factor of the consumer payment device and the type of contactless interface over which the transaction was conducted. This information is made available to the issuer host. DF55 9F6E
          uniqueItems: false
          type: string
        terminalVerificationResults:
          description: The value used to show the status of the different functions so that it can be utilised on the Terminal/PED. DE55 Tag 95
          uniqueItems: false
          type: string
        ARQC:
          description: The application cryptogram for EMV cards. The Cryptogram is returned by the ICC in response to the GENERATE AC command. DE55 9F26
          uniqueItems: false
          type: string
        issuerActionCodeDenial:
          description: Specifies the issuers conditions that cause the denial of a transaction without attempt to go online. DE55 9F0E.
          maxLength: 5
          uniqueItems: false
          type: string
        sequenceNumber:
          description: The Application Primary Account Number (PAN) sequence number used to differentiate cards with the same PAN. DE55 5F34.
          maximum: 99
          uniqueItems: false
          type: integer
        merchantOrCustomerData:
          description: Contains customer exclusive data for transmission to the issuer or Proprietary merchant custom data that may be requested by the Card. DF55 9F7C
          uniqueItems: false
          type: string
        issuerActionCodeDefault:
          description: 'Specifies the issuer’s conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online. DE55 9F0D.'
          maxLength: 5
          uniqueItems: false
          type: string
        terminalType:
          description: 'The environment of the Terminal, its communication capability and its operational control. DE55 9F35'
          uniqueItems: false
          type: string
        secondaryAmount:
          $ref: '#/components/schemas/amountmoney'
          description: Secondary amount associated with the transaction representing a cashback amount. DE55 9F03.
          uniqueItems: false
        additionalTerminalCapabilities:
          description: Indicates the data input and output capabilities of the terminal. DE55 9F40
          uniqueItems: false
          type: string
        signedDynamicApplicationData:
          description: Signed Dynamic Application Data(DDA). Digital signature on critical application parameters for DDA or CDA. DF55 9F4B
          uniqueItems: false
          type: string
        track2EquivalentData:
          description: 'Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC), as follows: Primary Account Number (n, var. up to 19) Field Separator (Hex ''D'') (b) Expiration Date (YYMM) (n 4) Service Code (n 3) Discretionary Data (defined by individual payment systems) (n, var.) Pad with one Hex ''F'' if needed to ensure whole bytes (b). DE55 57.'
          uniqueItems: false
          type: string
        terminalCapabilities:
          description: 'The card data input, CVM and security capabilities of the terminal. DE55 9F33'
          uniqueItems: false
          type: string
        issuerAuthorisationCode:
          description: A Visa proprietary data element containing a code indicating that the transaction was an approved VLP transaction. If present indicates offline approval from card. DF55 9F74
          uniqueItems: false
          type: string
        applicationVersionNumber:
          description: A version number assigned by the payment system for the application. DE55. This could represent Tag 9F08 or 9F09.
          uniqueItems: false
          type: string
        applicationId:
          description: The Application Identifier (AID). Identifies the application as described in ISO/IEC 7816-5. Tag 4F DE 55.
          uniqueItems: false
          type: string
        cryptogramInformationData:
          description: The Cryptogram Information Data (CID). Tag 9F27.
          uniqueItems: false
          type: string
        terminalCountryCode:
          description: The country code of the Terminal (where it is operating). Tag 9F1A
          uniqueItems: false
          type: string
        signedStaticApplicationData:
          description: Signed Static Application Data(SDA). Digital signature on critical application parameters for SDA. DF55 93
          uniqueItems: false
          type: string
        CVMResults:
          description: The Card Verification Method (CVM) result from last verification performed. Tag 9F34 DE 55.
          uniqueItems: false
          type: string
        publicKeyCertificate:
          description: The Application Public Key Certificate certified by the Issuer. Used during CDA. DE55 9F46.
          uniqueItems: false
          type: string
        transactionCategoryCode:
          description: Transaction category code. DF55 9F53
          uniqueItems: false
          type: string
        transactionSequenceCounter:
          description: Counter maintained by the terminal that is incremented by one for each transaction. DF55 9F41
          uniqueItems: false
          type: number
        applicationPreferredName:
          description: The Application Preferred Name. The preferred mnemonic associated with the application ID (AID). DE 55 Tag 9F12.
          maxLength: 16
          minLength: 1
          uniqueItems: false
          type: string
        issuerActionCodeOnline:
          description: Specifies the issuer’s conditions that cause a transaction to be transmitted online. DE55 9F0F.
          maxLength: 5
          uniqueItems: false
          type: string
        unpredictableNumber:
          description: An unpredictable number value used to provide variability and uniqueness to the generation of a cryptogram. DE55 9F37.
          uniqueItems: false
          type: string
        dedicatedFileName:
          description: Dedicated File (DF) Name EMV Tag 84. As described in ISO/IEC 7816-4.Mandatory if present on card.
          uniqueItems: false
          type: string
        transactionCurrencyCode:
          description: The Transaction Currency Code. As read from the EMV data. Tag 5F2A. I actually the numeric currency value as specified in ISO 3166 e.g. 0978
          maxLength: 4
          uniqueItems: false
          type: string
        merchantNameLocation:
          description: Indicates the name and location of the merchant. DF55 9F4E
          uniqueItems: false
          type: string
        amountAuthorised:
          description: The amount authorised for the transaction. Tag 9F02.
          uniqueItems: false
          type: integer
        applicationExpirationDate:
          description: Date after which application expires. DE55 5F24.
          uniqueItems: false
          type: string
        staticDataAuthentication:
          description: The Static Data Authentication tag list of primitive data objects whose values fields are included in the hash result. DE55 9F4A.
          uniqueItems: false
          type: string
        issuerCountryCode:
          description: The country of issue relating to the EMV card specified as ISO 3166-3 numeric. DE55 Tag 5F28
          uniqueItems: false
          type: integer
        applicationPAN:
          description: Valid cardholder account number. DE55 5A.
          uniqueItems: false
          type: string
        applicationCurrencyCode:
          description: The currency in which the card account is managed. Specified in ISO 4217-3. DE55 9F42.
          uniqueItems: false
          type: integer
        dynamicNumber:
          description: A time-variant number generated by the ICC to be captured by the terminal. DE55 9F4C.
          uniqueItems: false
          type: string
        transactionDate:
          description: 'Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code. DE55 9A'
          maxLength: 6
          uniqueItems: false
          type: string
        applicationInterchangeProfile:
          description: The Application Interchange Profile (AIP) indicates the capabilities of the card to support specific functions in the application. DE55 Tag 82.
          uniqueItems: false
          type: string
        transactionType:
          description: 'Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code. DE55 9C'
          maxLength: 2
          uniqueItems: false
          type: string
        issuerApplicationData:
          description: The proprietary application data for transmission to issuer in an online transaction. DE55 Tag 9F10.
          uniqueItems: false
          type: string
        terminalApplicationVersionNumber:
          description: The terminal application version number as captured during the transaction. Tag 9F09
          uniqueItems: false
          type: string
        applicationLabel:
          description: The Application label. The application label is a Mnemonic associated with the AID according to ISO/IEC 7816-5. Tag 50.
          maxLength: 16
          minLength: 1
          uniqueItems: false
          type: string
        expectedApplicationTransactionCounter:
          description: Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC). DE 55 Tag 9F36.
          uniqueItems: false
          type: string
        merchantCategoryCode:
          description: The Merchant Category Code. DE55 9F15
          uniqueItems: false
          type: string
        issuerScriptsResult:
          description: Indicates the result of the terminal script processing
          uniqueItems: false
          type: string
        applicationTransactionCounter:
          description: Last Online Application Transaction Counter (ATC) Register. ATC value of the last transaction that went online. DE 55 Tag 9F13.
          uniqueItems: false
          type: string
        offlineCounterValue:
          description: Offline counter initial value come from card. DF55 9F63
          uniqueItems: false
          type: string
        uniqueSerialNumber:
          description: Unique and permanent serial number assigned to the IFD by the manufacturer. DF55 9F1E
          maxLength: 8
          uniqueItems: false
          type: string
      type: object
    icc2ndgen:
      title: The Next Generation Integrated Circuit Card or EMV Data
      description: The Integrated Circuit Chip data that may be read or generated from an EMV compliant card.
      uniqueItems: false
      properties:
        transactionStatusInformation:
          description: TSI - Indicates the functions performed in a transaction. DE55 9B
          uniqueItems: false
          type: string
        cryptogramInformationData:
          description: The Cryptogram Information Data (CID).Indicates the type of cryptogram and the actions to be performed by the terminal. Tag 9F27.
          uniqueItems: false
          type: string
        data:
          description: |-
            The contents of the ICC/EMV data retrieved from the chip. ISO8583 - DE55.
            DE 55 is a composite data element used to transmit EMV related data. The data field of the DE 55 is    composed of a concatenation of TLV (tag, length, value) elements. Each TLV element is    composed of (in order): -A tag field (1 or 2 bytes) which value is associated to a specific data -A length field (1 or 2 bytes) indicating the length of the value field -A value field containing the value of the data associated to the tag.

            This field will contain all EMV tags in standard TLV format including the P2PE encrypted tags (5A and 57). The P2PE encrypted tags (5A and 57) will have the entire TLV string encrypted and the encrypted data will be in a TLV format using the same tag. For example, tag 5A would look like the following:

            Encrypted: 5A103737DA95D8062F647A0FF747CC496570

            Decrypted: 5A084761739001010010
          maxLength: 999
          uniqueItems: false
          type: string
        transactionCertificate:
          description: The Transaction Certificate hash value. This is actually the result of the hash function. DE 55 Tag 98.
          maxLength: 20
          uniqueItems: false
          type: string
        authorisationCode:
          description: Nonzero value generated by the Issuer for an approved transaction. DE55 Tag 89
          uniqueItems: false
          type: string
        cardRiskManagementData:
          description: Card Risk Management Data Object List 2 (CDOL2).List of data objects (tag and length) to be passed to the ICC in the second GENERATE AC command. DE55 Tag 8D.
          uniqueItems: false
          type: string
        issuerActionCodeDefault:
          description: 'Specifies the issuer’s conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online. DE55 9F0D.'
          uniqueItems: false
          type: string
        issuerScriptTemplate2:
          description: Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command. DE55 Tag 72.
          uniqueItems: false
          type: string
        issuerApplicationData:
          description: The proprietary application data for transmission to issuer in an online transaction. DE55 Tag 9F10.
          uniqueItems: false
          type: string
        issuerScriptTemplate1:
          description: Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command. DE55 Tag 71.
          uniqueItems: false
          type: string
        authorisationResponseCode:
          description: Data element generated by the Issuer Host System or the Card Reader indicating the disposition of the transaction. Shown in this object only when returned from Issuer. DE55 Tag 8A
          uniqueItems: false
          type: string
        ARPC:
          description: The Authorisation Response Cryptogram (ARPC). Generated by the card issuer and used by ICC to verify response came from Issuer. This is DE55 Tag 9F26
          uniqueItems: false
          type: string
        terminalVerificationResults:
          description: The value used to show the status of the different functions so that it can be utilised on the Terminal/PED. DE55 Tag 95
          uniqueItems: false
          type: string
        ARQC:
          description: The application cryptogram for EMV cards. The Cryptogram is returned by the ICC in response to the GENERATE AC command. DE55 9F26
          uniqueItems: false
          type: string
        applicationUsageControl:
          description: Indicates issuer’s specified restrictions on the geographic usage and services allowed for the application. DE55 Tag 9F07
          uniqueItems: false
          type: string
        amountAuthorised:
          description: The amount authorised for the transaction. Tag 9F02.
          uniqueItems: false
          type: integer
        issuerAuthenticationData:
          description: Data sent to the ICC for online Issuer Authentication. DE55 Tag 91.
          uniqueItems: false
          type: string
      type: object
    iccresponse:
      title: The Integrated Circuit Card or EMV Data returned from Issuer
      description: The Integrated Circuit Chip data that may be returned in a response from Issuer.
      uniqueItems: false
      required:
        - data
      properties:
        sequenceNumber:
          description: The Application Primary Account Number (PAN) sequence number used to differentiate cards with the same PAN. DE55 5F34.
          maximum: 99
          uniqueItems: false
          type: integer
        cardStatusUpdate:
          description: The Card Status Update (CSU) contains data sent to the ICC to indicate whether they approve or decline the transaction. This may also initiate actions specified by the issuer.
          uniqueItems: false
          type: string
        issuerScriptIdentifier:
          description: This value may be sent in authorisation response from issuer when response contains Issuer Script. Assigned by the issuer to uniquely identify the Issuer Script. DE55 Tag 9F18.
          uniqueItems: false
          type: string
        cryptogramInformationData:
          description: The Cryptogram Information Data (CID). Tag 9F27.
          uniqueItems: false
          type: string
        proprietaryAuthenticationData:
          description: Contains issuer data for transmission to the card in the issuer authentication data of the an online transaction
          maxLength: 8
          uniqueItems: false
          type: string
        authorisationCode:
          description: Nonzero value generated by the Issuer for an approved transaction. DE55 Tag 89
          uniqueItems: false
          type: string
        applicationInterchangeProfile:
          description: The Application Interchange Profile (AIP) indicates the capabilities of the card to support specific functions in the application. DE55 Tag 82.
          maxLength: 2
          uniqueItems: false
          type: string
        issuerScriptTemplate2:
          description: Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command. DE55 Tag 72.
          uniqueItems: false
          type: string
        transactionType:
          description: 'Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code. DE55 9C'
          maxLength: 2
          uniqueItems: false
          type: string
        unpredictableNumber:
          description: An unpredictable number value used to provide variability and uniqueness to the generation of a cryptogram. DE55 9F37.
          uniqueItems: false
          type: string
        issuerApplicationData:
          description: The proprietary application data for transmission to issuer in an online transaction. DE55 Tag 9F10.
          maxLength: 32
          uniqueItems: false
          type: string
        issuerScriptCommand:
          description: The Issuer script command returned in the response data for transmission to the ICC. DE55 Tag 86.
          uniqueItems: false
          type: string
        issuerScriptResultVISA:
          description: Issuer Script Results for VISA. Issuer Script Results contains the results of the card issuer script update to the chip card. DF55 9F5B
          uniqueItems: false
          type: string
        expectedApplicationTransactionCounter:
          description: Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC). DE 55 Tag 9F36.
          uniqueItems: false
          type: string
        terminalCapabilities:
          description: 'The card data input, CVM and security capabilities of the terminal. DE55 9F33'
          uniqueItems: false
          type: string
        issuerScriptTemplate1:
          description: Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command. DE55 Tag 71.
          uniqueItems: false
          type: string
        authorisationResponseCode:
          description: Data element generated by the Issuer Host System or the Card Reader indicating the disposition of the transaction. Shown in this object only when returned from Issuer. DE55 Tag 8A
          uniqueItems: false
          type: string
        ARPC:
          description: The Authorisation Response Cryptogram (ARPC). Generated by the card issuer and used by ICC to verify response came from Issuer. This is DE55 Tag 9F26
          uniqueItems: false
          type: string
        terminalVerificationResults:
          description: The value used to show the status of the different functions so that it can be utilised on the Terminal/PED. DE55 Tag 95
          maxLength: 5
          uniqueItems: false
          type: string
        issuerAuthenticationData:
          description: Data sent to the ICC for online Issuer Authentication. DE55 Tag 91.
          uniqueItems: false
          type: string
      type: object
    industrytype:
      title: Industry Type
      description: The Industry type applicable to a Merchant.
      uniqueItems: false
      enum:
        - AIRLINE
        - CASH_ADVANCE
        - RETAIL
        - LODGING
        - PETROLEUM
        - INTERNET
        - MOTO
        - RESTAURANT
        - UNKNOWN
        - QUICK_SERVICE_RESTAURANT
        - DIRECT
        - VEHICLE_RENTAL
      type: string
    instalmenttype:
      title: Instalment Type
      description: The type of Instalment Transaction that is being performed.
      uniqueItems: false
      enum:
        - UNEQUAL
        - EQUAL
        - DEFERRED
      type: string
    issuerandserial:
      title: Issuer and Serial Number
      description: Certificate issuer name and serial number (see ITU X.509).
      uniqueItems: false
      required:
        - issuer
        - serialNumber
      properties:
        serialNumber:
          description: Certificate serial number (see X.509). This is a binary field so must be base64 encoded.
          uniqueItems: false
          type: string
          format: x-binary
        issuer:
          $ref: '#/components/schemas/certificateissuer'
          description: Certificate Issuer Name (X.509)
          uniqueItems: false
      type: object
    keydefinition:
      description: The key definition is particularly applicable where DUKPT is used as a means to encrypt PIN or other elements of the payload. The following are used to create a KSN value which will also contain a transaction count.
      uniqueItems: false
      properties:
        BDKIdentifier:
          description: The identifier used for the Base Derivation Key (BDK).
          uniqueItems: false
          type: string
        deviceIdentifier:
          description: The identifier for the Device.
          uniqueItems: false
          type: string
      type: object
    keyencryptionalgorithm:
      title: Key Encryption Algorithm
      description: Algorithm used to encrypt the key encryption key (KEK).
      uniqueItems: false
      required:
        - algorithm
      properties:
        parameter:
          $ref: '#/components/schemas/encryptionalgorithmparameter'
          description: Parameters associated with the CBC (Chain Block Chaining) encryption algorithm
          uniqueItems: false
        algorithm:
          $ref: '#/components/schemas/encryptionalgorithmtype'
          description: Identification of the encryption algorithm.
          uniqueItems: false
      type: object
    keyencryptionkey:
      title: Key Encryption Key
      description: 'Encryption key protected by a transport key, using an symmetric cryptographic key. This would be the standard structure for a mechanism such as DUKPT.'
      uniqueItems: false
      required:
        - KEKIdentification
        - KeyEncryptionAlgorithm
        - encryptedKey
      properties:
        encryptedKey:
          description: Encrypted key encryption key (KEK). This is binary data base64 encoded. For DUKPT 2009 this would represent the following elements <li>Device ID - 19 bits</li><li>Transaction Counter</li>. 5 Bytes in total.
          uniqueItems: false
          type: string
          format: x-binary
        keyEncryptionAlgorithm:
          $ref: '#/components/schemas/keyencryptionalgorithm'
          description: Algorithm to encrypt the key encryption key (KEK).
          uniqueItems: false
        version:
          description: Version of the KEK data structure
          default: '4'
          uniqueItems: false
          type: integer
        KEKIdentification:
          $ref: '#/components/schemas/keyidentifier'
          description: Identification of the Key Encrypting Key (KEK).
          uniqueItems: false
      type: object
    keyidentifier:
      title: Key Identifier
      description: Identification of the Key Encrypting Key (KEK).
      uniqueItems: false
      required:
        - keyIdentification
        - keyVersion
      properties:
        sequenceNumber:
          description: The number of uses of the Cryptographic key.
          uniqueItems: false
          type: integer
        keyVersion:
          description: 'The version of the DUKPT key. When the version represents the date of activation, it must have the format YYYYMMDDhh.'
          maxLength: 140
          uniqueItems: false
          type: string
        derivationIdentification:
          description: 'Identification used for derivation of a unique key from a master key provided for the data protection. This is binary data with will need to be base64 encoded. In DUKPT this identification information  is referred to as a Key Serial Number (KSN) sent by the initiator of the message to uniquely identify the derived key at the recipient. The structure should follow the standard: <li>Issuer Identification Number - 3 bytes</li><li>Merchant ID - 1 byte</li><li>Group ID - 1 byte</li>.'
          uniqueItems: false
          type: string
        keyIdentification:
          description: Name of the key. The nexo standard states that test keys should include the suffix - TestKey.
          maxLength: 140
          uniqueItems: false
          type: string
      type: object
    keytransport:
      title: Key Transport
      description: Encryption key using previously distributed asymmetric public key.
      uniqueItems: false
      required:
        - recipientIdentification
        - keyEncryptionAlgorithm
        - encryptedKey
      properties:
        recipientIdentification:
          $ref: '#/components/schemas/recipientidentification'
          description: Identification of a cryptographic asymmetric key for the recipient.
          uniqueItems: false
        encryptedKey:
          description: Encrypted key encryption key (KEK). This is binary data and must be base64 encoded.
          uniqueItems: false
          type: string
          format: x-binary
        keyEncryptionAlgorithm:
          $ref: '#/components/schemas/keyencryptionalgorithm'
          description: Algorithm to encrypt the key encryption key (KEK).
          uniqueItems: false
        version:
          description: 'The version of the encryption key used if applicable,'
          uniqueItems: false
          type: integer
      type: object
    language:
      title: Language
      description: 'The BCP-47 language tag. Composed of:<ul><li>The ISO-639 alpha-2 language code</li><li>(Optional) The ISO-15924 script tag</li><li>The ISO-3166 alpha-2 country code</li></ul>'
      maxLength: 10
      minLength: 2
      pattern: '^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$'
      uniqueItems: false
      type: string
    linearring:
      description: An array of four positions where the first equals the last
      uniqueItems: false
      allOf:
        - $ref: '#/components/schemas/positionarray'
          uniqueItems: false
        - minItems: 4
          uniqueItems: false
    linestring:
      description: An array of two or more positions
      uniqueItems: false
      allOf:
        - $ref: '#/components/schemas/positionarray'
          uniqueItems: false
        - minItems: 2
          uniqueItems: false
    locale:
      title: Locale
      description: 'JSON schema for locale. Based off the BCP-47 language tag, ISO-3166 alpha-2 country code, and Olsen IANA time zone ID. This is used where all elements are related to a transaction event.'
      uniqueItems: false
      required:
        - countryCode
      properties:
        countryCode:
          $ref: '#/components/schemas/countrycode'
          uniqueItems: false
        timezone:
          $ref: '#/components/schemas/timezone'
          uniqueItems: false
        language:
          $ref: '#/components/schemas/language'
          uniqueItems: false
      type: object
    location:
      title: Location
      description: 'JSON schema for location. There are multiple options to define a location, this object allows .'
      uniqueItems: false
      required:
        - country
      properties:
        country:
          $ref: '#/components/schemas/countrycode'
          description: Country Code of this location. ISO 3166-2 Alphanumeric value e.g. US
          uniqueItems: false
        locationCategory:
          $ref: '#/components/schemas/locationcategory'
          description: Location category of the place where the terminal performs the transaction.
          uniqueItems: false
        timezoneOffset:
          description: The offset expressed as a prefix of UTC followed by a plus/minus and hours. e.g. UTC+10
          maxLength: 10
          uniqueItems: false
          type: string
        timezoneShortId:
          description: The name of the time zone expressed in format e.g. CET (Central european time)
          maxLength: 4
          uniqueItems: false
          type: string
        timezoneId:
          $ref: '#/components/schemas/timezone'
          description: The name of the time zone expressed as format - Europe/Paris
          uniqueItems: false
        geometry:
          $ref: '#/components/schemas/geolocation'
          description: The location as represented by in GeoJson. It is anticipated that the location would most logically be a Point with co-ordinates.
          uniqueItems: false
      type: object
    locationcategory:
      title: Location Category
      description: |
        Location category of the place where the merchant actually performed the transaction.

        Value |  Description
        ------|-------------
        FIXED|Fixed location, **OnSite** e.g. shop
        ABOARD|Aboard a plain, ship, taxi, bus...
        NOMADIC| - A nomadic or non-fixed location. Used instead of Mobile as this would be an overloaded term.
        MOTO|The location is defined by the means of capture, mail order or telephone order.
        HOME|At the Customer's home or **OffSite** e.g. Tradesmen
        FIXED_MERCHANT|The POI is at Merchant Site
        FIXED_NON_MERCHANT|On Cardholders Site
        IN_FLIGHT|In Flight
      uniqueItems: false
      enum:
        - FIXED_NON_MERCHANT
        - ABOARD
        - FIXED_MERCHANT
        - FIXED
        - NOMADIC
        - MOTO
        - IN_FLIGHT
        - HOME
      type: string
    loyalty:
      title: Loyalty
      description: Loyalty Card data captured with the Payment transaction event.
      uniqueItems: false
      required:
        - loyaltyAmount
      properties:
        accountId:
          description: The loyalty account or membership identifier. In this instance the loyalty account will be awarded an amount represent in the structure.
          maxLength: 100
          uniqueItems: false
          type: string
        loyaltySecurityCode:
          description: As Loyalty schemas have notional value some schemas provide a security code for authorisation
          maxLength: 100
          uniqueItems: false
          type: string
        loyaltyAmount:
          $ref: '#/components/schemas/loyaltyamount'
          uniqueItems: false
        entryMode:
          $ref: '#/components/schemas/entrymode'
          description: How were the loyalty details captured
          uniqueItems: false
        token:
          description: An authentication token if provided.
          maxLength: 100
          uniqueItems: false
          type: string
      type: object
    loyaltyamount:
      description: When A loyalty component is included in the Payment or is provided as a consequence of the payment.
      uniqueItems: false
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amountmoney'
          description: A used to represent the amount value of the loyalty.
          uniqueItems: false
        loyaltyUnit:
          $ref: '#/components/schemas/loyaltyunit'
          description: Whatever the unit of loyalty is e.g. points.
          uniqueItems: false
        currency:
          $ref: '#/components/schemas/currencycode'
          description: Three-letter ISO 4217 currency code representing the currency in which the charge was made. .
          uniqueItems: false
        payWithLoyalty:
          description: Loyalty points are being used to pay in part or in full for this transaction.
          uniqueItems: false
          type: boolean
      type: object
    loyaltyunit:
      description: The unit of measure used to describe the loyalty elements. This should probably be described as an instrument as it is being used to express a value.
      uniqueItems: false
      enum:
        - MONETARY
        - POINT
      type: string
    macalgorithm:
      title: MAC Algorithm
      description: Algorithm used to generate the Message Authentication Code.
      uniqueItems: false
      required:
        - algorithm
      properties:
        parameter:
          $ref: '#/components/schemas/encryptionalgorithmparameter'
          description: Parameters associated with the MAC algorithm.
          uniqueItems: false
        algorithm:
          $ref: '#/components/schemas/macalgorithmtype'
          description: Identification of the encryption algorithm.
          uniqueItems: false
      type: object
    macalgorithmtype:
      title: Digest Algorithm Type
      description: The MAC algorithm used. <li>MACC - Retail CBC MAC.</li><li>MCCS - Retail CBC MAC with SHA256</li><li>CMA1 - Cipher based MAC. The CMA computed on the SHA-256 digest</li><li>MCC1 - Retail CBC MAC with SHA-1</li><li>CMA9 - CMAC computed on the SHA-384 digest of the message.</li><li>CMA5 - CMAC computed on the SHA-512 digest of the message.</li>
      uniqueItems: false
      enum:
        - MCC1
        - CMA5
        - MCCS
        - CMA1
        - MACC
        - CMA9
      type: string
    maskgeneratoralgorithm:
      title: Mask Generator Algorithm
      description: Mask generator function cryptographic algorithm and parameters.
      uniqueItems: false
      required:
        - algorithm
      properties:
        parameter:
          $ref: '#/components/schemas/digestalgorithm'
          uniqueItems: false
        algorithm:
          description: 'Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).'
          default: MGF1
          uniqueItems: false
          type: string
      type: object
    merchant:
      title: Merchant
      description: 'A Merchant object, limited in scope to the details captured relative to a transaction event.'
      uniqueItems: false
      properties:
        organisation:
          $ref: '#/components/schemas/organisation'
          description: The relationship to a parent organisation where one is defined.
          uniqueItems: false
        description:
          description: An attribute used to provide additional information about the Merchant.
          maxLength: 100
          uniqueItems: false
          type: string
        industry:
          $ref: '#/components/schemas/industrytype'
          description: An optional Industry type that is assigned to the Merchant.
          uniqueItems: false
        sites:
          description: 'The Site or Trading address that the Merchant Operates. This will normally be a one-to-one relationship, but in some (rare) cases a single Merchant entity may operate multiple sites under the same Contract.'
          items:
            $ref: '#/components/schemas/site'
            uniqueItems: false
          uniqueItems: false
          type: array
        locale:
          $ref: '#/components/schemas/locale'
          description: 'The locale of the Merchant, this will include a country, language and even time zone.'
          uniqueItems: false
        contracts:
          description: This represents any of the applicable merchant agreement or contract values. For any single payment there can only be a single applicable Merchant Agreement. These may be referred to by different names such as Contract.
          items:
            $ref: '#/components/schemas/contract'
            uniqueItems: false
          uniqueItems: false
          type: array
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        URL:
          description: The Card acceptor internet URL. This may be relevant where the url is shown on an receipt or other media where merchant details are presented.
          uniqueItems: false
          type: string
          format: uri
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        deliveryAddress:
          $ref: '#/components/schemas/address'
          description: The merchant delivery address. This may be used where a different delivery address is required from the Trading (Site) address.
          uniqueItems: false
        name:
          description: This could represent the Merchant trading or store name. The name of the card acceptor as known to the cardholder ISO8583 DE43.
          maxLength: 100
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        alipaySellerIdentifier:
          description: 'An optional value. If the Merchant is registered with Alipay, this represents the ID of the card acceptor (seller) as known by AliPay. This appears to be represented in an Alipay request by 2 properties: <li>partner</li><li>alipay_seller_id</li>'
          uniqueItems: false
          type: string
        taxRegistrationNumber:
          description: 'A value added tax identification number or VAT identification number is an identifier used in many countries, including the countries of the European Union (France - TVA, Germany - USt-IdNr, MOM - Sweden, GST Australia and New Zealand), for value added tax purposes'
          uniqueItems: false
          type: string
        businessIdentifiers:
          description: Many countries have unique identifiers for all companies that are legally registered to trade. It is not always necessary for Verifone to record these values.
          items:
            $ref: '#/components/schemas/businessidentifiertype'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        id:
          description: 'The identifier assigned to this Merchant and known by the Merchant or Client, whether this is an external Client, Client System or Gateway.'
          maxLength: 100
          uniqueItems: false
          type: string
        billingAddress:
          $ref: '#/components/schemas/address'
          description: The merchant billing address.
          uniqueItems: false
        tokenEntityId:
          description: Optionally included is an Token Entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Merchant. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer and multi-gateway. This can be considered to be a surrogate key.
          uniqueItems: false
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Card acceptor email address.
          uniqueItems: false
        contacts:
          description: The Merchant contact details where these are known or required.
          items:
            $ref: '#/components/schemas/contact'
            uniqueItems: false
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
      type: object
    merchantrequest:
      title: Merchant Request
      description: 'A Merchant object, limited in scope to the details captured relative to a transaction event.'
      uniqueItems: false
      required:
        - merchantId
        - name
        - contracts
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        description:
          description: An attribute used to provide additional information about the Merchant.
          maxLength: 100
          uniqueItems: false
          type: string
        industry:
          $ref: '#/components/schemas/industrytype'
          description: An optional Industry type that is assigned to the Merchant.
          uniqueItems: false
        locale:
          $ref: '#/components/schemas/locale'
          description: 'The locale of the Merchant, this will include a country, language and even time zone.'
          uniqueItems: false
        URL:
          description: The Card acceptor internet URL. This may be relevant where the url is shown on an receipt or other media where merchant details are presented.
          uniqueItems: false
          type: string
          format: uri
        merchantId:
          description: 'The identifier assigned to this Merchant and known by the Merchant or Client, whether this is an external Client, Client System or Gateway.'
          maxLength: 100
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/address'
          description: The merchant delivery address. This may be used where a different delivery address is required from the Trading (Site) address.
          uniqueItems: false
        name:
          description: This could represent the Merchant trading or store name. The name of the card acceptor as known to the cardholder ISO8583 DE43.
          maxLength: 100
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        alipaySellerIdentifier:
          description: 'An optional value. If the Merchant is registered with Alipay, this represents the ID of the card acceptor (seller) as known by AliPay.'
          uniqueItems: false
          type: string
        taxRegistrationNumber:
          description: 'A value added tax identification number or VAT identification number is an identifier used in many countries, including the countries of the European Union (France - TVA, Germany - USt-IdNr, MOM - Sweden, GST Australia and New Zealand), for value added tax purposes'
          uniqueItems: false
          type: string
        businessIdentifiers:
          description: Many countries have unique identifiers for all companies that are legally registered to trade. It is not always necessary for Verifone to record these values.
          items:
            $ref: '#/components/schemas/businessidentifier'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        billingAddress:
          $ref: '#/components/schemas/address'
          description: The merchant billing address.
          uniqueItems: false
        tokenEntityId:
          description: Optionally included is an Token Entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Card acceptor email address.
          uniqueItems: false
      type: object
    messagecapability:
      description: The capability of the Device associated with a POI to display or print messages to a Cardholder or Merchant. These closely align to the options supported through ISO20022 (NEXO/EPAS).
      uniqueItems: false
      properties:
        unit:
          $ref: '#/components/schemas/displayunit'
          description: The unit used to measure the width and height of the display.
          default: CHARACTER
          uniqueItems: false
        availableLanguages:
          description: The languages available to be rendered by the device where known.
          items:
            $ref: '#/components/schemas/language'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        destination:
          description: The number of lines that can be displayed on the screen.
          items:
            $ref: '#/components/schemas/destinationtype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        width:
          description: The number of columns that can be displayed on the screen.
          uniqueItems: false
          type: integer
        height:
          description: The number of lines that can be displayed on the screen.
          uniqueItems: false
          type: integer
      type: object
    metadata:
      description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
      uniqueItems: false
      type: object
    namedetails:
      title: Name Details
      description: 'An object representing the name or component names of a party, person or business. No elements are mandatory due to the different usages, but the business rules need to be applied in the context where name is used.'
      uniqueItems: false
      properties:
        firstName:
          description: The given name of contact.
          maxLength: 120
          uniqueItems: false
          type: string
        lastName:
          description: The surname name or family name of the contact. This is required when the name is for a party or person. Can also include the matronymic or mother's family name where this is customarily used.
          maxLength: 120
          uniqueItems: false
          type: string
        prefix:
          description: 'The prefix to the party name. This is sometimes referred to as a title, salutation or appellation.'
          maxLength: 120
          uniqueItems: false
          type: string
        alternateFullName:
          description: The alternate name for the party. This can be a business name or nickname. This should be used where the name of the party cannot be parsed into its constituent parts such as first name or last name. If the party is a business then this should always be present.
          maxLength: 200
          uniqueItems: false
          type: string
        middleName:
          description: The middle name or names for a party or person.
          maxLength: 120
          uniqueItems: false
          type: string
        suffix:
          description: The name suffix for the party.
          maxLength: 120
          uniqueItems: false
          type: string
      type: object
    onlinereason:
      description: |
        The reason that online authorisation was sought for the transaction. These closely align to the options supported through ISO20022 (NEXO/EPAS).

        Value | ISO Reason Code | ISO Description
        :------|:-----------------|:----------------
        CAD|1507|CAD Forced
        CARD_ISSUER_SIGNED_OFF|1001|Card Issuer Signed Off
        CARD_ISSUER_TIMED_OUT|1002|Card Issuer timed out on original request.
        CARD_ISSUER_UNAVAILABLE|1003|Card Issuer unavailable
        COMPLETED_PARTIALLY|4004|Completed partially
        CUSTOMER_CANCELLATION|4000|Customer cancellation
        DELAYED_RESPONSE|4006|Response received too late
        DEPOSIT_OUT_OF_BALANCE|4008|Deposit out of balance
        DEPOSIT_OUT_OF_BALANCE_CONTENT|4011|Deposit out of balance/applied contents
        DEVICE_UNABLE_TO_COMPLETE|4007|Card acceptor, Merchant, device unable to complete transaction
        FORMAT_ERROR|4003|Format error, no action taken
        GAMBLING|4200|National use, gambling payout
        HOT_CARD|4351|Private use, Card on hot card list
        ICC|1505|ICC Forced
        ICC_FAILURE|1501|ICC out of order
        ICC_PROCESS_ERR|1500|ICC Unable to Process
        ICC_PROCESSED|1005|ICC processed
        ICC_TERMINAL_ERR|1504|ICC Terminal Error
        INVALID_RESPONSE_NO_ACTION|4020|Invalid response, with no action taken
        ISSUER|1509|Issuer Forced
        MERCHANT|1506|Merchant Forced
        NO_CHECK_IN_ENVELOPE|4009|No cheque in envelope
        NOTIFICATION_REQUIRED_BY_CARD|4352|Private use, notification required for card
        OFFLINE_LESS_6_NO_BALANCE_INQUIRY|1776|Private use, offline less than 6 hours with no balance inquiry
        OFFLINE_LESS_6_BALANCE_INQUIRY|1777|Private use, offline less than 6 hours with balance inquiry
        OFFLINE_MORE_6_NO_BALANCE_INQUIRY|1778|Private use, offline more than 6 hours with no balance inquiry
        OFFLINE_MORE_6_BALANCE_INQUIRY|1779|Private use, offline more than 6 hours with balance inquiry
        OFFLINE_NO_AUTHORISATION|1780|Private use, offline with no authorisation
        ORIGINAL_AMOUNT_INCORRECT|4005|Original amount incorrect
        OVER_FLOOR_LIMIT|1510|Over Floor Limit
        PAYMENT_OUT_OF_BALANCE|4010|Payment out of balance
        PAYMENT_OUT_OF_BALANCE_CONTENT|4012|Payment out of balance/applied contents
        PIN_LOCKED|4201|National use, PIN has been locked
        RANDOM|1502|Chip Random Selection
        RANDOM_TERMINAL|1503|Terminal Random Selection
        STAND_IN_ACQUIRER|1007|Stand-in processing at the card acquirer's option
        STAND_IN_ISSUER|1000|Stand-in processing at the card issuer's option
        STATUS|1651|National use, amount status check
        SUSPECTED_MALFUNCTION|4002|Suspected malfunction
        SUSPECTED_MALFUNCTION_CARD_RETAINED|4014|Suspected malfunction, card retained
        SUSPECTED_MALFUNCTION_CARD_RETURNED|4015|Suspected malfunction, card returned
        SUSPECTED_MALFUNCTION_NOT_UPDATED|4016|Suspectde malfunction, track 3 not updated
        SUSPECTED_MALFUNCTION_NO_CASH|4017|Suspected malfunction, no cash dispensed
        SUSPICIOUS|1511|Merchant Suspicious
        TERMINAL|1508|Terminal Forced
        TERMINAL_PROCESSED|1004|Terminal processed
        TIMED_OUT_NO_CASH|4018|Timed-out taking money, no cash dispensed
        TIMED_OUT_CARD_RETAINED_NO_CASH|4019|Timed-out taking card/card retained and no cash dispensed
        TIMEOUT_WAITING|4021|Timeout waiting for response
        UNDER_FLOOR_LIMIT|1006|Under floor limit
        UNSPECIFIED|4001|Unspecified reason for reversal, no action taken
        UNABLE_TO_DELIVER_MESSAGE_TO_POI|4013|Unable to deliver message to point of service.
      default: TERMINAL
      uniqueItems: false
      enum:
        - TERMINAL_PROCESSED
        - CUSTOMER_CANCELLATION
        - CONTROLLED_BIN
        - STATUS
        - FLOOR_LIMIT
        - ICC_PROCESSED
        - OFFLINE_LESS_6_NO_BALANCE_INQUIRY
        - SUSPECTED_MALFUNCTION_NO_CASH
        - OFFLINE_MORE_6_NO_BALANCE_INQUIRY
        - UNKNOWN_BIN
        - TIMED_OUT_NO_CASH
        - CAD
        - FORMAT_ERROR
        - SUSPECTED_MALFUNCTION_CARD_RETURNED
        - DEPOSIT_OUT_OF_BALANCE_CONTENT
        - ICC_PROCESS_ERR
        - FORCE
        - DELAYED_RESPONSE
        - OFFLINE_LESS_6_BALANCE_INQUIRY
        - SUSPICIOUS
        - TOTAL_AMOUNT
        - PIN_LOCKED
        - TERMINAL
        - CARD_ISSUER_SIGNED_OFF
        - ICC_TERMINAL_ERR
        - INVALID_RESPONSE_NO_ACTION
        - EXCEPTION_CONFIG
        - COMPLETED_PARTIALLY
        - STAND_IN_ACQUIRER
        - MERCHANT
        - NO_CHECK_IN_ENVELOPE
        - UNABLE_TO_DELIVER_MESSAGE_TO_POI
        - SUSPECTED_MALFUNCTION
        - PAYMENT_OUT_OF_BALANCE_CONTENT
        - SUSPECTED_MALFUNCTION_CARD_RETAINED
        - CARD_ISSUER_TIMED_OUT
        - FLOW_CONTROL
        - NOTIFICATION_MESSAGE_REQUIRED_BY_CARD
        - FAILED_SCRIPT_UPDATE
        - CURRENCY
        - PAYMENT_OUT_OF_BALANCE
        - STAND_IN_ISSUER
        - ICC_FAILURE
        - OFFLINE_NO_AUTHORISATION
        - RANDOM
        - ORIGINAL_AMOUNT_INCORRECT
        - ICC
        - DEVICE_UNABLE_TO_COMPLETE
        - CONTROLLED_PAN
        - UNDER_FLOOR_LIMIT
        - DEPOSIT_OUT_OF_BALANCE
        - HOT_CARD
        - UNSPECIFIED
        - ISSUER
        - CARD_ISSUER_UNAVAILABLE
        - SUSPECTED_MALFUNCTION_NOT_UPDATED
        - GAMBLING
        - RANDOM_TERMINAL
        - TIMEOUT_WAITING
        - TIMED_OUT_CARD_RETAINED_NO_CASH
        - OFFLINE_MORE_6_BALANCE_INQUIRY
      type: string
    openapi3template:
      uniqueItems: false
    orderitem:
      description: The description of an item that was included in a transaction or purchase.
      uniqueItems: false
      required:
        - name
        - quantity
        - price
      properties:
        quantity:
          description: The item quantity.
          maximum: 9999999999
          uniqueItems: false
          type: integer
        price:
          $ref: '#/components/schemas/amountmoney'
          description: The item cost. This is converted into the common Verifone type including the currency.
          uniqueItems: false
        name:
          description: The item name
          maxLength: 127
          uniqueItems: false
          type: string
        description:
          description: The item description. This should only appear for Payments covered by the PayPal method.
          maxLength: 127
          uniqueItems: false
          type: string
        tax:
          description: The item tax. This is only supported for the Paypal payment method.
          uniqueItems: false
          type: string
        SKU:
          description: The Stock Keeping Unit (SKU).
          maxLength: 127
          uniqueItems: false
          type: string
        URL:
          description: Optional. The URL to the item information.
          maxLength: 2048
          uniqueItems: false
          type: string
      type: object
    organisation:
      title: An Organisation.
      description: An Organisation is an entity that operates Merchants. There is a one-to-many relationship between the Organisation and Merchants.
      uniqueItems: false
      required:
        - UUID
        - name
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this group entry was created.
          uniqueItems: false
        name:
          description: A name to be assigned to this Organisation.
          maxLength: 40
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this group entry was last modified.
          uniqueItems: false
        description:
          description: A longer description that may be added to give more meaning to the definition of the Organisation or it's role.
          maxLength: 100
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the Organisation. This is should be a unique internal value for Verifone.
          uniqueItems: false
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Organisation email address.
          uniqueItems: false
      type: object
    organisationrequest:
      title: Organisation Request
      description: This represents the request object to create a new Organisation.
      uniqueItems: false
      required:
        - name
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        groupDescription:
          description: A longer description that may be added to give more meaning to the definition of the Organisation or it's role.
          maxLength: 100
          uniqueItems: false
          type: string
        name:
          description: A name to be assigned to this Organisation.
          maxLength: 40
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Organisation email address.
          uniqueItems: false
      type: object
    partyrequest:
      title: A Party Entity Request
      description: 'This represents a Party to a contract. One Party to a Contract will be a Merchant the other Party will be another Organisation whether Acquirer, Processor or Intermediary.'
      uniqueItems: false
      required:
        - name
      properties:
        acquiringInstitution:
          description: The code identify the acquiring institution to the transaction. ISO8583 DE 32
          maximum: 99999999999
          uniqueItems: false
          type: integer
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        role:
          $ref: '#/components/schemas/partytype'
          description: A Type that describes the role of this Party.
          uniqueItems: false
        paymentFacilitatorId:
          description: This is only relevant where there is a Payment Facilitator. This represents a merchant registered by an acquirer to facilitate transactions on behalf of sub-merchants.
          uniqueItems: false
          type: string
        name:
          description: A name to be assigned to this Party. This should represent a meaningful name for the organisation the Party represents
          maxLength: 40
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        forwardingInstitution:
          description: The code identifying the forwarding institution where there is an intermediary (processor) for the Acquirer. ISO8583 DE 33
          maximum: 99999999999
          uniqueItems: false
          type: integer
      type: object
    partytype:
      title: Party Type
      description: The Party type of an entity who has a Contract with a Merchant.
      default: ACQUIRER
      uniqueItems: false
      enum:
        - PROCESSOR
        - ACQUIRER
        - INTERMEDIARY
      type: string
    payee:
      description: The recipient of the funds in the transaction. Under normal circumstances this is to be the Merchant.
      uniqueItems: false
      properties:
        merchantId:
          description: The encrypted paypal account ID for the payee.
          uniqueItems: false
          type: string
        email:
          description: 'The email address associated with the payee''s PayPal account. If the provided email address is not associated with any PayPal account, the payee can only receive PayPal Wallet payments. Direct credit card payments are denied due to card compliance requirements.'
          uniqueItems: false
          type: string
      type: object
    payerinfo:
      description: The Paypal Payer Info object. This is a subset of the potential attributes.
      uniqueItems: false
      properties:
        firstName:
          description: The payer's first name.
          uniqueItems: false
          type: string
        lastName:
          description: The payer's last name.
          uniqueItems: false
          type: string
        country:
          $ref: '#/components/schemas/countrycode'
          uniqueItems: false
        phone:
          $ref: '#/components/schemas/phone'
          uniqueItems: false
        payerId:
          description: The PayPal-assigned encrypted payer ID.
          uniqueItems: false
          type: string
        middleName:
          description: The payer's middle name.
          uniqueItems: false
          type: string
        salutation:
          description: The payer's salutation or title.
          uniqueItems: false
          type: string
        suffix:
          description: The payer's suffix name.
          uniqueItems: false
          type: string
        email:
          description: The payer's email address
          maxLength: 127
          uniqueItems: false
          type: string
      type: object
    paymentcontext:
      title: Payment Context
      description: These properties will refer to the context by which a Payment was received associated with the transaction event. This concept also exists within the OpenBank API where the Risk object also contains a context code
      uniqueItems: false
      required:
        - cardPresent
        - cardholderPresent
      properties:
        fallbackCode:
          $ref: '#/components/schemas/fallbackcode'
          description: This is an optional item included in some specifications as part of the POS entry mode used to indicate the specific details of how fallback was performed.
          uniqueItems: false
        characterSet:
          description: |-
            The character set used to encode parameters.

            This would also correspond to the Alipay '_input_charset'.
          maxLength: 10
          uniqueItems: false
          type: string
        EBTType:
          description: The Electronic Benefit Type associated with Payment. US Only.
          uniqueItems: false
          enum:
            - CashBenefits
            - FoodStamp
          type: string
        channel:
          $ref: '#/components/schemas/channelcode'
          description: |-
            One of the available channels.
            This is a reference to ISO8583 DE 22.
          uniqueItems: false
        locationType:
          $ref: '#/components/schemas/attendancetype'
          description: |-
            This indicates the location that the payment occurred.
            The use of this field is limited as indicates only the type of location, Merchant, Cardholder, Other, Unknown.
          uniqueItems: false
        isBatch:
          description: Is this payment submitted as part of a batch of transactions. Where applicable there may be an associated batch number also captured.
          uniqueItems: false
          type: boolean
        salesChannel:
          $ref: '#/components/schemas/saleschanneltype'
          description: The Sales channel or means of interaction to capture the instrument details.
          uniqueItems: false
        promoCode:
          description: A code defined by the merchant that affects the calculation from amount and units to points.
          uniqueItems: false
          type: string
        acquirerReference:
          description: The Acquirer reference number associated to the transaction. ISO8583 - DE 31. This is referred to as the Partner ID in AliPay
          uniqueItems: false
          type: string
        cardholderPresent:
          description: Was a card holder present when the transaction was performed.
          uniqueItems: false
          type: boolean
        entryMode:
          $ref: '#/components/schemas/entrymode'
          description: The method by which the card details were captured. See Card Entry Method (ISO20022 Payment Context). See entrymethod. This is a reference to ISO8583 DE 22.
          uniqueItems: false
        authentication:
          description: The Cardholder authentication method employed for this transaction. This is a reference to ISO8583 DE 22.
          items:
            $ref: '#/components/schemas/authenticationtype'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        batchNumber:
          description: Used only where a payment event occurs as part of a parent batch of events.
          uniqueItems: false
          type: string
        merchantSkip3DS:
          description: Merchant requested to skip 3D Secure even though cardholder was enrolled.
          uniqueItems: false
          type: boolean
        accountType:
          $ref: '#/components/schemas/accounttype'
          description: The account selected for payment. This is a reference to ISO8583 DE 03.
          uniqueItems: false
        merchantForce:
          description: The merchant overrode duplication checking for transaction. Same account and amount will be allowed.
          uniqueItems: false
          type: boolean
        electronicFallback:
          $ref: '#/components/schemas/electronicfallbacktype'
          description: |
            Electronic Fallback is when a POI is unable to connect or get a response from a host even though online approval is normally required.
             The transaction in this scenario is approved by the terminal and any liability shifts from the card issuer to the card acquirer.
             EFB is a per transaction and no EFB state exists.
          uniqueItems: false
        onlineReason:
          $ref: '#/components/schemas/onlinereason'
          description: If the transaction went online for approval it is possible to indicate why that occured. This is a reference to ISO8583 DE 22.
          uniqueItems: false
        fallbackReason:
          $ref: '#/components/schemas/fallbacktype'
          description: |-
            Whether the channel required to use fallback for capture of card detail.
            This is a reference to ISO8583 DE 22. FFLB - Card Fallback after a previous failure, SFLB - Card Fallback after a previous successful read, NFLB - No fallback. Card read as expected.
          uniqueItems: false
        merchantPresent:
          $ref: '#/components/schemas/attendancetype'
          description: 'Only relevant for Cardholder present transactions. Value (ATTENDED, SEMIATTENDED or UNATTENDED).'
          uniqueItems: false
        fraud:
          $ref: '#/components/schemas/fraud'
          description: Fraud related attributes related to the transaction. This may include outcomes from fraud checking or other flags.
          uniqueItems: false
        online:
          description: If the transaction was submitted online or was captured offline and subsequently submitted to the processor or acquirer. In ISO8583 this may result in an Advice message being generated (and repeated where necessary) rather than a Request.
          uniqueItems: false
          type: boolean
        attendantLanguage:
          $ref: '#/components/schemas/language'
          description: The language that is presented to the Attendant at the POI.
          uniqueItems: false
        applicationId:
          description: An optional Application identifier that originated this event. This may be recorded where there are multiple applications or some indicator is required.
          uniqueItems: false
          type: string
        attendance:
          $ref: '#/components/schemas/attendancetype'
          description: One of the available attendance values. This is a reference to ISO8583 DE 22.
          uniqueItems: false
        cardPresent:
          description: Was a card physically present during transaction.
          uniqueItems: false
          type: boolean
      type: object
    paymentcontexttype:
      description: A type indicator for the payment context. This is taken from the Open Bank API (Related to PSD2) and is not yet used.
      default: RETAIL_GOODS_OR_SERVICE
      uniqueItems: false
      enum:
        - ECOMMERCE_SERVICES
        - OTHER
        - ECOMMERCE_GOODS
        - BILL_PAYMENT
        - RETAIL_GOODS_OR_SERVICE
        - PERSON_TO_PERSON
      type: string
    paymentoptions:
      description: The payment options requested for the transaction.The payment method requested for this transaction. This field does not apply to the credit card payment method.
      uniqueItems: false
      enum:
        - INSTANT_FUNDING_SOURCE
        - IMMEDIATE_PAY
        - UNRESTRICTED
      type: string
    paymenttype:
      title: Payment Type
      description: A type indicator for the payment that is being processed.
      uniqueItems: false
      enum:
        - SWISH
        - ZIP
        - DISCOVER
        - TEN_PAY
        - WECHAT
        - CHEQUE
        - DOMESTIC_DEBIT
        - KLARNA
        - DINERS
        - UPI
        - ANDROID_PAY
        - GIFT
        - EBT
        - MASTERCARD
        - APPLE_PAY
        - BAIDU_PAY
        - CB
        - SAMSUNG_PAY
        - BANK
        - AFTERPAY
        - JCB
        - VISA
        - GARMIN_PAY
        - CASH
        - AMERICAN_EXPRESS
        - ZELLE
        - OTHER
        - JD_PAY
        - PAYPAL
        - ALIPAY
        - VENMO
      type: string
    paypal:
      title: Paypal Instrument
      description: The Paypal instrument used for the transaction. This reflect the payment object as defined by Paypal.
      uniqueItems: false
      required:
        - id
        - instrumentType
      properties:
        instrumentType:
          description: To identify the type of instrument whether it is Paypal
          default: PAYPAL
          uniqueItems: false
          type: string
        fundingInstruments:
          description: The instrument used to complete the Paypal payment. It may only be a Credit Card or a Token.
          items:
            uniqueItems: false
            oneOf:
              - $ref: '#/components/schemas/card'
                uniqueItems: false
              - $ref: '#/components/schemas/creditcardtoken'
                uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this entry was created.
          uniqueItems: false
        failureReason:
          description: 'If the Paypal payment failed, this represents a record of the reason.'
          uniqueItems: false
          enum:
            - UNABLE_TO_COMPLETE_TRANSACTION
            - CANNOT_PAY_THIS_PAYEE
            - PAYEE_FILTER_RESTRICTIONS
            - PAYER_CANNOT_PAY
            - REDIRECT_REQUIRED
            - INVALID_PAYMENT_METHOD
          type: string
        noteToPayer:
          description: A free-form field that clients can use to send a note to the payer.
          maxLength: 165
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this entry was last modified or updated.
          uniqueItems: false
        id:
          description: The ID of the payment from Paypal. This is returned in the response from Paypal.
          uniqueItems: false
          type: string
        state:
          description: 'The state of the payment, authorisation or an order. It must be represented by one of the available states.'
          uniqueItems: false
          enum:
            - approved
            - created
            - failed
          type: string
        transactions:
          description: The array of payment transactions. Note some of these details fit naturally into the Verifone model as the Sales Context. Hence the items included here are not the full set of attributes as defined by PayPal.
          items:
            $ref: '#/components/schemas/paypaltransaction'
            uniqueItems: false
          uniqueItems: true
          type: array
        intent:
          description: |-
            A record of the inent of the transaction from Paypal.
             Sale - An immediate payment, Authorize - authorised for later capture. Order - Creates an order
          uniqueItems: false
          enum:
            - sale
            - authorize
            - order
          type: string
        payer:
          $ref: '#/components/schemas/paypalpayer'
          description: The source of the funds for this payment. Payment method is PayPal Wallet payment or bank direct debit.
          maxLength: 999
          uniqueItems: false
          type: object
        redirectURLs:
          $ref: '#/components/schemas/paypalredirecturl'
          description: The set of URLs to be used depending upon the outcome of the payment.
          uniqueItems: false
      type: object
    paypalpayer:
      description: The Payer object as defined by Paypal. The different elements of this object may be returned on the response from Paypal.
      uniqueItems: false
      properties:
        payerInfo:
          $ref: '#/components/schemas/payerinfo'
          uniqueItems: false
        paymentMethod:
          description: 'The payment method. Value is PayPal Wallet payment, bank direct debit, or direct credit card.'
          uniqueItems: false
          enum:
            - PAYPAL
            - CREDIT_CARD
          type: string
        status:
          description: The status of payer's PayPal account.
          uniqueItems: false
          enum:
            - UNVERIFIED
            - VERIFIED
          type: string
      type: object
    paypalredirecturl:
      description: 'Used for E-Commerce and Paypal payments, this object encapsulates the redirection URL to be used after payment completion.'
      uniqueItems: false
      required:
        - returnURL
      properties:
        cancelURL:
          description: The URL where the payer is redirected after he or she cancels the payment. Required for PayPal account payments.
          uniqueItems: false
          type: string
        returnURL:
          description: The URL where the payer is redirected after he or she approves the payment. Required for PayPal account payments.
          uniqueItems: false
          type: string
      type: object
    paypalresult:
      description: The additional attributes from Paypal that may be received in response to a payment transaction.
      uniqueItems: false
      required:
        - id
        - outcomeType
      properties:
        outcomeType:
          description: To identify the type of outcome whether it is Acquirer Result
          default: PAYPAL_RESULT
          uniqueItems: false
          type: string
        experienceProfileId:
          description: The PayPal-generated ID for the merchant's payment experience profile.
          uniqueItems: false
          type: string
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this entry was created.
          uniqueItems: false
        failureReason:
          description: 'If the Paypal payment failed, this represents a record of the reason.'
          uniqueItems: false
          enum:
            - UNABLE_TO_COMPLETE_TRANSACTION
            - CANNOT_PAY_THIS_PAYEE
            - PAYEE_FILTER_RESTRICTIONS
            - PAYER_CANNOT_PAY
            - REDIRECT_REQUIRED
            - INVALID_PAYMENT_METHOD
          type: string
        noteToPayer:
          description: A free-form field that clients can use to send a note to the payer.
          maxLength: 165
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this entry was last modified or updated.
          uniqueItems: false
        id:
          description: The ID of the payment from Paypal. This is returned in the response from Paypal.
          uniqueItems: false
          type: string
        state:
          description: 'The state of the payment, authorisation or an order. It must be represented by one of the available states.'
          uniqueItems: false
          enum:
            - CREATED
            - FAILED
            - APPROVED
          type: string
        transactions:
          description: The array of payment transactions. Note some of these details fit naturally into the Verifone model as the Sales Context. Hence the items included here are not the full set of attributes as defined by PayPal.
          items:
            $ref: '#/components/schemas/paypaltransaction'
            uniqueItems: false
          uniqueItems: true
          type: array
        intent:
          description: |-
            A record of the inent of the transaction from Paypal.
             Sale - An immediate payment, Authorize - authorised for later capture. Order - Creates an order
          uniqueItems: false
          enum:
            - SALE
            - ORDER
            - AUTHORIZE
          type: string
        payer:
          $ref: '#/components/schemas/paypalpayer'
          description: The source of the funds for this payment. Payment method is PayPal Wallet payment or bank direct debit.
          maxLength: 999
          uniqueItems: false
          type: object
        redirectURLs:
          $ref: '#/components/schemas/paypalredirecturl'
          description: The set of URLs to be used depending upon the outcome of the payment.
          uniqueItems: false
      type: object
    paypaltransaction:
      description: The transaction object used as part of the payment instruction to Paypal.
      uniqueItems: false
      properties:
        payee:
          $ref: '#/components/schemas/payee'
          uniqueItems: false
        custom:
          description: Optional.A free-form field for the clients use.
          maxLength: 127
          uniqueItems: false
          type: string
        description:
          description: The description of the purchase.
          maxLength: 127
          uniqueItems: false
          type: string
        softDescriptor:
          description: 'The soft descriptor that is used when charging this funding source. Maximum length is 22 characters. If you include a value that is greater than 22 characters, the API truncates the string.'
          maxLength: 22
          uniqueItems: false
          type: string
        notifyURL:
          description: The URL to send payment notifications.
          maxLength: 2048
          uniqueItems: false
          type: string
        payeeOptions:
          $ref: '#/components/schemas/paymentoptions'
          description: The payment options requested for the payment
          uniqueItems: false
        noteToPayee:
          description: Optional.A note to the recipient of the payment.
          maxLength: 255
          uniqueItems: false
          type: string
        referenceId:
          description: Optional. The merchant provided ID for the purchase unit.
          maxLength: 256
          uniqueItems: false
          type: string
      type: object
    periodunittype:
      description: 'The frequency unit type, which is the unit measure of time,'
      uniqueItems: false
      enum:
        - MONTH
        - YEAR
        - FORTNIGHT
        - WEEK
        - DAY
      type: string
    phone:
      title: Phone number
      description: A simple Phone Number
      uniqueItems: false
      required:
        - value
        - phoneType
      properties:
        callingCode:
          description: Country Calling Code. Mapped to PARTY_PHONE.CALLING_CODE or VENUE_PHONE.CALLING_CODE
          uniqueItems: false
          type: string
        extension:
          description: The internal extension number where applicable or known.
          uniqueItems: false
          type: string
        phoneType:
          description: Phone type in PHONE_TYPE_CON. Mapped to PARTY_PHONE.PHONE_TYPE_CON_ID or VENUE_PHONE.PHONE_TYPE_CON_ID
          default: HOME
          uniqueItems: false
          enum:
            - OTHER
            - WORK
            - FAX
            - HOME
            - MOBILE
          type: string
        isPrimary:
          description: Indicates that the phone is a the primary phone. Mapped to PARTY_PHONE_PRIMARY
          default: 'false'
          uniqueItems: false
          type: boolean
        value:
          description: The actual phone number less country code and/or extension.
          uniqueItems: false
          type: string
      type: object
    pinformat:
      title: PIN Format
      description: 'PIN (Personal Identification Number) format before encryption.<ul><li>ISO0 - PIN diversified with the card account number, ISO-9564-2</li><li>ISO1 - PIN complete with random padding characters, ISO-9564-2</li><li>ISO2 - PIN without diversification characters, ISO-9564-2</li><li>ISO3 - PIN diversified with the account number and random characters, ISO 9564-2</li><li>ISO4 - PIN format with AES encryption, ISO SC2</li><li>ISO5 - Alternative PIN format with AES encryption, ISO SC2</li>'
      uniqueItems: false
      enum:
        - ISO5
        - ISO0
        - ISO3
        - ISO4
        - ISO1
        - ISO2
      type: string
    poi:
      title: Point of Interaction
      description: 'The Point of Interaction. This may refer to a number of different entities, but is primarily considered to be the Terminal. This object contains the POI details as they pertain to an individual payment, an instance of POI. This does not attempt to define all the settings or attributes that may be associated to a POI. Also, for a specific Acquirer/Contract combination there may be a different instance of the POI(TID). These different relationships are not part of this object.'
      uniqueItems: false
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        software:
          description: 'An array detailing all of the applications that may be installed on the POI. This entry is optional, but may contain details of the payment application including the version.'
          items:
            $ref: '#/components/schemas/poisoftware'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        contract:
          $ref: '#/components/schemas/poicontract'
          description: This is the foreign key relationship to a Merchant Agreement. A Merchant may have one or more contracts/agreements with multiple acquirers or intermediaries. This is modelled as a relationship to the POI as each agreement may assign an identifier to a POI.
          uniqueItems: false
        description:
          description: An optional value where some Merchant specific entry is associated with a POI.
          maxLength: 30
          uniqueItems: false
          type: string
        type:
          $ref: '#/components/schemas/poitype'
          description: The type of Point of Interaction where this is specified. Used to distinguish the exact nature of the POI.
          uniqueItems: false
        approvalCodeLength:
          description: Maximum number of characters of the approval code the POI is able to manage.
          uniqueItems: false
          type: integer
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        site:
          $ref: '#/components/schemas/site'
          description: The Site that the POI is related to. This may be a trading address or even a geolocation for mobile devices. This attribute is optional as in many cases when acting as a payment processor or intermediary this information is unavailable.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        verificationCapabilities:
          description: 'The Cardholder verification capability at the POI. These are related to the physical capability of the device, but may also include manual and on consumer device mechanisms that are supported.'
          items:
            $ref: '#/components/schemas/verificationcapabilitytype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        pinLengthCapability:
          description: The maximum number of digits the POI is capable of accepting when the cardholder enters PIN.
          uniqueItems: false
          type: integer
        CATLevel:
          description: Card Holder Activated level for un-attended terminals.
          uniqueItems: false
          type: string
        name:
          description: The identifier used to represent this POI from an estate management perspective. This is not the same as the TID which will be derived from the relationship with an Acquirer Agreement.
          maxLength: 35
          uniqueItems: false
          type: string
        captureCardCapable:
          description: True if the POI is able to capture card. There is also a capability that many be enumerated on Device called - CAPTURE CARD.
          uniqueItems: false
          type: boolean
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the POI. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer. This can be considered to be a surrogate key. If one is not specified it will be generated internally.
          uniqueItems: false
        device:
          $ref: '#/components/schemas/device'
          description: The PED that this POI is related to. This attribute is optional as for e-commerce and other virtual terminal types there will be no physical device.
          uniqueItems: false
        group:
          $ref: '#/components/schemas/group'
          description: This represents a Node that may have children or parents. It exists to provided a directed graph that represents the Nodes of an organisation.
          uniqueItems: false
      type: object
    poicontract:
      title: Point of Interaction Contract Agreement
      description: The Point of Interaction Agreement. This allows the a POI entry to have a relationship to a specific Merchant Acquirer/Processor Agreement. Hence the actual POI ID to be used may be specified via tha Agreement. In some scenarios a Merchant has more than one agreement and hence the TID (DE42 ISO) will vary according to the agreement.
      uniqueItems: false
      required:
        - poiId
      properties:
        poiAltId:
          description: In some regions the Terminal/POI may have two separate identifiers (Usually an ID and a Number or Label). This attribute allows for both to be entered.
          maxLength: 12
          uniqueItems: false
          type: string
        description:
          description: An optional value where some Merchant specific entry is associated with a POI.
          maxLength: 30
          uniqueItems: false
          type: string
        poiId:
          description: The Code identifying the card accepting device as issued by the Acquiring Institution. This may not be unique across institutions hence the use of a unique surrogate key. Also referred to as the TID. ISO8583 - DE 41
          maxLength: 12
          uniqueItems: false
          type: string
        merchantAgreementUUID:
          $ref: '#/components/schemas/uuid'
          description: This is the foreign key relationship to a Merchant Agreement. A Merchant may have one or more contracts/agreements with multiple Acquirers.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the POI Agreement. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer. This can be considered to be a surrogate key. If one is not specified it will be generated internally.
          uniqueItems: false
      type: object
    point:
      title: Area Size
      description: 'Represents a size, used to define a container or area.'
      uniqueItems: false
      required:
        - x-coordinate
        - y-coordinate
      properties:
        x-coordinate:
          description: 'The hexadecimal value in text of the abscissa of the coordinates of a point. Leading zero can be removed (e.g. 3BC, 0, and 1287). The distance from the point to the vertical or y-axis.'
          uniqueItems: false
          type: string
        y-coordinate:
          description: 'Ordinate of a point coordinates. The hexadecimal value in text of the ordinate of the coordinates of a point. Leading zero can be removed (e.g. 3BC, 0, and 1287)'
          uniqueItems: false
          type: string
      type: object
    poireference:
      title: The POI reference for the Settlement
      description: This is a link to the POI for this settlement entry. It is optional to specify one of the identifiers that can then be used to identify the correct POI.
      uniqueItems: false
      properties:
        id:
          description: The identifier used to represent this POI from an estate management perspective. This is not the same as the TID.
          maxLength: 12
          uniqueItems: false
          type: string
        poiId:
          description: The Code identifying the card accepting device as issued by the Acquiring Institution. This may not be unique across institutions hence the use of a unique surrogate key. Also referred to as the TID. ISO8583 - DE 41. This is a unique code identifying a terminal at the card acceptor location.
          maxLength: 12
          uniqueItems: false
          type: string
      type: object
    poirequest:
      title: Point of Interaction Request
      description: 'The Point of Interaction. This may refer to a number of different entities, but is primarily considered to be the Terminal. This object contains the POI details as they pertain to an individual payment, an instance of POI. This does not attempt to define all the settings or attributes that may be associated to a POI. Also, for a specific Acquirer/Contract combination there may be a different instance of the POI(TID). These different relationships are not part of this object.'
      uniqueItems: false
      required:
        - poiId
        - type
      properties:
        poiAltId:
          description: 'In some regions the Terminal/POI may have two separate identifiers (Usually an ID and a Number or Label). This attribute allows for both to be entered, but should only be used where this is a definite requirement.'
          maxLength: 12
          uniqueItems: false
          type: string
        software:
          description: 'An array detailing all of the applications that may be installed on the POI. This entry is optional, but may contain details of the payment application including the version.'
          items:
            $ref: '#/components/schemas/poisoftware'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        name:
          description: The identifier or name used to represent this POI from an estate management perspective. This is not the same as the TID which will be derived from the relationship with an Acquirer Agreement. In this request the TID is referred to as the poi_id.
          maxLength: 12
          uniqueItems: false
          type: string
        description:
          description: An optional value where some Merchant specific entry is associated with a POI.
          maxLength: 30
          uniqueItems: false
          type: string
        poiId:
          description: The Code identifying the card accepting device as issued by the Acquiring Institution. This may not be unique across institutions hence the use of a unique surrogate key. Also referred to as the TID. ISO8583 - DE 41. This is a unique code identifying a terminal at the card acceptor location.
          maxLength: 12
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        type:
          $ref: '#/components/schemas/poitype'
          description: The type of Point of Interaction where this is specified. Used to distinguish the exact nature of the POI.
          uniqueItems: false
        verificationCapability:
          description: 'The Cardholder verification capability at the POI. These are related to the physical capability of the device, but may also include manual and on consumer device mechanisms that are supported. These attributes can be included in certain payment specifications such as APACS.'
          items:
            $ref: '#/components/schemas/verificationcapabilitytype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
      type: object
    poisoftware:
      title: Point of Interaction Software
      description: 'The Software installed on the POI. Technically this may be installed on the actual Device, but there may be multiple applications and some are only applicable to specific agreements.'
      uniqueItems: false
      properties:
        developerId:
          description: An identifier for the developer or issuer of the Software.
          maxLength: 30
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique identifier as a string for the POI Software. This is should be a unique internal value for Verifone. This ensures that the structure will support multi-acquirer. This can be considered to be a surrogate key. If one is not specified it will be generated internally.
          uniqueItems: false
        version:
          description: A version string for the application installed on the POI.
          maxLength: 10
          uniqueItems: false
          type: string
        operatingSystem:
          description: If the application relates to a specific operating system this can be indicated here.
          maxLength: 30
          uniqueItems: false
          type: string
        applicationName:
          description: The name of the application installed.
          maxLength: 40
          uniqueItems: false
          type: string
      type: object
    poitype:
      title: Point of Interaction Type
      description: |-
        The Point of Interaction Type. An indicator to indicate the type of Point of Interaction.
        The **Limited Value** option appears to be one used in the Nordics to indicate the limited authorisation capability of a POS.
        **Host Determined** is another Nordic option where no information about Terminal is known, but is understood by Host/Acquirer.
      uniqueItems: false
      enum:
        - POINT_OF_SALE
        - LIMITED_VALUE
        - NO_TERMINAL
        - AUTO_TELLER_MACHINE
        - KIOSK
        - RF_DEVICE
        - INTER_VOICE_RESPONSE
        - UNATTENDED
        - UNSPECIFIED
        - STANDALONE
        - INFLIGHT_COMMERCE_TERMINAL
        - HOST_DETERMINED
        - AUTO_FUEL_DISPENSER
        - ELECTRONIC_CASH_REGISTER
        - TICKET
        - CALL_CENTRE
        - MOBILE
        - VIRTUAL
      type: string
    polygon:
      description: An array of linear rings
      items:
        $ref: '#/components/schemas/linearring'
        uniqueItems: false
      uniqueItems: false
      type: array
    position:
      description: A single position
      items:
        type: number
      minItems: 2
      uniqueItems: false
      type: array
    positionarray:
      description: An array of positions
      items:
        $ref: '#/components/schemas/position'
        uniqueItems: false
      uniqueItems: false
      type: array
    protectedcarddata:
      title: Protected Card Data
      description: 'Where this is contained in the model or message, the plain card elements have been replaced by encrypted elements. <ul>In Nexo/ISO20022 terms this is referred to a digital envelope using a cryptographic key. All the protected data and the related information are formatted according to the generic format defined by the Cryptographic Message Syntax (CMS) standard defined in the RFC 5652.'
      uniqueItems: false
      required:
        - contentType
        - envelopedData
      properties:
        contentType:
          $ref: '#/components/schemas/encryptedcontenttype'
          uniqueItems: false
        envelopedData:
          $ref: '#/components/schemas/envelopeddata'
          description: This is encrypted data with a cryptographic key protected by a transport key or a Key encryption key (KEK).
          uniqueItems: false
      type: object
    quantitativeamount:
      title: Quantity type
      description: An schema representation of a quantitative amount indicating unit of measurement.
      uniqueItems: false
      required:
        - unit
        - value
      properties:
        unit:
          $ref: '#/components/schemas/unitcode'
          uniqueItems: false
        value:
          description: 'The value, which can be anything from:<ul><li>An integer. to float.'
          uniqueItems: false
          type: number
      type: object
    recipientidentification:
      title: Recipient Identification
      description: Identification of a cryptographic asymmetric key for the recipient.
      uniqueItems: false
      properties:
        issuerAndSerialNumber:
          $ref: '#/components/schemas/issuerandserial'
          description: Encryption Key using previously distributed asymmetric public key
          uniqueItems: false
        keyIdentifier:
          $ref: '#/components/schemas/keyidentifier'
          uniqueItems: false
      type: object
      oneOf:
        - uniqueItems: false
          required:
            - issuerAndSerialNumber
        - uniqueItems: false
          required:
            - keyIdentifier
    recurring:
      title: Recurring
      description: The installment related attributes for a recurring/instalment payment.
      uniqueItems: false
      required:
        - numberOfInstallments
      properties:
        sequenceNumber:
          description: Indicator of the sequence relating to this installment. Normally only present where there are a bounded number of installments.
          uniqueItems: false
          type: integer
        period:
          $ref: '#/components/schemas/frequencytype'
          description: 'The composite recurring details. A frequency unit value of DAY and a value of 10, would indicate a payment every 10 days or a unit of WEEK and a value of 2 would mean every fortnight'
          uniqueItems: false
        firstPaymentDate:
          $ref: '#/components/schemas/datenotime'
          description: The date on which the first payment will occur. This should not be specified alongside a deferredPeriod as that will could potentially create conflicting instructions.
          uniqueItems: false
        currentAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The value of the current payment (where the installments may vary)
          uniqueItems: false
        type:
          $ref: '#/components/schemas/instalmenttype'
          description: The Type of the Recurring or Instalment Payment based on the amount of each payment. Instalments may not all be equal in value.
          uniqueItems: false
        recurringType:
          $ref: '#/components/schemas/recurringtype'
          description: The Type of the Recurring or Instalment Payment.
          uniqueItems: false
        totalAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The total value of all the installment payments
          uniqueItems: false
        deferredPeriod:
          $ref: '#/components/schemas/frequencytype'
          description: A value in days to indicate when the installments will commence. Measured from when the event occurs. This should not be specified alongside a firstPaymentDate as that will could potentially create conflicting instructions.
          uniqueItems: false
        firstPayment:
          description: 'A boolean indicator. If this is a recurring payment, this property should be set to true for the first recurring payment. The first recurring payment will normally require Cardholder verification.'
          uniqueItems: false
          type: boolean
        numberOfInstallments:
          description: The number of installments required for the total payment. (This should not vary as each individual payment is received).
          maximum: 9999
          uniqueItems: false
          type: integer
        firstAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The first amount on the installment where this differs from the subsequent values.
          uniqueItems: false
        cumulativeAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The amount cumulatively paid as a result of this payment.
          uniqueItems: false
        chargeAmount:
          $ref: '#/components/schemas/amountmoney'
          description: In some instances it is necessary to indicate the amount of interest included in the installment amount. This relates to the charge for the current instalment.
          uniqueItems: false
      type: object
    recurringtype:
      title: Instalment Type
      description: An indicator to show whether the payment is an instalment or is recurring. The distinction being that an instalment has an end date or final schedule.
      uniqueItems: false
      enum:
        - INSTALMENT
        - RECURRING
      type: string
    relatedtransaction:
      title: Related Transaction
      description: The original transaction elements where the current event references a previous transaction. These are used for matching an existing transaction and may optionally be required by a processor when sending a related transaction.
      uniqueItems: false
      required:
        - transactionId
        - transactionType
      properties:
        amount:
          $ref: '#/components/schemas/amountmoney'
          description: 'A monetary value used to represent the total amount of the transaction including gratuities and other fees or taxes. This is represented as a currency and a decimal value that represents the total for the transaction. This is a mandatory field for a transaction, the individual sub-amounts are not required or may not be known. Note, this is an optional value, but may be included here when recording an authorisation/pre-authorisation to allow the difference between the auth and completion.'
          uniqueItems: false
        transmittedDateTime:
          $ref: '#/components/schemas/datetime'
          description: The date and time in ISO 8601 format. The local time that the transaction was sent from the POI to Acquirer.
          uniqueItems: false
          type: string
        gatewayTraceId:
          description: This is an optional value used to allow Gateways to use associate the unique identifier for the transaction. In most instances a Gateway will allocate it's own internal ID. The length allows for an optional UUID to be generated.
          maxLength: 40
          uniqueItems: false
          type: string
        estimated:
          description: |-
            This flag apears only on authorisations/pre-authorisation completions, cancelations and refunds. It indicates that the amount of this transaction is only a partial amount of the **related transaction**.
            A related transaction must be present if this value is set to 'true'.

            In the case of a pre-authorisation request this will reflect that a pre-authorisation may be approved for only a partial amount (which is indicated in the response) due to available funds.
          uniqueItems: false
          type: boolean
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the this group entry was created.
          uniqueItems: false
        ECI:
          description: The e-commerce indicator
          maximum: 99
          uniqueItems: false
          type: integer
        eventType:
          $ref: '#/components/schemas/eventtype'
          description: The original event or message that triggered the previous payment transaction.
          uniqueItems: false
        POI:
          $ref: '#/components/schemas/poi'
          description: 'A reference to the POI for which settlement is being calculated. This is optional as in some instances, the settlement is calculated at the Merchant level.'
          uniqueItems: false
        transactionId:
          description: The unique transaction id. This is the identifier to be used for locating the transaction and for reconciliation and auditing. A reference supplied by the system retaining the original source information and used to assist in locating that transaction or a copy of the transaction. This value is critical in matching values that are sent to other Payment processors or Acquirers and is defined in the ISO8583 specification as RRN in attribute DE 37.
          maxLength: 100
          uniqueItems: false
          type: string
        referenceId:
          description: An optional client identifier for the transaction generated at the outset of a business event. This value can be passed through all the components and will be used for logging. The format will be dependent on the calling system.
          maxLength: 100
          uniqueItems: false
          type: string
        transactionTraceId:
          description: The Transaction Identification Number is the term used by Visa to describe the unique Scheme Reference Data that now needs to flow for each successful authorisation and corresponding completed transaction. MasterCard refer to this as the TraceIdentificationNumber.
          maxLength: 15
          uniqueItems: false
          type: string
        transactionType:
          $ref: '#/components/schemas/transactiontype'
          description: A type indicator as to the main service provided during the card payment transaction.
          uniqueItems: false
        lifeCycleId:
          description: The Transaction Life Cycle ID (as referred to by MasterCard). This would normally be present in DE63.
          maxLength: 15
          uniqueItems: false
          type: string
        acquiringInstitution:
          description: The Acquirer detail associated to the transaction. ISO8583 - DE 32.
          uniqueItems: false
          type: string
        merchantId:
          description: The Merchant Identifier also referred to as the MID. ISO8583 DE42
          maxLength: 12
          uniqueItems: false
          type: string
        repeat:
          description: The original or related transaction was a repeat message sent because no response was returned.
          uniqueItems: false
          type: boolean
        initiatorTraceId:
          description: 'A number assigned by a transaction initiator(originator) to assist in identifying a transaction uniquely. The trace identifier remains unchanged for all messages within a two-message exchange, e.g. request/repeat and response. This property can be used to store the System trace audit number (STAN) as used in the ISO8583 specification (DE 11). Note the contents of this field are mandatory in many specifications - ISO8583, AS2805 (DE11) and are often related to the Retrieval Reference Number (RRN) as also specified in ISO8583. Unfortunately due to the usage in these earlier specifications, a STAN was limited to 6 digits which means that it cannot be utilised as a general purpose unique id. In addition, this entry is often printed on the receipt at a POI. ISO8583 DE11'
          maxLength: 40
          uniqueItems: false
          type: string
        poiId:
          description: The POI also referred to as the Terminal ID (TID). ISO8583 DE41
          maxLength: 12
          uniqueItems: false
          type: string
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique internal identifier as a string for the Transaction. This is the surrogate key to ensure uniqueness across all Gateways. Each Gateway may generate it's own transaction_id and clients may also generate reference_id.
          uniqueItems: false
        capturedDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the transaction was captured or received at the processor. This would be a gateway receipt time where this was capturing transactions from multiple sources.
          uniqueItems: false
        authoriserId:
          description: 'Authorising agent institution identification code (as referred to by ISO8583:1993). This would normally be present in DE58.'
          maxLength: 15
          uniqueItems: false
          type: string
      type: object
    results:
      description: The result of verification. <li>FAIL - Verification failed</li><li>MISS - Missing information</li><li>NOVF - Not performed</li><li>PART - Partial match</li><li>SUCC - Success</li><li>ERRR - Technical Error. Unable to perform verification.</li>
      uniqueItems: false
      enum:
        - NOVF
        - SUCC
        - PART
        - MISS
        - ERRR
        - FAIL
      type: string
    routing:
      title: Transaction Routing
      description: The routing component of a transaction event. This could relate to both a Source Route or Destination/Target Route.
      uniqueItems: false
      properties:
        node:
          description: In Base 24 the term is station to describe the destination node or origination of a transaction.
          uniqueItems: false
          type: string
        IPAddressV6:
          description: The IP Address v6 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv6
        logicalConnection:
          description: Applicable when the connection from third-party has multiple logical connections over the same physical connections.
          uniqueItems: false
          type: string
        hostname:
          description: The Hostname where an payment originated or the destination of a payment.
          maxLength: 15
          uniqueItems: false
          type: string
          format: hostname
        institutionId:
          description: 'The FIID or Financial Institution ID, how a processor or Acquirer is identified.'
          uniqueItems: false
          type: string
        IPAddressV4:
          description: The IP Address v4 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
      type: object
    rrn:
      title: Retrieval Reference Number
      description: Schema to represent a Retrieval Reference Number as defined in the ISO 8583 specification Field (bit) 37.
      maxLength: 12
      pattern: '^[a-zA-Z0-9\s]{12}$'
      uniqueItems: false
      type: string
    saleschanneltype:
      title: Sales Channel
      description: |
        A type indicator to specify the sales channel used to capture the transaction. The is the means by which the customer specifies the instrument(card) details.
         This may also indicate whether the customer is returning or not (if this a stored credential), other elements of the **authentication method** and **entry mode** will also identify this.

        Value |  Description
        ------|-------------
        MAIL|Mail Order
        PHONE|Phone Order
        MOTO|Mail or Phone Order (where not identified)
        ECOMMERCE|Received via a website or web application
        POS|Point of Sale - normally customer is present at device.
      uniqueItems: false
      enum:
        - MAIL
        - POS
        - PHONE
        - MOTO
        - ECOMMERCE
      type: string
    salescontext:
      title: Sales Context
      description: 'This object contains references to the Sale Context normally these attributes have a special meaning within the Merchant''s systems or POS. This object may contain additional properties, but these will not be indexed for search.'
      uniqueItems: false
      properties:
        ecrDataReferenceNumber:
          description: This will contain ECR data reference number.
          uniqueItems: false
          type: string
        salesReferenceNumber:
          description: A reference number used by card acceptor for this transaction.
          uniqueItems: false
          type: string
        journey:
          $ref: '#/components/schemas/trip'
          description: The details of the Journey or Trip undertaken. This is applicable for some Taxi applications.
          uniqueItems: false
        shiftNumber:
          description: A shift number identifier used by the Card Acceptor to associate with the transaction.
          maximum: 999
          uniqueItems: false
          type: integer
        commercialType:
          description: This is returned from the processor in response to a request and will supplement the value of commercial flag.
          uniqueItems: false
          type: string
        laneNumber:
          description: The lane or aisle number for the POS where the transaction originated. This is a string as this value may be non-numeric for some Merchant
          uniqueItems: false
          type: string
        orderURL:
          description: Optional. The URL on the Merchant web site relating to this payment. This can be applicable for certain payment types such as Paypal.
          maxLength: 2048
          uniqueItems: false
          type: string
        commercialFlag:
          description: An indicator from the merchant or the Gateway normally derived from a BIN Code.
          uniqueItems: false
          enum:
            - BUSINESS_CARD
            - PURCHASE_CARD
        taxIndicator:
          description: Tax indicator.
          uniqueItems: false
          enum:
            - TAX_NOT_PROVIDED
            - NON_TAXABLE
            - TAX_PROVIDED
          type: string
        salesIdentifier:
          description: An identifier from the POS or third-party for this transaction.
          uniqueItems: false
          type: string
        invoiceNumber:
          description: Optional.The invoice number to track this payment.
          maxLength: 127
          uniqueItems: false
          type: string
        airlineContext:
          $ref: '#/components/schemas/airlinecontext'
          description: This will contain details related to airline transactions.
          uniqueItems: false
        cashierId:
          description: An identifier to represent the cashier who performed the transaction at the POS.
          uniqueItems: false
          type: string
        storeIdentifier:
          description: An identifier for a store. Normally only required where the relationship to merchant is not one to one
          uniqueItems: false
          type: string
        storeName:
          description: The name of the Store where the transaction occurred. Only relevant where the store identifier is used.
          maxLength: 100
          uniqueItems: false
          type: string
        itemList:
          description: Optional. The list of items purchased as part of the transaction and the shipping details.
          uniqueItems: false
          properties:
            shippingAddress:
              $ref: '#/components/schemas/address'
              description: The shipping or delivery address for all items on the order.
              uniqueItems: false
            shippingPhoneNumber:
              $ref: '#/components/schemas/phone'
              description: Optional. This can be used for Paypal where a phone number may be entered for an item.
              uniqueItems: false
            items:
              description: The array of items being purchased.
              items:
                $ref: '#/components/schemas/orderitem'
                uniqueItems: false
              uniqueItems: true
              type: array
          type: object
        ecrCardReferenceNumber:
          description: This will contain ECR card reference number.
          uniqueItems: false
          type: string
        cashierName:
          description: An optional value to represent the name of the Cashier.
          uniqueItems: false
          type: string
      type: object
    security:
      title: Transaction Security
      description: This should contain any security related information required to interpret the event. The information here would be used to describe the message data protection as applied to the whole transaction e.g. a Message Authentication Code (MAC).
      uniqueItems: false
      properties:
        keySerialNumber:
          description: 'The key serial number. The serial number of the key used to encrypt the PIN block using DUKPT at the PED. Returned from the PED. Normally this has 3 parts, an identifier for the BDK, a Device Identifier and a transaction count.'
          maxLength: 10
          uniqueItems: false
          type: string
        PANKeyIndexNumber:
          description: The index of the session key used to encrypt the PAN. This would relate to ISO 8583 DE53
          maximum: 9
          uniqueItems: false
          type: integer
        MACKeyIndexNumber:
          description: The index of the session key used to generate the MAC.
          maximum: 9
          uniqueItems: false
          type: integer
        encryptionAlgorithm:
          $ref: '#/components/schemas/encryptionalgorithmtype'
          description: 'If the incoming message is using encryption for any attributes e.g. PIN block, then this should be indicated here.'
          uniqueItems: false
        MACValue:
          description: The generated value of MAC where one is present on the event.
          maximum: 9
          uniqueItems: false
          type: string
        labels:
          description: The labels that can be used when searching or restricting this particular record. This is to allow clients to label records in such a way that they can be restricted to given directed graphs (or hierarchies).
          items:
            uniqueItems: false
            type: string
          minItems: 1
          uniqueItems: false
          type: array
      type: object
    semanticversion:
      description: |-
        A value representing the schema version used to generate the document. The value will be a semantic version, constructed as MAJOR.MINOR.PATCH. Where MINOR and PATCH versions are incremented this version must be backward compatible. The format is a subset of the full semantic version definition and allows only numeric values separated by punctuation marks.
        A value representing the schema version of the API that is being called.
        This is represented as a string with the format: <li>Major Version</li><li>Minor Version</li><li>Path or Build Version</li>
      maxLength: 12
      minLength: 5
      pattern: '^(0|[1-9]{1,3})\.(0|([1-9]{1,3}))\.(0|(?:[1-9]{1,3}))$'
      uniqueItems: false
      type: string
    sensitivecarddata:
      title: Sensitive Card Data
      description: 'Where this is contained in the model or message, the plain card elements have been replaced by encrypted elements. <ul>In Nexo/ISO20022 terms this is referred to a digital envelope using a cryptographic key.'
      uniqueItems: false
      required:
        - cardNumber
      properties:
        sequenceNumber:
          description: A number distinguishing between separate cards with the same Primary Account Number. ISO8583 - DE 23
          maximum: 999
          uniqueItems: false
          type: integer
        serviceCode:
          description: Services attached to the card as defined in ISO 7813.
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z0-9]$'
          uniqueItems: false
          type: string
        cardholderName:
          description: The Card holder name as it appears on the card.
          maxLength: 45
          uniqueItems: false
          type: string
        cardVerificationData:
          description: The Card Verification Value or Card Security Code (CVV/CVV2/CVC2/CID) that is printed onto the card and not available by mag stripe or ICC. For MasterCard and Visa this is a 3 digit code printed on the back of the card. For American Express it is normally a 4 digit code printed on the front. This value must never be persisted to the database
          maxLength: 4
          uniqueItems: false
          type: string
        expiryMonth:
          description: A 2 digit value as shown on card. ISO8583 - DE 14
          maximum: 12
          uniqueItems: false
          type: integer
        ICC:
          $ref: '#/components/schemas/icc'
          description: The Integrated Circuit Card (ICC) or EMV data.
          uniqueItems: false
        expiryDay:
          description: 'The expiry date of the Card. ISO8583 - DE 14. Expiry dates are often represented as month and year. If the actual day is not know, omit this element.'
          maximum: 31
          uniqueItems: false
          type: number
        expiryYear:
          description: A 4 digit value as shown on card.
          maximum: 9999
          uniqueItems: false
          type: integer
        trackData:
          description: 'The information encoded on the magnetic stripe as specified in ISO 7813. ISO8583 - DE 45 (Track 1), DE 35 (Track 2). The full version of this data cannot be stored, but some truncated values can be.'
          items:
            $ref: '#/components/schemas/trackspecification'
            description: The card data track information where this is present on a payment request.
            uniqueItems: false
          maxItems: 3
          minItems: 0
          uniqueItems: false
          type: array
        cardNumber:
          description: The Primary Account Number or Card Number. This value can only be persisted in an encrypted format. ISO8583 - DE2
          maxLength: 28
          minLength: 8
          uniqueItems: false
          type: string
        effectiveDate:
          $ref: '#/components/schemas/datenotime'
          description: The date upon which a card becomes effective.
          uniqueItems: false
      type: object
    settlement:
      title: A summary of the settlement data.
      description: This is a summary record showing the totals relating to the settlement entries submitted to an Acquirer. This would be equivalent to what is often referred to as a Settlement Batch in legacy payment terms.
      uniqueItems: false
      required:
        - UUID
        - settlementId
        - merchant
        - settlementDate
        - currencyCode
        - items
      properties:
        batchCloseDateTime:
          $ref: '#/components/schemas/datetime'
          description: Support for legacy systems where batch times are managed. This represents the point when a Batch was closed prior to the settlement being submitted.
          uniqueItems: false
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        acquirerStatus:
          description: 'The status of the Settlement according to the Acquirer, this may be Verifone in some circumstances.'
          maxLength: 30
          uniqueItems: false
          type: string
        settlementCount:
          description: A count of the total number of transaction entries contained in the Settlement.
          uniqueItems: false
          type: integer
        merchant:
          $ref: '#/components/schemas/merchant'
          description: A reference to the merchant who the settlement is being generated for. The reference will vary depending on the scope of the Settlement Item.
          uniqueItems: false
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the settlement entry was created
          uniqueItems: false
        POI:
          $ref: '#/components/schemas/poi'
          description: 'A reference to the POI for which settlement is being calculated. This is optional as in some instances, the settlement is calculated at the Merchant level.'
          uniqueItems: false
        settlementDate:
          $ref: '#/components/schemas/datetime'
          description: The date when settlement occurred according to the initiating system when settlement is instructed to occur.
          uniqueItems: false
        settlementId:
          description: The unique settlement id. This identifier is only unique to settlement systems. This would be synonymous with a Batch Identifier in legacy Settlement terms.
          maxLength: 100
          uniqueItems: false
          type: string
        labels:
          description: The labels that can be used when searching or restricting this particular record. This is to allow clients to label records in such a way that they can be restricted to given directed graphs (or hierarchies).
          items:
            uniqueItems: false
            type: string
          minItems: 1
          uniqueItems: false
          type: array
        acquiringInstitution:
          description: The code identify the acquiring institution to the transaction. ISO8583 DE 32
          maximum: 99999999999
          uniqueItems: false
          type: integer
        acquirerSettlementDate:
          $ref: '#/components/schemas/datenotime'
          description: 'The date when settlement occurred according to the Acquirer. This should be the same date as the settlement_date, but in exceptional circumstances may differ.'
          uniqueItems: false
        acquirerSettlementId:
          description: The acquirer settlement id. In some instances an Acquirer may return an identifier corresponding to a batch of payments that have been submitted for settlement.
          maxLength: 100
          uniqueItems: false
          type: string
        settlementBatchFileNumber:
          description: An optional identifier required to support legacy batch file generation.
          maxLength: 100
          uniqueItems: false
          type: string
        settlementAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The total amount for this settlement batch.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique internal identifier as a string for the Settlement entry.
          uniqueItems: false
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          description: The currency code of the settlement batch. A Settlement  Batch may contain data relating to transaction of the same currency. This represents the settlement amount currency.
          uniqueItems: false
        settlementAccount:
          $ref: '#/components/schemas/bankaccount'
          description: The account that funds will be credited to. In some cases this will be determined by Acquirer and is not required to be specified.
          uniqueItems: false
        forwardingInstitution:
          description: The code identifying the forwarding institution where there is an intermediary (processor) for the Acquirer. ISO8583 DE 33
          maximum: 99999999999
          uniqueItems: false
          type: integer
        items:
          $ref: '#/components/schemas/settlementitems'
          description: The settlement items. These should include the breakdown of the settlement according to the rules defined for Acquirer and/or Merchant.
          uniqueItems: false
        batchCreationDateTime:
          $ref: '#/components/schemas/datetime'
          description: Support for legacy systems where batch times are managed. This represents the point when a Batch was opened to allow transaction submission
          uniqueItems: false
        status:
          $ref: '#/components/schemas/settlementstatustype'
          description: The status of the Settlement internal to Verifone.
          uniqueItems: false
      type: object
    settlementcontext:
      title: Settlement Context
      description: These properties will refer to the settlement information associated with the transaction event.
      uniqueItems: false
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        acquirerStatus:
          description: 'The status of the Settlement according to the Acquirer, this may be Verifone in some circumstances.'
          maxLength: 30
          uniqueItems: false
          type: string
        acquirerSettlementId:
          description: The acquirer settlement id. In some instances an Acquirer may return an identifier corresponding to a batch of payments that have been submitted for settlement.
          maxLength: 100
          uniqueItems: false
          type: string
        settlementBatchFileNumber:
          description: An optional identifier required to support legacy batch file generation.
          maxLength: 100
          uniqueItems: false
          type: string
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the settlement entry was created. Current TIMESTAMP can be used for this.
          uniqueItems: false
        settledDate:
          $ref: '#/components/schemas/datetime'
          description: 'This will reflect either the desired Merchant settlement date or the actual settlement date depending where the transaction request is within the payment lifecycle. A transaction may be assigned an intended settlement date, but it is possible that this date will not occur for technical reasons hence there should be a subsequent event to indicate the actual date of settlement. Format is date only as per RFC 3339.'
          uniqueItems: false
        settledId:
          description: Reference identifier with Settlement Collection.
          uniqueItems: false
          type: string
        status:
          $ref: '#/components/schemas/settlementstatustype'
          description: The status of the Settlement internal to Verifone.
          default: OPEN
          uniqueItems: false
        batchCreationDateTime:
          $ref: '#/components/schemas/datetime'
          description: Support for legacy systems where batch times are managed. This represents the point when a Batch was opened to allow transaction submission
          uniqueItems: false
      type: object
    settlementitem:
      uniqueItems: false
      required:
        - count
        - amount
      properties:
        transactionType:
          $ref: '#/components/schemas/transactiontype'
          description: The transaction types that are being totalled. This again will vary according to the specific requirements of the Acquirer or Gateway.
          uniqueItems: false
        amount:
          $ref: '#/components/schemas/amountmoney'
          description: The total amount for this settlement item. This may be one or more transactions as indicated by the count
          uniqueItems: false
        accountType:
          $ref: '#/components/schemas/accounttype'
          description: 'The account type that this settlement total represents. In most cases, the totals may represent the Credit and/or Debit totals. This may be optional depending upon how Settlement is calculated.'
          uniqueItems: false
        count:
          description: The total number of items included in this settlement item
          default: '0'
          uniqueItems: false
          type: integer
        cardType:
          $ref: '#/components/schemas/paymenttype'
          description: The card type that this settlement total refers to. This is an optional item to be included where settlement totals are broken type according to card acceptance type
          uniqueItems: false
        name:
          description: 'A name given to this settlement item so that it can clearly be identifier. If not using card_type, account_type or transaction_type it should be defined here. Specifically there are two known groupings - Surcharges and Miscellaneous.'
          maxLength: 50
          uniqueItems: false
          type: string
      type: object
    settlementitems:
      items:
        $ref: '#/components/schemas/settlementitem'
        uniqueItems: false
      minItems: 1
      uniqueItems: false
      type: array
    settlementrequest:
      title: Merchant Settlement Request.
      description: This is a summary record showing the totals relating to the settlement entries submitted to an Acquirer. This would be equivalent to what is often referred to as a Settlement Batch in legacy payment terms. This may be the summary at a Merchant or Terminal level.
      uniqueItems: false
      required:
        - settlementId
        - merchant
        - settlementDate
        - currencyCode
        - items
      properties:
        batchCloseDateTime:
          $ref: '#/components/schemas/datetime'
          description: Support for legacy systems where batch times are managed. This represents the point when a Batch was closed prior to the settlement being submitted.
          uniqueItems: false
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        acquirerStatus:
          description: 'The status of the Settlement according to the Acquirer, this may be Verifone in some circumstances.'
          maxLength: 30
          uniqueItems: false
          type: string
        settlementCount:
          description: A count of the total number of transaction entries contained in the Settlement.
          uniqueItems: false
          type: integer
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the settlement entry was created
          uniqueItems: false
        POI:
          $ref: '#/components/schemas/poireference'
          description: 'A reference to the POI for which settlement is being calculated. This is optional as in some instances, the settlement is calculated at the Merchant level.'
          uniqueItems: false
        settlementDate:
          $ref: '#/components/schemas/datenotime'
          description: The date when settlement occurred according to the initiating system when settlement is instructed to occur.
          uniqueItems: false
        settlementId:
          description: The unique settlement id. This identifier is only unique to settlement systems. This would be synonymous with a Batch Identifier in legacy Settlement terms.
          maxLength: 100
          uniqueItems: false
          type: string
        labels:
          description: The labels that can be used when searching or restricting this particular record. This is to allow clients to label records in such a way that they can be restricted to given directed graphs (or hierarchies).
          items:
            uniqueItems: false
            type: string
          minItems: 1
          uniqueItems: false
          type: array
        acquiringInstitution:
          description: The code identify the acquiring institution to the transaction. ISO8583 DE 32
          maximum: 99999999999
          uniqueItems: false
          type: integer
        acquirerSettlementDate:
          $ref: '#/components/schemas/datenotime'
          description: 'The date when settlement occurred according to the Acquirer. This should be the same date as the settlement_date, but in exceptional circumstances may differ.'
          uniqueItems: false
        acquirerSettlementId:
          description: The acquirer settlement id. In some instances an Acquirer may return an identifier corresponding to a batch of payments that have been submitted for settlement.
          maxLength: 100
          uniqueItems: false
          type: string
        settlementBatchFileNumber:
          description: An optional identifier required to support legacy batch file generation.
          maxLength: 100
          uniqueItems: false
          type: string
        settlementAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The total amount for this settlement batch.
          uniqueItems: false
        currencyCode:
          $ref: '#/components/schemas/currencycode'
          description: The currency code of the settlement batch. A Settlement  Batch may contain data relating to transaction of the same currency. This represents the settlement amount currency.
          uniqueItems: false
        settlementAccount:
          $ref: '#/components/schemas/bankaccount'
          description: The account that funds will be credited to. In some cases this will be determined by Acquirer and is not required to be specified.
          uniqueItems: false
        forwardingInstitution:
          description: The code identifying the forwarding institution where there is an intermediary (processor) for the Acquirer. ISO8583 DE 33
          maximum: 99999999999
          uniqueItems: false
          type: integer
        items:
          $ref: '#/components/schemas/settlementitems'
          description: The settlement items. These should include the breakdown of the settlement according to the rules defined for Acquirer and/or Merchant.
          uniqueItems: false
        batchCreationDateTime:
          $ref: '#/components/schemas/datetime'
          description: Support for legacy systems where batch times are managed. This represents the point when a Batch was opened to allow transaction submission
          uniqueItems: false
        status:
          $ref: '#/components/schemas/settlementstatustype'
          description: The status of the Settlement internal to Verifone.
          uniqueItems: false
      type: object
    settlementstatustype:
      title: Settlement Status Type
      description: The status of the settlement entries that are being generated. The entries are listed in the logical sequence that they would occur Open - Settled. Other should only be considered in exceptional circumstances.
      uniqueItems: false
      enum:
        - ACKNOWLEDGED
        - SETTLED
        - CLOSED
        - ERROR
        - SENT
        - OPEN
      type: string
    shipping:
      title: Shipping details
      description: 'An Address following the convention of http://microformats.org/wiki/hcard. Associated with a transaction where items are being shipped to customer.'
      uniqueItems: false
      properties:
        carrier:
          description: 'The delivery service that has shipped or will ship the products associated with transaction. e.g. FEDEX, UPS...'
          maxLength: 50
          uniqueItems: false
          type: string
        phoneNumber:
          $ref: '#/components/schemas/phone'
          description: The phone number to be used for shipping related enquiry.
          uniqueItems: false
        address:
          $ref: '#/components/schemas/address'
          description: The shipping address for goods related to the transaction. This may be used for fraud checking in some instances.
          uniqueItems: false
        receiptEmail:
          description: A valid email corresponding to the shipping recipient or customer
          maxLength: 50
          uniqueItems: false
          type: string
        recipientName:
          description: The name of the person that goods will be shipped to.
          maxLength: 100
          uniqueItems: false
          type: string
        trackingNumber:
          description: A tracking number issued by carrier for the goods related to the transaction.
          maxLength: 100
          uniqueItems: false
          type: string
      type: object
    signature:
      title: Customer Signature
      description: This defines the attributes of a signature that has been captured from a device or other source.
      uniqueItems: false
      properties:
        area:
          $ref: '#/components/schemas/areasize'
          description: 'Size of an area. Contain the size of the pad area where the signature is written, given with the maximum abscissa and ordinate values (X and Y). The maximum value is ''FFFF''.'
          uniqueItems: false
        points:
          description: 'The Coordinates as an array of points represents where the signator moved direction . Contain the Coordinates of a point of the written signature where the pen changes direction or lift where (X and Y). When the signer lifts the pen, both X and Y have the value ''FFFF''.'
          items:
            $ref: '#/components/schemas/point'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
      type: object
    signatureascoordinates:
      $ref: '#/components/schemas/signature'
      description: The signature is represented as a set of coordinates or points.
      uniqueItems: false
    signatureasimage:
      description: The signature is captured as an image.
      uniqueItems: false
      required:
        - signatureData
        - signatureMimetype
      properties:
        signatureData:
          description: Block of image data encrypted to BASE 64.
          uniqueItems: false
          type: string
        signatureMimetype:
          description: The image type being sent with a signature capture transaction.
          uniqueItems: false
          enum:
            - IMAGE/TIFF
            - IMAGE/JPG
            - IMAGE/PNG
            - IMAGE/BMP
          type: string
    site:
      title: A Site at which a Merchant Operates or a POI is located
      description: This represents the operating or trading location.
      uniqueItems: false
      properties:
        siteReferenceId:
          description: An identifier for the Site that is unique to the Merchant Organisation. This will be used to locate this instance of a Site.
          maxLength: 100
          uniqueItems: false
          type: string
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        address:
          $ref: '#/components/schemas/address'
          description: The merchant trading address for the Site.
          uniqueItems: false
        createdDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was created.
          uniqueItems: false
        name:
          description: A name to be assigned to this Site. As the same names for Sites could occur across multiple Merchant organisations a surrogate key is used. The name is only unique within the scope of the merchant organisation.
          maxLength: 40
          uniqueItems: false
          type: string
        modifiedDate:
          $ref: '#/components/schemas/datetime'
          description: The time that the this device entry was last modified.
          uniqueItems: false
        location:
          $ref: '#/components/schemas/location'
          description: Optional value indicating the actual location of the POI.
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique internal identifier as a string for the Site. This is the surrogate key which is generated by the PDSP.
          uniqueItems: false
        version:
          description: The version of this object.
          uniqueItems: false
          type: integer
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Card acceptor email address.
          uniqueItems: false
        phoneNumbers:
          description: The phone numbers to be used for the Site. If you include this property there should be at least one phone number.
          items:
            $ref: '#/components/schemas/phone'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
        contacts:
          description: The Merchant site contact details where these are known or required.
          items:
            $ref: '#/components/schemas/contact'
            uniqueItems: false
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
      type: object
    siterequest:
      title: A Site Request
      description: This represents the operating or trading location where a POI is located.
      uniqueItems: false
      required:
        - siteId
        - name
        - address
      properties:
        siteReferenceId:
          description: An identifier for the Site that is unique to the Merchant Organisation. This will be used to locate this instance of a Site.
          maxLength: 100
          uniqueItems: false
          type: string
        address:
          $ref: '#/components/schemas/address'
          description: The merchant trading address for the Site.
          uniqueItems: false
        name:
          description: A name to be assigned to this Site. As the same names for Sites could occur across multiple Merchant organisations a surrogate key is used. The name is only unique within the scope of the merchant organisation.
          maxLength: 40
          pattern: ^(?!\s*$).+
          uniqueItems: false
          type: string
        location:
          $ref: '#/components/schemas/location'
          description: Optional value indicating the actual location of the POI.
          uniqueItems: false
        email:
          $ref: '#/components/schemas/emailaddress'
          description: The Card acceptor email address.
          uniqueItems: false
        phoneNumbers:
          description: The phone numbers to be used for the Site. If you include this property there should be at least one phone number.
          items:
            $ref: '#/components/schemas/phone'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
      type: object
    source:
      uniqueItems: false
      properties:
        sourceId:
          description: An optional Source or Gateway where this transaction event originated (if applicable). The combination of gateway_id and application_id should be unique. This also allows filtering of applicable data dependent on the origin of events.
          uniqueItems: false
          type: string
        sourceLocale:
          $ref: '#/components/schemas/locale'
          description: The source locale for this event. Follows ISO 3166-1 (i.e. 'US') for country and also allows for language and timezone to be specified.
          uniqueItems: false
        node:
          description: In Base 24 the term is station to describe the destination node or origination of a transaction.
          uniqueItems: false
          type: string
        IPAddressV6:
          description: The IP Address v6 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv6
        logicalConnection:
          description: Applicable when the connection from third-party has multiple logical connections over the same physical connections.
          uniqueItems: false
          type: string
        hostname:
          description: The Hostname where an payment originated or the destination of a payment.
          maxLength: 15
          uniqueItems: false
          type: string
          format: hostname
        institutionId:
          description: 'The FIID or Financial Institution ID, how a processor or Acquirer is identified.'
          uniqueItems: false
          type: string
        referralURL:
          description: An optional value used within e-commerce transactions. This is the originating url when a merchant receives a request.
          uniqueItems: false
          type: string
        IPAddressV4:
          description: The IP Address v4 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
        connectionId:
          description: On optional identifier used where a message is received on a specific connection.
          uniqueItems: false
          type: string
        partnerId:
          description: An AliPay indicator. This is a user number corresponding to an authorised AliPay account number. Will always commence with 2088
          maximum: 10000000000000000
          uniqueItems: false
          type: integer
      type: object
    sourcerouting:
      title: Transaction Source
      description: The routing component of a transaction event. This could relate to both a Source Route or Destination/Target Route.
      uniqueItems: false
      required:
        - sourceId
      properties:
        sourceId:
          description: |
            Source or Gateway information from where this transaction event originated (if applicable). The combination of gateway_id and application_id should be unique. This also allows filtering of applicable data dependent on the origin of events.

            Gateway |  sourceId
            ------|-------------
            Sales Connector Nordics|SCN
            Ocius|OCS
            InterCard|ICG
            PayBox|PBX
            WYNID|PWW
            APG Gateway|APG
            Payware Connect|PWC
            Transaction Service|TSS
            NZ Gateway|NZT
            AU Gateway|AUT
          uniqueItems: false
          type: string
        institutionId:
          description: 'The FIID or Financial Institution ID, how a processor or Acquirer is identified.'
          uniqueItems: false
          type: string
        communicationType:
          $ref: '#/components/schemas/communicationtype'
          description: The Communication Type is used to denote the Comms method utilised for the specific transaction.
          uniqueItems: false
        userId:
          description: User identification who initiated the transaction.
          uniqueItems: false
          type: string
        sourceLocale:
          $ref: '#/components/schemas/locale'
          description: The source locale for this event. Follows ISO 3166-1 (i.e. 'US') for country and also allows for language and timezone to be specified.
          uniqueItems: false
        node:
          description: In Base 24 the term is station to describe the destination node or origination of a transaction.
          uniqueItems: false
          type: string
        IPAddressV6:
          description: The IP Address v6 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv6
        logicalConnection:
          description: Applicable when the connection from third-party has multiple logical connections over the same physical connections.
          uniqueItems: false
          type: string
        hostname:
          description: The Hostname where an payment originated or the destination of a payment.
          maxLength: 15
          uniqueItems: false
          type: string
          format: hostname
        referralURL:
          description: An optional value used within e-commerce transactions. This is the originating url when a merchant receives a request.
          uniqueItems: false
          type: string
        IPAddressV4:
          description: The IP Address v4 where the event originated or is destined to be sent.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
        connectionId:
          description: On optional identifier used where a message is received on a specific connection.
          uniqueItems: false
          type: string
        geometry:
          $ref: '#/components/schemas/geolocation'
          description: The location of the source of this transaction. This differs from the Customer location in that it may represent an intermediary point.
          uniqueItems: false
      type: object
    stan:
      title: STAN
      description: Schema to represent a Systems Trace Audit Number. This format accepts older 6 digit STANs as well as the later 12 digit ISO STAN.
      maxLength: 12
      minLength: 6
      pattern: '^[0-9]{6,12}$'
      uniqueItems: false
      type: string
    threedsecure:
      title: Three D Secure authentication elements
      description: The Three D Secure elements of a CNP transaction if present. This would include Mastercard SecureCode or Verified by Visa.
      uniqueItems: false
      required:
        - authenticationValue
        - authenticationType
      properties:
        authenticationAlgorithm:
          description: Cardholder Authentication Value as determined by the ACS.
          uniqueItems: false
          enum:
            - CVV
            - CVVwATN
            - HMAC
            - MCAAV
          type: string
        XID:
          description: |-
            The XID parameter from the request message. This is normally received from an MPI as a base64 encoded string.
            This value should be sent and should not be converted to Hex prior to transmission.
          maxLength: 40
          uniqueItems: false
          type: string
        signatureVerification:
          description: 'Transaction Signature status identifier. Y=PARes validated, N=PARes cannot be validated.'
          uniqueItems: false
          type: boolean
        enrollmentStatus:
          description: The actual value of the VERes enrollment status if required.
          uniqueItems: false
          enum:
            - 'NO'
            - BYPASS
            - 'YES'
            - UNAVAILABLE
            - ERROR
          type: string
        errorMessage:
          description: Where an MPI returns an error on the 3DS step this can be included here.
          maxLength: 128
          uniqueItems: false
          type: string
        ECI:
          description: Electronic Commerce Indicator. ECI codes determine the final status of the transaction.
          maxLength: 40
          uniqueItems: false
          type: string
        authenticationType:
          $ref: '#/components/schemas/avvauthenticationtype'
          description: 'The type of the Authentication Verification Value (AVV), Cardholder Authentication Verification Value (CAVV) or Universal Cardholder Authentication Field(UCAF). This will vary according to the card type and is determined by the ACS. MasterCard UCAF(AVV), VISA CAVV, Amex AEVV.'
          uniqueItems: false
        UCAFIndicator:
          description: 'Only applicable to MasterCard transactions. 0=Non-Secure, 1=Merchant Only Secure Code, 2=Fully Authenticated.'
          maxLength: 1
          uniqueItems: false
          enum:
            - '0'
            - '1'
            - '2'
          type: string
        authenticationValue:
          description: 'Also known as the Authentication Verification Value (AVV), Cardholder Authentication Verification Value (CAVV) or Universal Cardholder Authentication Field(UCAF). This will vary according to the card type and is determined by the ACS. MasterCard UCAF(AVV), VISA CAVV, Amex AEVV. This value should already be Base64 encoded by the MPI.'
          uniqueItems: false
          type: string
          format: x-binary
        authenticationStatus:
          description: The actual value of the PARes Transaction status if required.
          uniqueItems: false
          enum:
            - ATTEMPTED
            - FAILED
            - SUCCESSFUL
            - UNABLE_TO_COMPLETE
          type: string
        verification:
          description: 'Any verification/authentication responses captured as part of the submission of the transaction. e.g. 3DS response values or ACRQ/ARCP. For some mPos transactions the verification may be performed on-device e.g. ApplePay, Face ID or Touch ID.'
          items:
            $ref: '#/components/schemas/verificationtype'
            uniqueItems: false
          uniqueItems: false
          type: array
      type: object
    timezone:
      description: 'A time zone, following the format defined in the IANA tz database (https://www.iana.org/time-zones). Valid examples are America/New_York and Etc/UTC. Do not use ambiguous, non-qualified values such as EST or GB. Before including this type in your interface, please consider whether it is actually appropriate to convey time zone information with your type. It is almost always the case that this should be transformed from UTC at the time of display to the user; this type might therefore be most associated with user-preference APIs.'
      maxLength: 127
      minLength: 1
      uniqueItems: false
      type: string
    token:
      title: Transaction Token
      description: These will refer to a Card Token present on the Payment. In some instances it is possible that there may be third-party tokens which cannot be interpreted by Verifone. Where a token is present in the model it is possible that there will also be another instrument representing the Card Holder details (CHD). This is because at some point the CHD will need to be retrieved in order to send a payment message.
      uniqueItems: false
      required:
        - instrumentType
      properties:
        tokenStatus:
          $ref: '#/components/schemas/tokenstatustype'
          description: An indicator of the current status of the Token.
          uniqueItems: false
        tokenExpiryDate:
          $ref: '#/components/schemas/datetime'
          description: The date when this token will expire. This can be set as part of the request or configured for the entity scope of the Token. Optional.
          uniqueItems: false
        instrumentType:
          description: To identify the type of instrument whether it is a Token
          default: TOKEN
          uniqueItems: false
          type: string
        tokenApplication:
          description: The token application that is to be used when creating these Tokens.
          uniqueItems: false
          type: string
        lossPreventionToken:
          description: The loss prevention one-way token that cannot be reversed to Card Holder data. This is included in a Payment for audit and tracking purposes.
          maxLength: 100
          uniqueItems: false
          type: string
        cardholderToken:
          description: The two-way token identifier used to represent the Cardholder data.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenEntityId:
          description: Optionally included is an entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenAssuranceLevel:
          $ref: '#/components/schemas/tokenassurancetype'
          description: The token assurance level. Optional.
          uniqueItems: false
      type: object
    tokenassurancetype:
      title: Token Assurance Type
      description: 'The Token Assurance, or validation performed on the Card Details prior to creating the Token.'
      default: NONE
      uniqueItems: false
      enum:
        - AVS_CVV_CVV2
        - CVV_CVV2
        - NONE
        - AVS
      type: string
    tokenisationresult:
      description: The Tokenisation outcome of an event.
      uniqueItems: false
      required:
        - responseCode
        - outcomeType
      properties:
        outcomeType:
          description: To identify the type of outcome whether it is Tokenisation Result
          default: TOKEN_RESULT
          uniqueItems: false
          type: string
        resultDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time at which the result was received. Normally the response time to client.
          uniqueItems: false
        tokenApplication:
          description: The token application that is to be used when creating these Tokens.
          uniqueItems: false
          type: string
        tokenEntityId:
          description: Optionally included is an entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        responseMessage:
          description: Detailed description of the response message.
          uniqueItems: false
          type: string
        transactionId:
          description: The Transaction Identification Number used by the Token Service Provider.
          maxLength: 15
          uniqueItems: false
          type: string
        responseCode:
          description: Response code received from the token service provider.
          maxLength: 8
          uniqueItems: false
          type: string
      type: object
    tokenrequesttype:
      title: Token Request Type
      description: The type of Token to be created
      default: TWO_WAY_MULTI_USE
      uniqueItems: false
      enum:
        - BOTH_MULTI_USE
        - ONE_WAY_MULTI_USE
        - TWO_WAY_MULTI_USE
        - THIRD_PARTY
      type: string
    tokenstatustype:
      title: Token Status Type
      description: The status of the cardholder data token.
      uniqueItems: false
      enum:
        - ACTIVE
        - SUSPENDED
        - DELETED
      type: string
    trackdatatype:
      description: This represents the format of the Track Data encoded on the card..
      default: ISO
      uniqueItems: false
      enum:
        - ISO
        - JIS-I
        - CMC-7
        - JIS-II
        - E-13B
        - AAMVA
      type: string
    trackspecification:
      uniqueItems: false
      required:
        - trackNumber
        - trackData
        - trackFormat
      properties:
        trackNumber:
          description: A digit value representing the card track.
          maximum: 3
          uniqueItems: false
          type: integer
        trackFormat:
          $ref: '#/components/schemas/trackdatatype'
          description: The format of the magnetic card data
          uniqueItems: false
        trackData:
          description: Magnetic track or magnetic ink characters line.
          maxLength: 140
          uniqueItems: false
          type: string
    transaction:
      title: Payment Transaction
      description: 'The payment or transaction. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
      uniqueItems: false
      required:
        - amount
        - createdDateTime
        - transactionId
        - gatewayTraceId
        - transactionType
        - instrument
        - POI
        - merchant
        - context
      properties:
        additionalServices:
          description: This follows the Nexo/ISO 20022 standard of showing additional services that were performed as part of the transaction.
          items:
            $ref: '#/components/schemas/transactionservicetype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        reconciliationDate:
          description: Reconciliation date.
          uniqueItems: false
          type: string
        dcc:
          $ref: '#/components/schemas/dcc'
          description: The optional Dynamic Currency Conversion properties if relevant to this transaction.
          uniqueItems: false
        createdDateTime:
          $ref: '#/components/schemas/datetime'
          description: 'The time that the transaction occured at the POI, this is referred to as the acceptor datetime in ISO8583 specification DE 12. In some cases this may reflect the date time when the transaction was received at a client Gateway or Switch where this is not managed by Verifone. This format should include the necessary timezone information'
          uniqueItems: false
        transactionDescription:
          description: An arbitrary string which can be attached to a transaction or payment object for descriptive purposes. This would correspond to Alipay 'memo' property
          maxLength: 256
          uniqueItems: false
          type: string
        instrument:
          description: The payment instruments that are associated with this transaction. There must be at least one.
          items:
            uniqueItems: false
            anyOf:
              - $ref: '#/components/schemas/card'
                uniqueItems: false
              - $ref: '#/components/schemas/token'
                uniqueItems: false
              - $ref: '#/components/schemas/alipay'
                uniqueItems: false
              - $ref: '#/components/schemas/bankaccount'
                uniqueItems: false
              - $ref: '#/components/schemas/paypal'
                uniqueItems: false
              - $ref: '#/components/schemas/wechat'
                uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        referenceId:
          description: An optional client identifier for the transaction generated at the outset of a business event. This value can be passed through all the components and will be used for logging. The format will be dependent on the calling system.
          maxLength: 100
          uniqueItems: false
          type: string
        preauthorisationId:
          description: 'This is an optional value that should only be present on a pre-authorisation transaction and only if it is required to support manual entry of pre-authorisation entries. This is a non-unique value that is generated for a pre-authorisation, but because it can manually re-keyed into a Terminal the value is actually generated by some other mechanism.'
          maxLength: 10
          uniqueItems: false
          type: string
        repeat:
          description: This transaction record is a repeat of a previous transaction.
          uniqueItems: false
          type: boolean
        initiatorTraceId:
          description: 'A number assigned by a transaction initiator(originator) to assist in identifying a transaction uniquely. The trace identifier remains unchanged for all messages within a two-message exchange, e.g. request/repeat and response. This property can be used to store the System trace audit number (STAN) as used in the ISO8583 specification (DE 11). Note the contents of this field are mandatory in many specifications - ISO8583, AS2805 (DE11) and are often related to the Retrieval Reference Number (RRN) as also specified in ISO8583. Unfortunately due to the usage in these earlier specifications, a STAN was limited to 6 digits which means that it cannot be utilised as a general purpose unique id. In addition, this entry is often printed on the receipt at a POI. ISO8583 DE11'
          maxLength: 40
          uniqueItems: false
          type: string
        context:
          $ref: '#/components/schemas/context'
          description: This relates to the context of the payment and also the sale were there is a merchant store and potentially an associated POS. This will identify  the means of capture of the payment.
          uniqueItems: false
        settledDate:
          $ref: '#/components/schemas/datenotime'
          description: 'This will reflect either the desired Merchant settlement date or the actual settlement date depending where the transaction request is within the payment lifecycle. A transaction may be assigned an intended settlement date, but it is possible that this date will not occur for technical reasons hence there should be a subsequent event to indicate the actual date of settlement. Format is date only as per RFC 3339.'
          uniqueItems: false
        settlementContext:
          $ref: '#/components/schemas/settlementcontext'
          uniqueItems: false
        UUID:
          $ref: '#/components/schemas/uuid'
          description: A unique internal identifier as a string for the Transaction. This value is assigned by the PDSP to each transaction to ensure uniqueness. This is a surrogate key as each client gateway or application may have it's own unique transaction identifier but the Data Platform (Pythia) will have a consolidated view.
          uniqueItems: false
        outcome:
          description: The Outcome of the transaction event where known. These attributes are normally present when a response is received or generated to a request. Depending on the current state of a transaction no outcome may be known.
          items:
            uniqueItems: false
            anyOf:
              - $ref: '#/components/schemas/transactionresult'
                uniqueItems: false
              - $ref: '#/components/schemas/acquirerresult'
                uniqueItems: false
              - $ref: '#/components/schemas/tokenisationresult'
                uniqueItems: false
              - $ref: '#/components/schemas/alipayresult'
                uniqueItems: false
              - $ref: '#/components/schemas/wechatresult'
                uniqueItems: false
              - $ref: '#/components/schemas/paypalresult'
                uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        amount:
          $ref: '#/components/schemas/amountmoney'
          description: This object represents the actual (total) amount of the transaction including the currency of the transaction.
          uniqueItems: false
        transmittedDateTime:
          $ref: '#/components/schemas/datetime'
          description: 'The time at which the transaction request was sent from a Gateway to Acquirer, Processor or Scheme. This should include the necessary timezone.'
          uniqueItems: false
        instalment:
          $ref: '#/components/schemas/recurring'
          description: The recurring or instalment transaction details. This transaction may be one of a set of recurring or instalments.
          uniqueItems: false
        postponedSettlementDays:
          description: An optional value that is used in CNP/e-commerce transactions. Postponed settlement (number of calendar days) until settlement will occur (2nd message). Values 0 to 7.
          maximum: 7
          minimum: 0
          uniqueItems: false
          type: integer
        gatewayTraceId:
          description: A value used to allow Gateways to use associate the unique identifier for the transaction. In most instances a Gateway will allocate it's own internal ID. The length allows for an optional UUID to be generated.
          maxLength: 100
          uniqueItems: false
          type: string
        estimated:
          description: 'This flag appears only on authorisations/pre-authorisations. Certain MCC can provide an indicator to indicate an initial or estimated amount where the final amount is unknown. Restricted to Lodging, Cruise, Taxi, Amusement, Transport, Rental and Bar or Restaurant Merchants.'
          uniqueItems: false
          type: boolean
        capture:
          description: Whether this transaction resulted in the capture of the authorisation. This is the indicator whether there is a single message model (host capture) or a two message model - authorisation and capture. The default is true.
          default: 'true'
          uniqueItems: false
          type: boolean
        merchant:
          $ref: '#/components/schemas/merchant'
          description: A reference to the merchant involved within the transaction event. Not all events may originate from the Merchant.
          uniqueItems: false
        POI:
          $ref: '#/components/schemas/poi'
          description: The Point of Interaction at which the transaction event was triggered or originated. This is also referred to by other synonyms such as Terminal or PED.
          uniqueItems: false
        transactionId:
          description: The unique transaction id. This is the identifier to be used for locating the transaction and for reconciliation and auditing. A reference supplied by the system retaining the original source information and used to assist in locating that transaction or a copy of the transaction. This value is critical in matching values that are sent to other Payment processors or Acquirers and is defined in the ISO8583 specification as RRN in attribute DE 37. In Alipay this would be the 'partner_trans_id'. CTROUD - PWC.
          maxLength: 100
          uniqueItems: false
          type: string
        transactionType:
          $ref: '#/components/schemas/transactiontype'
          description: A type indicator for the main operation or service that was performed as part of the transaction event.
          uniqueItems: false
        detailedAmount:
          $ref: '#/components/schemas/amountstype'
          description: This object represents the actual amount of the transaction including a breakdown of sub elements that create the total amount this should also include the currency of the transaction.
          uniqueItems: false
        name:
          description: Where a name is to be assigned to the specific transaction for reporting purposes. This corresponds to Alipay 'trans_name'.
          maxLength: 256
          uniqueItems: false
          type: string
        micr:
          description: 'An optional value used to capture the Magnetic Ink Character Recognition value. This will only be present where a cheque is swiped. In US, This contains the 9 digit ABA Number immediately followed by the checking account number (up to 14 digits) and then optional cheque number.'
          uniqueItems: false
          type: string
        relatedTransaction:
          $ref: '#/components/schemas/relatedtransaction'
          description: Where this transaction relates to a prior transaction the details are referenced at this point. This is particularly important where transactions need to be linked such as completions or matched refunds. It is also used where there is a requirement for linking transactions together such as a pre-authorisation top-up.
          uniqueItems: false
        capturedDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time that the transaction was captured or received at the processor. This would be a gateway receipt time where this was capturing transactions from multiple sources.
          uniqueItems: false
        partial:
          description: |-
            This flag apears only on authorisations/pre-authorisation completions, cancelations and refunds. It indicates that the amount of this transaction is only a partial amount of the **related transaction**.
            A related transaction must be present if this value is set to 'true'.

            In the case of a pre-authorisation request this will reflect that a pre-authorisation may be approved for only a partial amount (which is indicated in the response) due to available funds.
          uniqueItems: false
          type: boolean
        customer:
          $ref: '#/components/schemas/customer'
          description: An Optional value to define Customer or Cardholder related properties. The number of entries known will vary according to the channel the transaction was accepted from.
          uniqueItems: false
      type: object
    transactionenvironment:
      title: Transaction Environment
      description: The Environment object is introduced to reflect the nexo/ISO20022 structure that encapsulates the environment that a transaction occurs within.
      uniqueItems: false
      properties:
        merchant:
          $ref: '#/components/schemas/merchant'
          description: A reference to the merchant involved within the transaction event. Not all events may originate from the Merchant.
          uniqueItems: false
        POI:
          $ref: '#/components/schemas/poi'
          description: The Point of Interaction at which the transaction event was triggered or originated. This is also referred to by other synonyms such as Terminal or PED.
          uniqueItems: false
        customer:
          $ref: '#/components/schemas/customer'
          description: An Optional value to define Customer or Cardholder related properties. The number of entries known will vary according to the channel the transaction was accepted from.
          uniqueItems: false
      type: object
    transactionoutcomeactiontype:
      title: Transaction Outcome Action Type
      description: The transaction outcome actions closely follow the idea of issuer scripts. Actions that are sent on the response to a transaction event(authorisation). These are called Action and ActionType in Nexo/ISO20022. There may be multiple actions on a single response.
      uniqueItems: false
      enum:
        - PIN_RETRY
        - PIN_LAST_TRY
        - REQUEST_DATA
        - BUSY
        - ID_REQUIRED
        - FORBID_OVERRIDE
        - REFERRAL
        - DISPLAY_MESSAGE
        - CAPTURE_CARD
        - PRINT_MESSAGE
      type: string
    transactionresponsetype:
      description: 'This is the result of a transaction event. This is a high-level result with the response code providing further detail as to the actual reason.<li>SUCCESS - Service successfully provided and approved.</li><li>FAILED - Service request failed, declined.</li><li>PARTIAL - Partial Success. This should be accompanied with additional detail.</li><li>TECHNICAL - A Technical error, service cannot be provided for a technical reason. (e.g. timeout to issuer.)</li><li>MISSING - Where a corresponding identifier reference cannot be located. Similar resonse in Alipay/WeChat for refunds.</li><li>UNKNOWN - The payment state is not known or cannot be determined. Also used in the Alipay ''response_code''</li>'
      uniqueItems: false
      enum:
        - SUCCESS
        - FAILED
        - PARTIAL
        - UNKNOWN
        - MISSING
        - TECHNICAL
      type: string
    transactionresult:
      description: The outcome of an event. In a number of circumstances an event may never receive a known outcome or is indicated as timed out.
      uniqueItems: false
      required:
        - responseCode
        - outcomeType
      properties:
        offlineAuthorisationCode:
          description: Where an authorisation code is generated on the Terminal and sent with an advice for a transaction.
          uniqueItems: false
          type: string
        resultDateTime:
          $ref: '#/components/schemas/datetime'
          description: The time at which the result was received for the transaction. Normally the response time to client.
          uniqueItems: false
        riskIndicator:
          description: Some risk indicator if returned or evaluated for this event.
          uniqueItems: false
          type: string
        errorMessage:
          description: A corresponding error message where one exists for the error code or condition.
          uniqueItems: false
          type: string
        errorCode:
          description: The code or numeric value corresponding to any error that occurred on the Transaction stored as a string.
          uniqueItems: false
          type: string
        authorisingEntity:
          $ref: '#/components/schemas/entitytype'
          description: The authorising entity for the transaction.
          uniqueItems: false
        authorisationCode:
          description: The authorisation response code received from issuer/acquirer. This property can be used to store the Authorization code as used in the ISO8583 specification (DE 38)
          uniqueItems: false
          type: string
        responseCode:
          description: Where a Gateway maps a different response code to that received from Acquirer/Issuer that should be captured here.
          maxLength: 4
          uniqueItems: false
          type: string
        availableBalance:
          $ref: '#/components/schemas/amountmoney'
          description: This is considered an outcome or result as the value will be returned from a Balance Inquiry or is sometimes returned in the response for a stored value card.
          uniqueItems: false
        transactionTraceId:
          description: The Transaction Identification Number is the term used by Visa to describe the unique Scheme Reference Data that now needs to flow for each successful authorisation and corresponding completed transaction. MasterCard refer to this as the TraceIdentificationNumber.
          maxLength: 15
          uniqueItems: false
          type: string
        outcomeType:
          description: To identify the type of outcome whether it is Transaction Result
          default: TRAN_RESULT
          uniqueItems: false
          type: string
        feeAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The fee that was associated with this transaction (where applicable). It is not expected that this value is sent by a POI or Capturing system.
          uniqueItems: false
        remainingAmount:
          $ref: '#/components/schemas/amountmoney'
          description: The remaining amount following a partial transaction (such as a partial cancellation or refund). This information may not always be present and can be derived from the other events.
          uniqueItems: false
        lifeCycleId:
          description: The Transaction Life Cycle ID (as referred to by MasterCard). This would normally be present in DE63.
          maxLength: 15
          uniqueItems: false
          type: string
        cvvResult:
          description: 'The result of a Card Verification Value check. The CVV or CVV2 will never be stored, but an indicator of the result can be captured.'
          uniqueItems: false
          type: string
        authorisationOnline:
          description: Authorisation for the transaction was received online
          uniqueItems: false
          type: boolean
        response:
          $ref: '#/components/schemas/transactionresponsetype'
          description: The result of the transaction event.
          uniqueItems: false
        iccResponse:
          $ref: '#/components/schemas/iccresponse'
          description: For ICC the issuer may respond with some specific values
          uniqueItems: false
        captured:
          description: 'Whether the value has been captured for this transaction. For a pre-authorisation this would be false, for an authorisation message in a dual message process this would change when the second message is generated.'
          uniqueItems: false
          type: boolean
        responseMessage:
          description: The message generated by Gateway corresponding to the code.
          uniqueItems: false
          type: string
        actions:
          description: The list of actions that may be returned as a response to the transaction request.
          items:
            $ref: '#/components/schemas/transactionoutcomeactiontype'
            uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
        authoriserId:
          description: 'Authorising agent institution identification code (as referred to by ISO8583:1993). This would normally be present in DE58.'
          maxLength: 15
          uniqueItems: false
          type: string
      type: object
    transactions:
      title: Transactions array.
      description: A list of transaction objects. This is normally returned in response to the query API.
      items:
        $ref: '#/components/schemas/event'
        description: An individual transaction event.
        uniqueItems: false
      maxItems: 100
      minItems: 0
      uniqueItems: false
      type: array
    transactionservicetype:
      description: |-
        The additional services are a means on identifying the additional services performed for the primary **transactionType**.
         The Gambling Payout is used for Lotto or similar Gambling operations where the payout is performed at the Terminal.
      uniqueItems: false
      enum:
        - QUASICASH
        - CARD_ACTIVATION
        - CASH_BACK
        - GRATUITY
        - RESERVATION
        - DCC
        - GAMBLING_PAYOUT
        - LOYALTY
        - CASH_FUNDS_XFER
        - CARD_VERIFICATION
        - BALANCE
      type: string
    transactionstatetype:
      title: Transaction Status Type
      description: This represents the available states that a transaction may have. At any given point it may only have a single state.
      uniqueItems: false
      enum:
        - ROUTING
        - EXPIRED
        - SETTLEMENT_FAILED
        - DISPUTED
        - EXCEPTION
        - INITIATED
        - REPEATING
        - AWAITING_INVOICE
        - RECEIVED
        - COMPLETED
        - FAILED
        - ON_HOLD
        - REVERSING
        - AUTHORISED
        - REVERSED
        - REFUNDED
        - REVERSE_ERROR
        - DECLINED
        - CANCELLED
        - SETTLED
        - UNMATCHED
        - SUBMITTED
        - APPROVED
        - READY_PP
        - AUTHENTICATING
        - SENT
      type: string
    transactionsubscriptionrequest:
      title: A Transaction Subscription Request
      description: Transaction subscriptions allow callbacks to be defined for asynchronous events to be published by the PDSP to a provided subscription URL. This feature should be restricted in use. The default if no filters are provided will be to publish all transactions available to the subscription user.
      uniqueItems: false
      required:
        - subscriptionURL
      properties:
        sources:
          description: The header of a transaction event may contain a source object. This will restrict the publishing of events to only matching source identifiers.
          items:
            $ref: '#/components/schemas/source'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        transactionStates:
          description: The transactions may pass through multiple states during the normal lifecycle of a transaction. This will restrict the subscription to specific  states.
          items:
            $ref: '#/components/schemas/transactionstatetype'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        paymentTypes:
          description: The transactions within the PDSP cover a full range of types support by clients and gateways. Subscriptions can restrict the range of payment types that are published.
          items:
            $ref: '#/components/schemas/paymenttype'
            uniqueItems: false
          minItems: 0
          uniqueItems: true
          type: array
        subscriptionURL:
          description: The subscription URL provided by the client making the request. This will be subsequently be used by the PDSP to publish transaction events asynchronously.
          maxLength: 1000
          uniqueItems: false
          type: string
      type: object
    transactiontype:
      description: |-
        A type indicator for the main operation or service that was performed as part of the transaction event.
         The different cash operations are supported to show consistency.<li>CASH_BACK - Debit Account</li><li>CASH_ADVANCE = Credit Account</li>
      uniqueItems: false
      enum:
        - PREAUTH
        - SALE
        - NON_FINANCIAL
        - REFUND
        - PREAUTH_INCREMENT
        - LOAD
        - UNLOAD
        - RATE
        - DECLINED
        - NO_SHOW
        - BALANCE
        - CARD_DEACTIVATION
        - CASH_ADVANCE
        - CARD_ACTIVATION
        - CASH_DEPOSIT
        - PREAUTH_COMPLETION
        - AUTHORISATION
        - CANCEL
        - DELAYED_CHARGE
        - VOID
        - CARD_VERIFICATION
      type: string
    transactionupdate:
      title: Payment Transaction
      description: 'The payment or transaction. This will have multiple components describing the payment, instrument/source, merchant and the sales context.'
      uniqueItems: false
      required:
        - gatewayTraceId
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
        detailedAmount:
          $ref: '#/components/schemas/amountstype'
          description: This object represents the actual amount of the transaction including a breakdown of sub elements that create the total amount this should also include the currency of the transaction.
          uniqueItems: false
        gatewayTraceId:
          description: This is an optional value used to allow Gateways to use associate the unique identifier for the transaction. In most instances a Gateway will allocate it's own internal ID. The length allows for an optional UUID to be generated.
          maxLength: 100
          uniqueItems: false
          type: string
        settledDate:
          $ref: '#/components/schemas/datenotime'
          description: 'This will reflect either the desired Merchant settlement date or the actual settlement date depending where the transaction request is within the payment lifecycle. A transaction may be assigned an intended settlement date, but it is possible that this date will not occur for technical reasons hence there should be a subsequent event to indicate the actual date of settlement. Format is date only as per RFC 3339.'
          uniqueItems: false
        referenceId:
          description: An optional client identifier for the transaction generated at the outset of a business event. This value can be passed through all the components and will be used for logging. The format will be dependent on the calling system.
          maxLength: 100
          uniqueItems: false
          type: string
        outcome:
          description: The Outcome of the transaction event where known. These attributes are normally present when a response is received or generated to a request. Depending on the current state of a transaction no outcome may be known.
          items:
            uniqueItems: false
            anyOf:
              - $ref: '#/components/schemas/transactionresult'
                uniqueItems: false
              - $ref: '#/components/schemas/acquirerresult'
                uniqueItems: false
              - $ref: '#/components/schemas/alipayresult'
                uniqueItems: false
              - $ref: '#/components/schemas/wechatresult'
                uniqueItems: false
              - $ref: '#/components/schemas/paypalresult'
                uniqueItems: false
          minItems: 0
          uniqueItems: false
          type: array
      type: object
    trip:
      description: The trip details where the sales context to this transaction was a journey.
      uniqueItems: false
      properties:
        unit:
          $ref: '#/components/schemas/unitcode'
          description: 'The unit for the distance measure, if it is necessary to specify this.'
          uniqueItems: false
        tripDescription:
          description: Details of the trip as recorded by the driver or customer.
          maxLength: 200
          uniqueItems: false
          type: string
        distance:
          description: The distance covered.
          maximum: 9999999999
          uniqueItems: false
          type: integer
        driver:
          $ref: '#/components/schemas/namedetails'
          description: The vehicle driver details.
          uniqueItems: false
      type: object
    trxbatchresponse:
      description: The Batch wrapper to the Transaction responses. This contains an array of responses for all the transactions in the original request.
      uniqueItems: false
      required:
        - code
        - returnObject
      properties:
        returnObject:
          description: The array of transaction responses.
          items:
            $ref: '#/components/schemas/trxdataresponse'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
        code:
          description: |
            The overall response code for the batch of transactions. Each individual transaction response also has a code.

            Code |  Description
            ------|-------------
            1200|Totally Accepted
            1220|Partially Accepted
            1210|Totally Rejected
          uniqueItems: false
          type: integer
        message:
          description: The overall response message for the batch of transactions. Each individual transaction response also has a message.
          uniqueItems: false
          type: string
      type: object
    trxdataresponse:
      description: The response object after a Transaction Insert.
      uniqueItems: false
      required:
        - transactionId
        - gatewayTraceId
        - responseCode
        - responseMessage
      properties:
        gatewayTraceId:
          description: This is an optional value used to allow Gateways to use associate the unique identifier for the transaction. In most instances a Gateway will allocate it's own internal ID. The length allows for an optional UUID to be generated.
          maxLength: 40
          uniqueItems: false
          type: string
        responseMessage:
          description: Response message associated with the response
          uniqueItems: false
          type: string
        transactionId:
          description: The unique transaction id. This is the identifier to be used for locating the transaction and for reconciliation and auditing. A reference supplied by the system retaining the original source information and used to assist in locating that transaction or a copy of the transaction. This value is critical in matching values that are sent to other Payment processors or Acquirers and is defined in the ISO8583 specification as RRN in attribute DE 37. In Alipay this would be the 'partner_trans_id'
          maxLength: 100
          uniqueItems: false
          type: string
        responseCode:
          description: |
            Response code to the Transaction.

            Code |  Description
            ------|-------------
            00|Success
            01|Invalid Request
            02|Internal Server Error Occured while processing the Request
            03|Invalid Instrument Type with value :{value}
            04|Invalid Outcome Type with value :{value}
            05|{value} does not exists: {value}
            06|{value} already exists: {value}
            08|Invalid data for {value}
            09|Invalid format for {value}
          maxLength: 4
          uniqueItems: false
          type: string
      type: object
    unitcode:
      description: 'The unit of measurement given using the UN/CEFACT Common Code (2-3 alphanumeric characters); if no unit is given, it is assumed to be the code ''C62'', which stands for ''pieces''. Common examples are ANN for year and GLL for Gallon (US).'
      default: C62
      maxLength: 3
      minLength: 2
      pattern: '^[a-zA-Z0-9]{2,3}$'
      uniqueItems: false
      type: string
    uuid:
      description: 'Schema to represent a UUID per the format defined in RFC 4122 (https://tools.ietf.org/html/rfc4122).'
      maxLength: 36
      minLength: 36
      pattern: '^[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}$'
      uniqueItems: false
      type: string
    vehicle:
      title: Customer(Cardholder) Identification details - Vehicle
      description: Identification elements that relate to the identity of a vehicle if that is related to the transaction. This follows a similar structure to the ISO20022 elements.
      uniqueItems: false
      properties:
        vehicleTagEntryMode:
          $ref: '#/components/schemas/entrymode'
          description: The mechanism by which the vehicle tag was captured.
          uniqueItems: false
        odometer:
          description: The odemeter reading at the point when the transaction occurred. This is common in fuel dispensing systems to
          uniqueItems: false
          type: integer
        vehicleIdentificationNumber:
          description: This is the manufacturers identity commonly called the VIN which is physically imprinted on the Vehicle and used as a serial number for identification. There is a standard to their format.
          maxLength: 17
          uniqueItems: false
          type: string
        trailerNumber:
          description: 'This will be the identity of the Trailer, normally a registration number that is attached to the Trailer for legal purposes.'
          maxLength: 30
          uniqueItems: false
          type: string
        vehicleNumber:
          description: 'This will be the identity of the Vehicle, normally a registration number that is attached to the Vehicle for legal purposes'
          maxLength: 30
          uniqueItems: false
          type: string
        vehicleTag:
          description: In many locales commercial Vehicles can be electronically tagged. The value can be captured here.
          maxLength: 30
          uniqueItems: false
          type: string
        hubometer:
          description: A device mounted on the axle of an automobile or other land vehicle that measures distance traveled. The value can be captured here.
          uniqueItems: false
          type: number
        trailerHours:
          description: 'Hours that the trailer has been operating, there are legal requirements around these values in some jurisdictions.'
          uniqueItems: false
          type: integer
      type: object
    verificationcapabilitytype:
      description: |-
        The verification type that was received for the outcome or result of a payment request. This type will indicate the Verification capability of a device.<ul><li>SECURE_ECOMMERCE - 3 D(omain) Secure</li><li>Manual - Other Manual (not signature) e.g. Passport or drivers license.</li>

        Malfunction is used where the capabilities of the device are known to be not functioning which will affect the CVM.

        UNKNOWN can be used to indicate OTHER.
      uniqueItems: false
      enum:
        - PERSONAL_HISTORY
        - MALFUNCTION
        - OFFLINE_PIN
        - CONSUMER_ON_DEVICE
        - OFFLINE_BIOMETRICS
        - OFFLINE_DIGITAL_SIGNATURE
        - PKI_SIGNATURE
        - SECURE_ECOMMERCE
        - DIGITAL_SIGNATURE
        - MANUAL
        - UNKNOWN
        - NONE
        - CARDHOLDER_AUTH_DATA
        - MANUAL_SIGNATURE
        - ONLINE_PIN
      type: string
    verificationentity:
      description: The verification entity or device that has performed the verification.
      uniqueItems: false
      enum:
        - AGENT
        - TERMINAL
        - ISSUER
        - ICCD
        - ACQUIRER
        - MERCHANT
      type: string
    verificationresult:
      title: Customer(Cardholder) Verification result
      description: The Customer verification result. This follows a similar structure to the ISO20022 elements.
      uniqueItems: false
      properties:
        result:
          $ref: '#/components/schemas/results'
          description: The result of verification. <li>FAIL - Verification failed</li><li>MISS - Missing information</li><li>NOVF - Not performed</li><li>PART - Partial match</li><li>SUCC - Success</li><li>ERRR - Technical Error. Unable to perform verification.</li>
          uniqueItems: false
        method:
          $ref: '#/components/schemas/authenticationtype'
          description: Method of verification that has been used
          uniqueItems: false
        verificationEntity:
          $ref: '#/components/schemas/verificationentity'
          description: Entity or device that has performed the verification
          uniqueItems: false
      type: object
    verificationtype:
      description: The verification type that was received for the outcome or result of a payment request. This represents a combination of 3DS and other Customer Verification Types.
      uniqueItems: false
      enum:
        - DENIED
        - WITH_CRYPTOGRAM
        - NON_PARTICIPATION
        - UNABLE_TO_AUTHENTICATE
        - MERCHANT_NOT_ENROLLED
        - WITHOUT_CRYPTOGRAM
      type: string
    visioncomsettlementrequest:
      title: Verifone Vision Settlement Request Model for OCH API v1.0.13
      description: This represents an individual settlement request submitted to the Vision OCH API.
      uniqueItems: false
      required:
        - batchId
        - batchCreationDate
        - batchFileNumber
        - batchCurrency
        - batchTrxNbr
        - batchApplication
        - contractId
        - merchantName
        - acquirerId
        - creditCount
        - salesCount
        - voidCount
        - nonFinancialCount
        - creditTotal
        - salesTotal
        - voidTotal
        - nonFinancialTotal
        - batchStatus
        - batchSession
      properties:
        batchClosingDate:
          description: Batch closing date and time ( YYYYMMDDHHmmSS).
          maxLength: 14
          uniqueItems: false
          type: string
        salesCount:
          description: Total number of sales transactions within the batch.
          uniqueItems: false
          type: string
        batchCreationDate:
          description: Batch creation date and time ( YYYYMMDDHHmmSS).
          maxLength: 14
          uniqueItems: false
          type: string
        nonFinancialCount:
          description: Total number of non-financial transactions within the batch.
          uniqueItems: false
          type: string
        batchFileNumber:
          description: Batch file number assigned by the acceptance system.
          maxLength: 11
          uniqueItems: false
          type: string
        creditTotal:
          description: Sum of credit transactions amount.
          uniqueItems: false
          type: string
        voidTotal:
          description: Sum of canceled transaction amount.
          uniqueItems: false
          type: string
        nonFinancialTotal:
          description: Sum of non-financial transaction amount.
          uniqueItems: false
          type: string
        serverName:
          description: Server Name Mandatory for WYNID transactions .
          uniqueItems: false
          type: string
        creditCount:
          description: Total number of credit transactions within the batch.
          uniqueItems: false
          type: string
        salesTotal:
          description: Sum of sales transactions amount.
          uniqueItems: false
          type: string
        batchId:
          description: Batch identifier managed by acceptance system.
          maximum: 9999
          uniqueItems: false
          type: integer
        serverId:
          description: Server ID Mandatory for WYNID Transactions .
          uniqueItems: false
          type: integer
        merchantName:
          description: Merchant name as known by the VISION back office.
          uniqueItems: false
          type: string
        settlementStatus:
          description: Settlement status ( sent by the acquirer).
          uniqueItems: false
          enum:
            - F_V_ENC
            - F_V_TOK
            - F_M_ENC
            - F_V_ATT
            - F_M_TKO
            - F_M_ATT
            - F_M_TOK
        batchSession:
          description: Session number assigned by the acceptance system ( this batch identifier is printed on the receipt ).
          uniqueItems: false
          type: string
        batchCurrency:
          description: Batch currency.
          maxLength: 3
          uniqueItems: false
          type: string
        salesDelayedCount:
          description: Total number of delayed sales transactions within the batch.
          uniqueItems: false
          type: string
        acquirerId:
          description: Acquire identification number (Bank id).
          uniqueItems: false
          type: string
        batchNumber:
          description: Batch number assigned by the acquirer after the settlement.
          maxLength: 11
          uniqueItems: false
          type: string
        batchTrxNbr:
          description: Total number of transactions within the batch.
          maximum: 999999
          uniqueItems: false
          type: integer
        batchApplication:
          description: Identifies the application having created the batch.
          maxLength: 7
          uniqueItems: false
          type: string
        settlementDate:
          description: Settlement date of the batch.
          uniqueItems: false
          type: string
        contractIdExt:
          description: Logical number assigned by the acquirer. It is used in conjunction with the contractId to identifier the merchant contract. If this field is not sent the value is assumed to be “001”.
          default: '001'
          uniqueItems: false
          type: string
        settlementTime:
          description: Settlement time of the batch.
          uniqueItems: false
          type: string
        contractId:
          description: Identifies Merchant contract.
          uniqueItems: false
          type: string
        batchStatus:
          description: Batch status.
          uniqueItems: false
          enum:
            - C
            - S
            - T
        voidCount:
          description: Total number of canceled transactions within the batch.
          uniqueItems: false
          type: string
        salesDelayedTotal:
          description: Sum of delayed sales transaction amount.
          uniqueItems: false
          type: string
      type: object
    visioncomtrxbatchresponse:
      description: The Batch wrapper to the Transaction responses. This contains an array of responses for all the transactions in the original request.
      uniqueItems: false
      required:
        - code
        - returnObject
      properties:
        returnObject:
          description: The array of transaction responses.
          items:
            $ref: '#/components/schemas/visioncomtrxdataresponse'
            uniqueItems: false
          minItems: 1
          uniqueItems: false
          type: array
        code:
          description: The overall response code for the batch of transactions. Each individual transaction response also has a code.
          uniqueItems: false
          type: integer
        message:
          description: The overall response message for the batch of transactions. Each individual transaction response also has a message.
          uniqueItems: false
          type: string
      type: object
    visioncomtrxdata:
      description: This represents an individual transaction request submitted to the Vision OCH API.
      uniqueItems: false
      required:
        - trxId
        - trxAmount
        - trxDate
        - trxTime
        - trxPan
        - trxPanAlgo
        - trxPanKeyIndex
        - trxPanMasked
        - trxType
        - trxCurrency
        - trxBatchId
        - trxApplication
        - trxPresenceMode
        - trxAuthenticationMode
        - trxEntryMode
        - trxRNN
        - trxScheme
        - trxBatchFileNumber
      properties:
        trxSchemeSel:
          description: The Card Scheme selection indicator.
          uniqueItems: false
          enum:
            - '0'
            - '1'
        trxEntryMode:
          description: Used to indicate the presence of Cardholder at the Point of Interaction.
          uniqueItems: false
          enum:
            - '0'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '80'
            - '81'
            - '82'
            - '10'
        trxPanAlgo:
          description: Encryption Algorithm used to encrypt the PAN.
          uniqueItems: false
          enum:
            - RSA
            - 'NO'
            - HSM
            - 3DES
            - AES
        trxScheme:
          description: The Card Scheme of the transaction expressed as a String.
          uniqueItems: false
          type: string
        trxPanKeyIndex:
          description: The index of the encryption key as known by Paybox.
          uniqueItems: false
          type: string
        trxBatchFileNumber:
          description: Transaction Batch File Number
          uniqueItems: false
          type: integer
        trxType:
          description: The type of transaction
          uniqueItems: false
          enum:
            - DEB
            - ANN
            - PRE
            - TNA
            - CRE
        trxPresenceMode:
          description: Used to indicate the presence of Cardholder at the Point of Interaction.
          uniqueItems: false
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
        trxEndVal:
          description: The card expiry date. Format is MMYY
          maximum: 9999
          uniqueItems: false
          type: integer
        trxDateTimeCanceled:
          description: The date and time of a cancelled transaction. I am keeping the original spelling and I have no idea what date format is expected
          uniqueItems: false
          type: string
        trxBatchId:
          description: The Batch identifier that the transaction is associated with.
          uniqueItems: false
          type: integer
        trxApplication:
          description: Identifies the application which performed the transaction.
          uniqueItems: false
          type: string
        trxDate:
          description: The local date where the transaction occurred. Format is YYYYMMDD
          maximum: 99999999
          uniqueItems: false
          type: integer
        trxAuthorizationNumber:
          description: The authorization number received for the transaction
          uniqueItems: false
          type: string
        trxAmount:
          description: The final amount of the transaction. Expressed with implied decimal place for the currency
          uniqueItems: false
          type: string
        trxCurrency:
          description: The currency that the transaction was executed using. This looks like Three-digit ISO 4217 currency code
          uniqueItems: false
          type: string
        trxRNN:
          description: A reference supplied by the system retaining the original source information and used to assist in locating that information or a copy thereof. This RRN is returned on a response to a request so is normally critical in associating transaction request and response messages. ISO8583 DE37.
          maxLength: 12
          uniqueItems: false
          type: string
        trxAcceptanceForce:
          description: Used in the scenario where a transaction is forced by the Merchant. What does this really mean?
          uniqueItems: false
          enum:
            - '0'
            - '1'
        trxId:
          description: The unique transaction identifier.
          maximum: 99999999999
          uniqueItems: false
          type: integer
        trxAmountAuthorization:
          description: The amount that was authorised for the transaction. Assume that this must be within the MCC authorisation limits of the final amount
          uniqueItems: false
          type: string
        trxPan:
          description: The Primary Account Number. Encrypted according to previously agreed encryption strategy
          uniqueItems: false
          type: string
        trxIdCanceled:
          description: The ID of the original transaction for a cancellation. Required if the transaction if of type cancellation.
          uniqueItems: false
          type: string
        trxAuthorizationResponseCode:
          description: The authorization response code received from Acquirer
          uniqueItems: false
          type: string
        trxTime:
          description: The local time where the transaction occurred. Format is YYYYMMDD
          uniqueItems: false
          type: string
        trxPanMasked:
          description: The masked PAN in accordance with PCI regulations.
          maxLength: 19
          minLength: 13
          uniqueItems: false
          type: string
        trxAuthenticationMode:
          description: Used to indicate the presence of Cardholder at the Point of Interaction.
          uniqueItems: false
          enum:
            - '0'
            - '11'
            - '1'
            - '12'
            - '2'
            - '5'
            - '8'
            - '10'
      type: object
    visioncomtrxdataresponse:
      description: The response object received from Vision after a Transaction Insert.
      uniqueItems: false
      required:
        - trxId
        - trxBatchId
        - contractId
        - contractIdExt
        - trxApplication
        - trxServerName
        - responseCode
        - responseMessage
      properties:
        trxServerName:
          description: The Server Name associated with the original Vision Transaction Request.
          maxLength: 20
          uniqueItems: false
          type: string
        additionalDSData:
          description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format. These will not be indexed but can be returned as part of the document.
          uniqueItems: false
          type: object
        contractId:
          description: The Merchant Contract under which the transaction was executed.
          uniqueItems: false
          type: string
        trxBatchId:
          description: The batch identifier for the group of transactions that were submitted.
          maximum: 9999
          uniqueItems: false
          type: integer
        contractIdExt:
          description: A logical value extension to the Contract.
          uniqueItems: false
          type: string
        responseMessage:
          description: An error message associated with the response
          maxLength: 80
          uniqueItems: false
          type: string
        trxId:
          description: The unique transaction identifier.
          maximum: 99999999999
          uniqueItems: false
          type: integer
        trxApplication:
          description: An identifier for the application that performed the transaction.
          maxLength: 7
          uniqueItems: false
          type: string
        responseCode:
          description: A Vision OCH response code to the Transaction.
          maximum: 9999
          uniqueItems: false
          type: integer
      type: object
    visiondatetime:
      description: 'A valid date-time representation defined by RFC 3339, section 5.6. The regular expression cannot reject all invalid dates, but provides guidance. Unlike RFC 3339, this defines a practical (if impractically precise) length limit on the number of fractional seconds. RFC 3339 is a profile of the ISO 8601 date-time standard. This means, for instance, that seconds are mandatory, although fractional/milliseconds seconds are not.'
      maxLength: 64
      minLength: 20
      pattern: '^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$'
      uniqueItems: false
      type: string
      format: date-time
    visionecomdata:
      description: The additional attributes that may be present on an CNP transaction. These are currently undefined in the OCH Specification.
      uniqueItems: false
      properties:
        dummy:
          description: A dummy attribute.
          uniqueItems: false
          type: string
      type: object
    visionemvdata:
      description: The additional attributes that may be present on an EMV transaction.
      uniqueItems: false
      properties:
        trxAID:
          description: The application identifier selected for the transaction.
          uniqueItems: false
          type: string
        trxCVMResult:
          description: The result of Cardholder Verification.
          uniqueItems: false
          type: string
        trxCrypto:
          description: The application cryptogram (ARCQ) for EMV cards. The Cryptogram is returned by the ICC in response to the GENERATE AC command.
          uniqueItems: false
          type: string
      type: object
    visionmerchantdata:
      description: This is the Merchant object associated with a transaction. There are minimal Merchant attributes per transaction request
      uniqueItems: false
      required:
        - contractId
        - acquirerId
      properties:
        contractId:
          description: Identifies the contract of the merchant.
          uniqueItems: false
          type: string
        contractIdExt:
          description: A logical number assigned by the Acquirer. It is used in conjunction with the ContractId to identify the Merchant contract. If not set a default of '001' will be used.
          default: '001'
          uniqueItems: false
          type: string
        acquirerId:
          description: The Acquirer ID.
          uniqueItems: false
          type: string
        magasin:
          description: The Enterprise Type.
          uniqueItems: false
          type: string
        applicationLevel:
          description: The Application Level
          uniqueItems: false
          type: string
        customerName:
          description: The customer Name
          uniqueItems: false
          type: string
        emailContact:
          description: The Email Id Contact
          uniqueItems: false
          type: string
        merchantName:
          description: The Merchant name as known within the VISION back office.
          uniqueItems: false
          type: string
      type: object
    visionproxyresponsedata:
      description: This is the optional server data where the transaction originated.
      uniqueItems: false
      required:
        - transId
        - dateTime
        - refCommand
        - amount
        - transType
        - transStatus
        - transBankStatus
        - appelType
        - site
        - rank
        - canal
      properties:
        dateTime:
          description: brief Date and time
          uniqueItems: false
          type: string
        transApp:
          description: transaction application
          uniqueItems: false
          type: string
        fintraxDevise:
          description: brief fintraxDevise. Champ trdevisectrv_tc dans tpeweb v2.trans fintrax
          uniqueItems: false
          type: string
        transId:
          description: brief number of the transaction
          uniqueItems: false
          type: string
        holderChoice:
          description: brief holderChoice.Trindicatorselection_i field in tpewebv2.ftrans
          uniqueItems: false
          type: string
        categorieCarte:
          description: brief categorieCarte.Champ trnature_tc dans tpewebv2.ftrans
          uniqueItems: false
          type: string
        dateTimeRemise:
          description: brief Date and time of delivery
          uniqueItems: false
          type: string
        fintraxTaux:
          description: brief fintraxTaux.Field rate_tc in tpewebv2.ffintraxeligibilite
          uniqueItems: false
          type: string
        enseigne:
          description: enseigne details
          uniqueItems: false
          type: string
        rank:
          description: brief rank
          uniqueItems: false
          type: string
        currency:
          description: brief Devise (format alphab tique ISO 4217)
          uniqueItems: false
          type: string
        canal:
          description: brief canal
          uniqueItems: false
          type: string
        transStatus:
          description: short Status from transaction
          uniqueItems: false
          enum:
            - One to. the confirmation
            - Refuse
            - Accepted
        receiverBankCode:
          description: acquirer brief code
          uniqueItems: false
          type: string
        amount:
          description: brief amount
          uniqueItems: false
          type: string
        holderEmail:
          description: brief e-mail carrier
          uniqueItems: false
          type: string
        wallet:
          description: wallet
          uniqueItems: false
          type: string
        transBankStatus:
          description: brief Status of the transaction in the bank
          uniqueItems: false
          enum:
            - To send
            - Not applicable
            - NA
            - One to. the confirmation
            - One to. the capture
            - sent
            - Dilated
        rapprochement:
          description: brief Rapprochement
          uniqueItems: false
          type: string
        contract:
          description: brief contract.
          uniqueItems: false
          type: string
        _explicitType:
          description: Type is TransactionVADVO2
          uniqueItems: false
          type: string
        idMagasin:
          description: idMagasin
          uniqueItems: false
          type: string
        guaranteed:
          description: Letter Guarantee 3ds
          uniqueItems: false
          type: string
        paymentTicketEmail:
          description: brief paymentTicketEmail
          uniqueItems: false
          type: string
        motifRefus:
          description: brief reason for refusal.
          uniqueItems: false
          type: string
        trame:
          description: trame
          uniqueItems: false
          type: string
        remiseBankNum:
          description: brief bank rebate number (not paybox id)
          uniqueItems: false
          type: string
        fintraxMontant:
          description: brief fintraxMontant.Champ trmontctrv_l dans tpewebv2.ftransfintrax
          uniqueItems: false
          type: string
        refCommand:
          description: brief reference of the order
          uniqueItems: false
          type: string
        site:
          description: store name brief
          uniqueItems: false
          type: string
        transType:
          description: brief Transaction type
          uniqueItems: false
          enum:
            - Metier
            - Debit
            - Balance Request
            - Credit
            - Cancellation
        holderCountryCode:
          description: country brief
          uniqueItems: false
          type: string
        idAppel:
          description: brief call number
          uniqueItems: false
          type: string
        ticketGenerable:
          description: brief ticketGenerable. If '1' the mailing envelope is displayed
          uniqueItems: false
          type: string
        refArchivage:
          description: archiving details
          uniqueItems: false
          type: string
        idSousEnseigne:
          description: idSousEnseigne
          uniqueItems: false
          type: string
        groupe:
          description: group
          uniqueItems: false
          type: string
        clientCountryCode:
          description: brief pays client
          uniqueItems: false
          type: string
        threeDSStatus:
          description: brief 3DS Status
          uniqueItems: false
          type: string
        idEnseigne:
          description: idEnseigne
          uniqueItems: false
          type: string
        appelType:
          description: brief appelType
          uniqueItems: false
          type: string
      type: object
    visionresponse:
      title: Verifone Vision Settlement Response Model for OCH API v1.0.13
      description: This represents an individual settlement response received from the Vision OCH API.
      uniqueItems: false
      required:
        - code
        - message
      properties:
        code:
          description: Settlement response code for the batch.
          uniqueItems: false
          type: integer
        message:
          description: Settlement response message.
          uniqueItems: false
          type: string
      type: object
    visionresponsedata:
      description: The additional attributes that may be added by ds-api-manager.
      uniqueItems: false
      properties:
        applicationType:
          maxLength: 30
          uniqueItems: false
          type: string
        magasinId:
          description: Magasin id.
          maxLength: 20
          uniqueItems: false
          type: string
        systAccId:
          description: System Acceptance Id.
          maxLength: 20
          uniqueItems: false
          type: string
        transactionRowId:
          description: Id assigned by PayBox.
          maxLength: 20
          uniqueItems: false
          type: string
        settlementId:
          description: Settlement Id.
          maxLength: 20
          uniqueItems: false
          type: string
      type: object
    visionserverdata:
      description: This is the optional server data where the transaction originated.
      uniqueItems: false
      properties:
        trxServerName:
          description: The Server name. This is mandatory for transactions received from Wynid.
          uniqueItems: false
          type: string
        trxServerId:
          description: The Server Identifier.
          uniqueItems: false
          type: string
      type: object
    visionterminaldata:
      description: This is the Terminal or POI object associated with a transaction. Used to identify the POI and context where the transaction was captured.
      uniqueItems: false
      required:
        - trxTermId
        - trxislandNb
        - trxTermSerialNumber
      properties:
        terminalModel:
          description: 'The model number of the device where known. e.g. VX690, VX680...'
          uniqueItems: false
          type: string
        terminalManufacturer:
          description: The manufacturer of the device. Hopefully Verifone.
          uniqueItems: false
          type: string
        terminalLabel:
          description: Can be filled by a Terminal identification value other than serial number and trxTermId.
          uniqueItems: false
          type: string
        trxTermSerialNumber:
          description: The Terminal serial number.
          uniqueItems: false
          type: string
        trxislandNb:
          description: The Cash register group identification number.
          uniqueItems: false
          type: string
        trxTermId:
          description: The Terminal Identifier belonging to the Merchant. ISO8583 DE41
          uniqueItems: false
          type: string
      type: object
    visiontokendata:
      description: The additional attributes that may be added by ds-api-manager.
      uniqueItems: false
      properties:
        tokenExpiryDate:
          $ref: '#/components/schemas/visiondatetime'
          description: The date when this token will expire. This can be set as part of the request or configured for the entity scope of the Token. Optional.
          uniqueItems: false
        lossPreventionToken:
          description: The loss prevention one-way token that cannot be reversed to Card Holder data. This is included in a Payment for audit and tracking purposes.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenEntity:
          description: Optionally included is an entity identifier. This may be used within the Verifone Hosted Tokenisation Service to determine the scope of this Token and to enforce access rules.
          maxLength: 100
          uniqueItems: false
          type: string
        cardholderToken:
          description: The two-way token identifier used to represent the Cardholder data.
          maxLength: 100
          uniqueItems: false
          type: string
        tokenAssuranceLevel:
          $ref: '#/components/schemas/tokenassurancetype'
          description: The token assurance level. Optional.
          uniqueItems: false
      type: object
    visiontransactionrequest:
      title: Verifone Vision Transaction Request Model for OCH API v1.0.11
      description: The Vision OCH API Specification.
      uniqueItems: false
      required:
        - comTrxData
        - comMerchantData
      properties:
        comTrxData:
          $ref: '#/components/schemas/visioncomtrxdata'
          description: The transaction data. This object is mandatory for every transaction type and environment
          uniqueItems: false
        comMerchantData:
          $ref: '#/components/schemas/visionmerchantdata'
          description: The Merchant data related to the transaction executed. This is mandatory for every transaction type and environment
          uniqueItems: false
          type: object
        response:
          $ref: '#/components/schemas/visionresponsedata'
          description: Vision response data. This is optional.
          uniqueItems: false
          type: object
        extEcomTrxData:
          $ref: '#/components/schemas/visionecomdata'
          description: Additional transaction attributes related to Card not Present (CNP) transactions.
          uniqueItems: false
          type: object
        comTermData:
          $ref: '#/components/schemas/visionterminaldata'
          description: The Terminal data where the transaction executed. This is mandatory for every card-present transaction.
          uniqueItems: false
          type: object
        extEMVTrxData:
          $ref: '#/components/schemas/visionemvdata'
          description: EMV entries related to a transaction. This is mandatory for EMV transactions.
          uniqueItems: false
          type: object
        serverIdData:
          $ref: '#/components/schemas/visionserverdata'
          description: Optional value. This identifies the server where the transaction was performed. This is a Wynid specific item
          uniqueItems: false
          type: object
        token:
          $ref: '#/components/schemas/visiontokendata'
          description: Token data. This is optional.
          uniqueItems: false
          type: object
      type: object
    visionvadresponsebatch:
      description: This is the optional server data where the transaction originated.
      uniqueItems: false
      required:
        - code
        - length
        - results
      properties:
        code:
          description: The overall response code for the batch of transactions. Each individual transaction response also has a code.
          uniqueItems: false
          type: integer
        length:
          description: The number of transactions in the batch.
          uniqueItems: false
          type: string
        results:
          description: The array of transaction responses.
          items:
            $ref: '#/components/schemas/visionvadresponsedata'
            uniqueItems: false
          minItems: 1
          uniqueItems: true
          type: array
      type: object
    visionvadresponsedata:
      description: This is the optional server data where the transaction originated.
      uniqueItems: false
      required:
        - transId
        - dateTime
        - amount
        - transType
        - transStatus
        - transBankStatus
        - site
        - rank
        - canal
      properties:
        dateTime:
          description: brief Date and time
          uniqueItems: false
          type: string
        transApp:
          description: transaction application
          uniqueItems: false
          type: string
        fintraxDevise:
          description: brief fintraxDevise. Champ trdevisectrv_tc dans tpeweb v2.trans fintrax
          uniqueItems: false
          type: string
        transId:
          description: brief number of the transaction
          uniqueItems: false
          type: string
        holderChoice:
          description: brief holderChoice.Trindicatorselection_i field in tpewebv2.ftrans
          uniqueItems: false
          type: string
        categorieCarte:
          description: brief categorieCarte.Champ trnature_tc dans tpewebv2.ftrans
          uniqueItems: false
          type: string
        dateTimeRemise:
          description: brief Date and time of delivery
          uniqueItems: false
          type: string
        fintraxTaux:
          description: brief fintraxTaux.Field rate_tc in tpewebv2.ffintraxeligibilite
          uniqueItems: false
          type: string
        enseigne:
          description: enseigne details
          uniqueItems: false
          type: string
        rank:
          description: brief rank
          uniqueItems: false
          type: string
        currency:
          description: brief Devise (format alphab tique ISO 4217)
          uniqueItems: false
          type: string
        canal:
          description: brief canal
          uniqueItems: false
          type: string
        transStatus:
          description: short Status from transaction
          uniqueItems: false
          enum:
            - One to. the confirmation
            - Refuse
            - Accepted
        receiverBankCode:
          description: acquirer brief code
          uniqueItems: false
          type: string
        amount:
          description: brief amount
          uniqueItems: false
          type: string
        holderEmail:
          description: brief e-mail carrier
          uniqueItems: false
          type: string
        wallet:
          description: wallet
          uniqueItems: false
          type: string
        transBankStatus:
          description: brief Status of the transaction in the bank
          uniqueItems: false
          enum:
            - To send
            - Not applicable
            - NA
            - One to. the confirmation
            - One to. the capture
            - sent
            - Dilated
        rapprochement:
          description: brief Rapprochement
          uniqueItems: false
          type: string
        contract:
          description: brief contract.
          uniqueItems: false
          type: string
        _explicitType:
          description: Type is TransactionVADVO2
          uniqueItems: false
          type: string
        idMagasin:
          description: idMagasin
          uniqueItems: false
          type: string
        guaranteed:
          description: Letter Guarantee 3ds
          uniqueItems: false
          type: string
        paymentTicketEmail:
          description: brief paymentTicketEmail
          uniqueItems: false
          type: string
        motifRefus:
          description: brief reason for refusal.
          uniqueItems: false
          type: string
        trame:
          description: trame
          uniqueItems: false
          type: string
        remiseBankNum:
          description: brief bank rebate number (not paybox id)
          uniqueItems: false
          type: string
        fintraxMontant:
          description: brief fintraxMontant.Champ trmontctrv_l dans tpewebv2.ftransfintrax
          uniqueItems: false
          type: string
        refCommand:
          description: brief reference of the order
          uniqueItems: false
          type: string
        site:
          description: store name brief
          uniqueItems: false
          type: string
        transType:
          description: brief Transaction type
          uniqueItems: false
          enum:
            - Metier
            - Debit
            - Balance Request
            - Credit
            - Cancellation
        holderCountryCode:
          description: country brief
          uniqueItems: false
          type: string
        idAppel:
          description: brief call number
          uniqueItems: false
          type: string
        ticketGenerable:
          description: brief ticketGenerable. If '1' the mailing envelope is displayed
          uniqueItems: false
          type: string
        refArchivage:
          description: archiving details
          uniqueItems: false
          type: string
        idSousEnseigne:
          description: idSousEnseigne
          uniqueItems: false
          type: string
        groupe:
          description: group
          uniqueItems: false
          type: string
        clientCountryCode:
          description: brief pays client
          uniqueItems: false
          type: string
        threeDSStatus:
          description: brief 3DS Status
          uniqueItems: false
          type: string
        idEnseigne:
          description: idEnseigne
          uniqueItems: false
          type: string
        appelType:
          description: brief appelType
          uniqueItems: false
          type: string
      type: object
    wechat:
      title: WeChat payment instrument
      description: The WeChat attributes that may be associated with a payment. The names of the properties are kept the same as the underlying WeChat names for consistency.
      uniqueItems: false
      required:
        - appId
        - mchId
        - subMchId
        - nonceStr
        - sign
        - body
        - outTradeNo
        - totalFee
        - feeType
        - spbillCreateIP
        - authCode
        - instrumentType
      properties:
        instrumentType:
          description: To identify the type of instrument whether it is Wechat
          default: WECHAT
          uniqueItems: false
          type: string
        mchId:
          description: Vendor Id. The WeChat assigned Vendor (Merchant) Id.
          maxLength: 32
          uniqueItems: false
          type: string
        authCode:
          description: Specifies the authorization code for scanning a barcode/QR Code on Quick Pay
          maxLength: 128
          uniqueItems: false
          type: string
        sign:
          description: A generated signature for payment message. See section 4.3.1 Signature Algorithm in the WeChat Payment API.
          maxLength: 32
          uniqueItems: false
          type: string
        goodsTag:
          description: 'Specifies the label of goods, which is a parameter in the coupon feature for businesses'
          maxLength: 32
          uniqueItems: false
          type: string
        subMchId:
          description: Sub Vendor Id. The WeChat assigned Sub Vendor (Merchant) Id.
          maxLength: 32
          uniqueItems: false
          type: string
        body:
          description: A description of the sale item.
          maxLength: 32
          uniqueItems: false
          type: string
        feeType:
          $ref: '#/components/schemas/currencycode'
          description: This is actually the Currency code. Specified as a 3 charachter value using ISO 4217.
          uniqueItems: false
        deviceInfo:
          description: Specifies a Terminal Device Id. This is defined by the vendor/merchant.
          maxLength: 32
          uniqueItems: false
          type: string
        nonceStr:
          description: A generated nonce which must be 32 characters or less. See the WeChat guide for details of Random String Algorithm.
          maxLength: 32
          uniqueItems: false
          type: string
        totalFee:
          description: The Bid/Sale Price. Specifies the total order amount for all items. The units are expressed in cents as integers.
          maximum: 99999999
          uniqueItems: false
          type: integer
        appId:
          description: The Official Account Id as assigned by WeChat
          maxLength: 32
          uniqueItems: false
          type: string
        outTradeNo:
          description: The Merchant's order number.
          maxLength: 32
          uniqueItems: false
          type: string
        signType:
          description: 'There are only 2 signature algorithms supported, HMAC-SHA256 and MD5. If HMAC-SHA256 is used, this property must be present.'
          uniqueItems: false
          enum:
            - HMAC-SHA256
            - MD5
          type: string
        detail:
          description: Detailed product list described in JSON format. Please use CDATA tag to protect the JSON string when generating signature.
          maxLength: 600
          uniqueItems: false
          type: string
        attach:
          description: Allow vendors an additional field to be returned in the payment notification after submitting a payment to the Query Order API.
          maxLength: 127
          uniqueItems: false
          type: string
        spbillCreateIP:
          description: The IP v4 Address of the client that will call the WeChat Payment API. This is called the Terminal IP in the WeChat specification.
          maxLength: 15
          uniqueItems: false
          type: string
          format: ipv4
        subAppid:
          description: 'Sub Official Account Id. As assigned by WeChat. '
          maxLength: 32
          uniqueItems: false
          type: string
      type: object
    wechatresult:
      description: The WeChat attributes that are associated with a response or outcome for a payment. These match the WeChat property names.
      uniqueItems: false
      required:
        - returnCode
        - outcomeType
      properties:
        cashFee:
          $ref: '#/components/schemas/amountmoney'
          description: The cash amount and currency of the Fee Type as defined in ISO 4217. This will default to Yuan CNY.
          uniqueItems: false
        openId:
          description: The users open authentication id.
          maxLength: 128
          uniqueItems: false
          type: string
        fee:
          $ref: '#/components/schemas/amountmoney'
          description: The amount and currency of the Fee Type as defined in ISO 4217
          uniqueItems: false
        sign:
          description: A generated signature for payment message. See section 4.3.1 Signature Algorithm in the WeChat Payment API.
          maxLength: 32
          uniqueItems: false
          type: string
        resultCode:
          description: This is the actual result of the payment request.
          uniqueItems: false
          enum:
            - SUCCESS
            - FAIL
          type: string
        returnCode:
          description: This is the communications or format return code. The actual result of a payment is determined from the result_code.
          uniqueItems: false
          enum:
            - SUCCESS
            - FAIL
          type: string
        errCodeDes:
          description: The error code description that occurred during the payment processing.
          maxLength: 128
          uniqueItems: false
          type: string
        appId:
          description: The Official Account Id as assigned by WeChat
          maxLength: 32
          uniqueItems: false
          type: string
        subOpenId:
          description: The users sub-open authentication id.
          maxLength: 128
          uniqueItems: false
          type: string
        outTradeNo:
          description: 'Specifies the order number created within the Vendors'' system, which is consistent with request.'
          maxLength: 32
          uniqueItems: false
          type: string
        signType:
          description: 'There are only 2 signature algorithms supported, HMAC-SHA256 and MD5. If HMAC-SHA256 is used, this property must be present.'
          uniqueItems: false
          enum:
            - HMAC-SHA256
            - MD5
          type: string
        attach:
          description: 'Specifies vendor''s data package, which is returned as it is.'
          maxLength: 128
          uniqueItems: false
          type: string
        tradeType:
          description: The transaction performed was of a specific type. The WeChat documentation indicates that there is a type of MICROPAY (quick pay).
          maxLength: 16
          uniqueItems: false
          type: string
        subAppId:
          description: 'Sub Official Account Id. As assigned by WeChat. '
          maxLength: 32
          uniqueItems: false
          type: string
        timeEnd:
          description: The transaction creation time.
          uniqueItems: false
          type: string
          format: date-time
        mchId:
          description: Vendor Id. The WeChat assigned Vendor (Merchant) Id.
          maxLength: 32
          uniqueItems: false
          type: string
        bankType:
          description: The bank type of payment.
          maxLength: 16
          uniqueItems: false
          type: string
        subMchId:
          description: Sub Vendor Id. The WeChat assigned Sub Vendor (Merchant) Id.
          maxLength: 32
          uniqueItems: false
          type: string
        isSubscribe:
          description: 'For users who pay for transactions related to an official account, the value in this field states whether the user is current following the official account? I have no idea what that is meant to mean.'
          uniqueItems: false
          type: boolean
        deviceInfo:
          description: Specifies a Terminal Device Id. This is defined by the vendor/merchant.
          maxLength: 32
          uniqueItems: false
          type: string
        nonceStr:
          description: A generated nonce which must be 32 characters or less. See the WeChat guide for details of Random String Algorithm.
          maxLength: 32
          uniqueItems: false
          type: string
        transactionId:
          description: Specifies the WeChat payment order id
          maxLength: 32
          uniqueItems: false
          type: string
        outcomeType:
          description: To identify the type of outcome whether it is Acquirer Result
          default: WECHAT_RESULT
          uniqueItems: false
          type: string
        returnMsg:
          description: 'Empty for a successful return_code. This should contain and error discription, either ''Signature Failure'' or ''Parameter format checking error'''
          uniqueItems: false
          type: string
        errCode:
          description: The code of any error that occurred during the payment processing.
          maxLength: 32
          uniqueItems: false
          type: string
        subIsSubscribe:
          description: 'TFor users who pay for transactions related to an sub official account, the value in this field states whether the user is current following the official account.'
          uniqueItems: false
          type: boolean
      type: object
tags:
  - name: transactions
