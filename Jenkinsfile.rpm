pipeline {
    agent { label "master" }
    environment {
        TAG = sh(
            script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
            returnStdout: true
        )
    }
    stages {
        stage("RPM build") {
            steps {
                withDockerRegistry([credentialsId: "ecr:eu-west-1:aws-ecr", url: "https://099399110699.dkr.ecr.eu-west-1.amazonaws.com"]) {
                    sh "make rpm"
                    sh "mkdir artifacts"
                    sh "mv validation-service-${TAG}-1.el7.x86_64.rpm artifacts/"
                    sh "createrepo --database --update ./artifacts"
                    archiveArtifacts artifacts: 'artifacts/**', fingerprint: true
                }
            }
        }
    }
    post {
        always {
            configFileProvider([configFile(fileId: ".env", targetLocation: ".env")]) {
                sh "make clean"
            }

            cleanWs()
        }
        failure {
            slackSend channel: "#ci", color: "danger", message: "*Validation Service RPM FAILED* `${env.JOB_NAME}` on ${env.STAGE_NAME}\n- ${env.BUILD_DISPLAY_NAME}: ${env.RUN_DISPLAY_URL}\n- Commit: `${env.GIT_PREVIOUS_COMMIT}`", tokenCredentialId: "slack-api"
        }
        success {
            slackSend channel: "#ci", color: "good", message: "*Validation Service RPM SUCCESS* `${env.JOB_NAME}`\n- ${env.BUILD_DISPLAY_NAME}: ${env.RUN_DISPLAY_URL}\n- Commit: `${env.GIT_PREVIOUS_COMMIT}`", tokenCredentialId: "slack-api"
        }
    }
}
